{"version":3,"file":"959.8e8d6d12cdd63683.js","mappings":"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","names":["CrudService","constructor","Urls","http","this","url","apiUrl","getHttpHeaders","HttpHeaders","Accept","create","entity","endPoint","httpOptions","headers","id","entityWithoutId","post","getById","get","getAllEntity","update","patch","delete","t","i0","API_URLS","i1","_angular_core__WEBPACK_IMPORTED_MODULE_2__","Yz7","factory","ɵfac","providedIn","SetupService","eleccionSeleccionada","BehaviorSubject","eleccionOb$","asObservable","eleccion","seleccionarEleccion","next","obtenerEleccionSeleccionada","getMesasByEscuela","e","eleccion_id","params","HttpParams","set","getPartidosByEleccion","_angular_core__WEBPACK_IMPORTED_MODULE_3__","BaseEntity","static","arg","filtro","filter","x","getFilterText","toLowerCase","match","MesasElectoral","super","numeroMesa","toString","module","exports","globalState","restoreActiveElement","returnFocus","Promise","resolve","window","scrollX","y","scrollY","restoreFocusTimeout","setTimeout","previousActiveElement","HTMLElement","focus","document","body","RESTORE_FOCUS_TIMEOUT","scrollTo","privateProps","promise","WeakMap","innerParams","domCache","swalPrefix","swalClasses","reduce","acc","className","iconTypes","icon","consolePrefix","capitalizeFirstLetter","str","charAt","toUpperCase","slice","warn","message","console","join","error","previousWarnOnceMessages","warnAboutDeprecation","deprecatedParam","useInstead","includes","push","warnOnce","callIfFunction","hasToPromiseFn","toPromise","asPromise","isPromise","getContainer","querySelector","container","elementBySelector","selectorString","elementByClass","getPopup","popup","getIcon","getTitle","title","getHtmlContainer","getImage","image","getProgressSteps","getValidationMessage","getConfirmButton","actions","confirm","getCancelButton","cancel","getDenyButton","deny","getLoader","loader","getActions","getFooter","footer","getTimerProgressBar","getCloseButton","close","getFocusableElements","focusableElementsWithTabindex","querySelectorAll","focusableElementsWithTabindexSorted","Array","from","sort","a","b","tabindexA","parseInt","getAttribute","tabindexB","otherFocusableElements","otherFocusableElementsFiltered","el","Set","concat","isVisible$1","isModal","hasClass","shown","isToast","toast","setInnerHtml","elem","html","textContent","parsed","DOMParser","parseFromString","childNodes","forEach","child","appendChild","HTMLVideoElement","HTMLAudioElement","cloneNode","classList","split","i","length","contains","applyCustomClass","removeCustomClasses","Object","values","showClass","remove","customClass","addClass","getInput$1","inputClass","checkbox","radio","range","input","focusInput","type","val","value","toggleClass","target","condition","Boolean","isArray","add","removeClass","getDirectChildByClass","children","applyNumericalStyle","property","style","removeProperty","show","display","arguments","undefined","hide","setStyle","parent","selector","toggle","offsetWidth","offsetHeight","getClientRects","isScrollable","scrollHeight","clientHeight","hasCssAnimation","getComputedStyle","animDuration","parseFloat","getPropertyValue","transDuration","animateTimerProgressBar","timer","reset","timerProgressBar","transition","width","isNodeEnv","sweetHTML","file","select","label","textarea","replace","resetValidationMessage$1","currentInstance","resetValidationMessage","init","oldContainerExisted","resetOldContainer","oldContainer","documentElement","createElement","targetElement","getTarget","setAttribute","setupAccessibility","direction","rtl","setupRTL","addInputChangeListeners","rangeOutput","oninput","onchange","parseHtmlToContainer","param","handleObject","jquery","handleJqueryElem","animationEndEvent","testEl","transEndEventNames","WebkitAnimation","animation","prototype","hasOwnProperty","call","renderActions","instance","showConfirmButton","showDenyButton","showCancelButton","renderButtons","confirmButton","denyButton","cancelButton","renderButton","handleButtonsStyling","buttonsStyling","styled","confirmButtonColor","backgroundColor","denyButtonColor","cancelButtonColor","reverseButtons","insertBefore","loaderHtml","button","buttonType","renderContainer","handleBackdropParam","backdrop","background","handlePositionParam","position","center","handleGrowParam","grow","growClass","inputClasses","showInput","renderInputType","inputContainer","getInputContainer","inputAutoFocus","setAttributes","inputAttributes","removeAttributes","attributes","attrName","name","removeAttribute","attr","setCustomClass","setInputPlaceholder","placeholder","inputPlaceholder","setInputLabel","prependTo","inputLabel","labelClass","innerText","insertAdjacentElement","inputType","checkAndSetInputValue","inputValue","text","email","password","number","tel","rangeInput","disabled","selected","checkboxContainer","checked","initialPopupWidth","MutationObserver","textareaResizeHandler","textareaWidth","marginLeft","marginRight","getMargin","observe","attributeFilter","renderContent","htmlContainer","renderInput","rerender","applyStyles","iconType","setColor","adjustSuccessIconBackgroundColor","popupBackgroundColor","successIconParts","setContent","newContent","oldContent","innerHTML","iconHtml","iconContent","question","warning","info","trim","iconColor","color","borderColor","sel","content","addClasses$1","modal","createStepElement","step","stepEl","createLineElement","lineEl","progressStepsDistance","render","renderPopup","padding","renderProgressSteps","progressStepsContainer","progressSteps","currentProgressStep","index","renderIcon","keys","indexOf","renderImage","imageUrl","imageAlt","imageWidth","imageHeight","renderTitle","titleText","renderCloseButton","closeButton","closeButtonHtml","showCloseButton","closeButtonAriaLabel","renderFooter","didRender","clickConfirm","click","DismissReason","freeze","esc","removeKeydownHandler","keydownTarget","keydownHandlerAdded","removeEventListener","keydownHandler","capture","keydownListenerCapture","setFocus","increment","focusableElements","arrowKeysNextButton","arrowKeysPreviousButton","event","dismissWith","isComposing","keyCode","stopKeydownPropagation","stopPropagation","key","handleEnter","handleTab","handleArrows","handleEsc","allowEnterKey","getInput","outerHTML","preventDefault","btnIndex","shiftKey","activeElement","sibling","buttonToFocus","HTMLButtonElement","allowEscapeKey","privateMethods","swalPromiseResolve","swalPromiseReject","unsetAriaHidden","hasAttribute","addBottomPaddingForTallPopups","ua","navigator","userAgent","iOS","webkit","innerHeight","bottomPanelHeight","paddingBottom","lockBodyScroll","preventTouchMove","ontouchstart","shouldPreventTouchMove","ontouchmove","isStylus","isZoom","tagName","touches","touchType","previousBodyPadding","fixScrollbar","paddingRight","measureScrollbar","scrollDiv","scrollbarWidth","getBoundingClientRect","clientWidth","removeChild","removePopupAndResetState","didClose","triggerDidCloseAndDispose","then","test","undoIOSfix","iosfix","offset","top","scrollTop","removeBodyClasses","resolveValue","prepareResolveValue","triggerClosePopup","isAwaitingPromise","isDismissed","handleAwaitingPromise","hideClass","handlePopupAnimation","rejectPromise","_destroy","isConfirmed","isDenied","assign","animationIsSupported","willClose","animatePopup","swalCloseEventFinishedCallback","bind","addEventListener","showLoading","buttonToReplace","Swal","replaceButton","parentNode","loading","getCheckboxValue","getRadioValue","getFileValue","files","handleInputOptions","processInputOptions","inputOptions","populateInputOptions","formatInputOptions","hideLoading","handleInputValue","catch","err","renderOption","optionLabel","optionValue","option","isSelected","inputOption","optgroup","o","radioValue","radioLabel","radioInput","radioLabelElement","radios","result","Map","valueFormatted","handleConfirmOrDenyWithInput","getInputValue","inputAutoTrim","inputValidator","handleInputValidator","checkValidity","enableButtons","showValidationMessage","validationMessage","disableInput","enableInput","showLoaderOnDeny","preDeny","preDenyValue","rejectWith","succeedWith","showLoaderOnConfirm","preConfirm","preConfirmValue","showRelatedButton","getElementsByClassName","setButtonsDisabled","buttons","setInputDisabled","disableButtons","inputerror","defaultParams","template","heightAuto","allowOutsideClick","confirmButtonText","confirmButtonAriaLabel","denyButtonText","denyButtonAriaLabel","cancelButtonText","cancelButtonAriaLabel","focusConfirm","focusDeny","focusCancel","returnInputValueOnDeny","willOpen","didOpen","didDestroy","scrollbarPadding","updatableParams","deprecatedParams","toastIncompatibleParams","isValidParameter","paramName","isUpdatableParameter","isDeprecatedParameter","checkIfParamIsValid","checkIfToastParamIsValid","checkIfParamIsDeprecated","isDeprecated","validUpdatableParams","filterValidParams","updatedParams","defineProperties","writable","enumerable","disposeSwal","disposeWeakMaps","unsetWeakMaps","disableLoading","closePopup","closeModal","closeToast","obj","instanceMethods","__proto__","handleToastClick","onclick","isAnyButtonShown","ignoreOutsideClick","handleModalMousedown","onmousedown","onmouseup","handleContainerMousedown","handleModalClick","isElement","Element","isJqueryElement","stopTimer","timeout","stopTimerProgressBar","timerProgressBarWidth","timerProgressBarFullWidth","timerProgressBarPercent","stop","resumeTimer","remaining","start","bodyClickListenerAdded","clickHandlers","bodyClickListener","fire","staticMethods","argsToParams","args","bindClickHandler","clickCancel","clickDeny","enableLoading","_len","_key","getIconContent","getInputLabel","getTimerLeft","increaseTimer","n","increase","isLoading","isTimerRunning","isRunning","isVisible","mixin","mixinParams","MixinSwal","_main","priorityMixinParams","toggleTimer","running","Timer","callback","delay","started","Date","clearTimeout","getTime","swalStringParams","getSwalParams","templateContent","swalParams","showWarningsForAttributes","JSON","parse","getSwalFunctionParams","swalFunctions","Function","getSwalButtons","swalButtons","getSwalImage","getSwalIcon","getSwalInput","optionName","getSwalStringParams","paramNames","tag","showWarningsForElements","allowedElements","allowedAttributes","attribute","openPopup","initialBodyOverflow","overflowY","addClasses","setScrollingVisibility","fixScrollContainer","swalOpenAnimationFinished","iOSfix","MSStream","platform","maxTouchPoints","setProperty","defaultInputValidators","string","setParameters","setDefaultInputValidators","validateCustomTargetElement","SweetAlert","outerParams","userParams","showWarningsForParams","prepareParams","populateDomCache","swalPromise","onFulfilled","finally","onFinally","reject","dismiss","handleConfirmButtonClick","handleDenyButtonClick","handleCancelButtonClick","handlePopupClick","addKeydownHandler","handleInputOptionsAndValue","setupTimer","initFocus","templateParams","getTemplateParams","blurActiveElement","focusButton","blur","language","location","host","now","initiationDate","localStorage","getItem","pointerEvents","ukrainianAnthem","src","loop","play","setItem","version","default","Sweetalert2","swal","sweetAlert","getElementsByTagName","styleSheet","cssText"],"sourceRoot":"webpack:///","sources":["./src/app/Shared/services/crud.service.ts","./src/app/Shared/services/setup.service.ts","./src/app/models/BaseEntity.ts","./src/app/models/MesaElectoral.ts","./node_modules/sweetalert2/dist/sweetalert2.all.js"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable, Inject } from '@angular/core';\r\nimport { API_URLS, AppSetings } from 'src/app/app-setting/app-config.token';\r\nimport { BaseEntity } from 'src/app/models/BaseEntity';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CrudService {\r\n\r\n  url: string;\r\n  constructor(@Inject(API_URLS) private Urls: AppSetings, private http: HttpClient) {\r\n    this.url = this.Urls.apiUrl;\r\n\r\n  }\r\n\r\n  getHttpHeaders(): HttpHeaders {\r\n    return new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Accept': 'application/json'\r\n    });\r\n  }\r\n\r\n  create<T extends BaseEntity>(entity: T) {\r\n    const endPoint = this.url + entity.endPoint;\r\n\r\n    let httpOptions = {\r\n      headers: this.getHttpHeaders(),\r\n    };\r\n\r\n    const { id, ...entityWithoutId } = entity;\r\n\r\n    return this.http.post<T>(endPoint, entityWithoutId, httpOptions);\r\n\r\n  }\r\n\r\n  getById<T extends BaseEntity>(entity: T){\r\n    const endPoint = this.url + entity.endPoint + `/${entity.id}`;\r\n\r\n    let httpOptions = {\r\n      headers: this.getHttpHeaders(),\r\n    };\r\n\r\n    return this.http.get<T>(endPoint, httpOptions);\r\n  }\r\n\r\n  getAllEntity<T extends BaseEntity>(entity: T) {\r\n\r\n    const endPoint = this.url + entity.endPoint;\r\n\r\n    let httpOptions = {\r\n      headers: this.getHttpHeaders(),\r\n    };\r\n\r\n    return this.http.get<T[]>(endPoint, httpOptions);\r\n  }\r\n\r\n  update<T extends BaseEntity>(entity: T){\r\n    const endPoint = this.url + entity.endPoint + `/${entity.id}`;\r\n\r\n    let httpOptions = {\r\n      headers: this.getHttpHeaders(),\r\n    };\r\n\r\n    return this.http.patch<T>(endPoint, entity, httpOptions);\r\n  }\r\n\r\n  delete<T extends BaseEntity>(entity: T){\r\n    const endPoint = this.url + entity.endPoint + `/${entity.id}`;\r\n\r\n    let httpOptions = {\r\n      headers: this.getHttpHeaders(),\r\n    };\r\n\r\n    return this.http.delete(endPoint, httpOptions)\r\n\r\n  }\r\n\r\n\r\n}\r\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Injectable, Inject } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { API_URLS, AppSetings } from 'src/app/app-setting/app-config.token';\r\n\r\nimport { Eleccion } from 'src/app/models/Elecciones';\r\nimport { Escuela } from 'src/app/models/Escuela';\r\nimport { ListaElectoral } from 'src/app/models/ListaElectoral';\r\nimport { MesasElectoral } from 'src/app/models/MesaElectoral';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SetupService {\r\n  public eleccionSeleccionada = new BehaviorSubject<Eleccion | null>(null);\r\n  public eleccionOb$ = this.eleccionSeleccionada.asObservable();\r\n  private eleccion: Eleccion | null = null;\r\n  url: string = \"\";\r\n\r\n  constructor(@Inject(API_URLS) private Urls: AppSetings, private http: HttpClient) {\r\n    this.url = this.Urls.apiUrl;\r\n\r\n  }\r\n\r\n  seleccionarEleccion(eleccion: Eleccion): void {\r\n    this.eleccion = eleccion;\r\n    this.eleccionSeleccionada.next(eleccion);\r\n  }\r\n\r\n  obtenerEleccionSeleccionada() {\r\n    return this.eleccionSeleccionada.asObservable();\r\n  }\r\n\r\n  getHttpHeaders(): HttpHeaders {\r\n    return new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Accept': 'application/json'\r\n    });\r\n  }\r\n\r\n  getMesasByEscuela(e: Escuela) {\r\n    const endPoint = this.url + \"mesas/byEscuela\";\r\n    const eleccion_id = this.eleccion ? this.eleccion.id : 0;\r\n\r\n    const params = new HttpParams()\r\n      .set('idEscuela', e.id)\r\n      .set('idEleccion', eleccion_id);\r\n\r\n\r\n    const httpOptions = {\r\n      headers: this.getHttpHeaders(),\r\n      params: params,\r\n    };\r\n\r\n    return this.http.get<MesasElectoral[]>(endPoint, httpOptions);\r\n  }\r\n\r\n  getPartidosByEleccion(){\r\n    const endPoint = this.url + \"listas/obtenerPorEleccion\";\r\n    const eleccion_id = this.eleccion ? this.eleccion.id : 0;\r\n\r\n    const params = new HttpParams()\r\n      .set('idEleccion', eleccion_id);\r\n\r\n\r\n    const httpOptions = {\r\n      headers: this.getHttpHeaders(),\r\n      params: params,\r\n    };\r\n\r\n    return this.http.get<ListaElectoral[]>(endPoint, httpOptions);\r\n  }\r\n}\r\n\r\n\r\n","export abstract class  BaseEntity {\r\n\r\n  id!: number;\r\n  abstract get endPoint(): string;\r\n  abstract getFilterText(): string;\r\n  public  static endURL(): string {return \"\"};\r\n\r\n  static Filtrar<Type extends BaseEntity>(arg: Type[], filtro: string): Type[] {\r\n    if (filtro == \"\") {\r\n        return arg;\r\n    } else {\r\n        let result = arg.filter(\r\n            (x: Type) => {\r\n                return x.getFilterText().toLowerCase().match(filtro.toLowerCase())\r\n            }\r\n        );\r\n        return result;\r\n    }\r\n}\r\n\r\n}\r\n","import { BaseEntity } from \"./BaseEntity\";\r\nimport { Eleccion } from \"./Elecciones\";\r\nimport { Escuela } from \"./Escuela\";\r\nimport { ResultadoMesa } from \"./ResultadoMesa\";\r\n\r\nexport class MesasElectoral extends BaseEntity{\r\n  numeroMesa!: number;\r\n  eleccion_id!: number;\r\n  escuela_id!: number;\r\n  cantidad_votantes!: number;\r\n\r\n  Escuela!: Escuela;\r\n  Eleccion!: Eleccion;\r\n  Resultado!: ResultadoMesa;\r\n\r\n  constructor(){\r\n    super();\r\n  }\r\n\r\n  override get endPoint(): string {\r\n    return \"mesas\";\r\n  }\r\n\r\n  override getFilterText(): string {\r\n    return `${this.numeroMesa.toString()}` ;\r\n  }\r\n\r\n}\r\n","/*!\n* sweetalert2 v11.7.12\n* Released under the MIT License.\n*/\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Sweetalert2 = factory());\n})(this, (function () { 'use strict';\n\n  const RESTORE_FOCUS_TIMEOUT = 100;\n\n  /** @type {GlobalState} */\n  const globalState = {};\n  const focusPreviousActiveElement = () => {\n    if (globalState.previousActiveElement instanceof HTMLElement) {\n      globalState.previousActiveElement.focus();\n      globalState.previousActiveElement = null;\n    } else if (document.body) {\n      document.body.focus();\n    }\n  };\n\n  /**\n   * Restore previous active (focused) element\n   *\n   * @param {boolean} returnFocus\n   * @returns {Promise<void>}\n   */\n  const restoreActiveElement = returnFocus => {\n    return new Promise(resolve => {\n      if (!returnFocus) {\n        return resolve();\n      }\n      const x = window.scrollX;\n      const y = window.scrollY;\n      globalState.restoreFocusTimeout = setTimeout(() => {\n        focusPreviousActiveElement();\n        resolve();\n      }, RESTORE_FOCUS_TIMEOUT); // issues/900\n\n      window.scrollTo(x, y);\n    });\n  };\n\n  /**\n   * This module contains `WeakMap`s for each effectively-\"private  property\" that a `Swal` has.\n   * For example, to set the private property \"foo\" of `this` to \"bar\", you can `privateProps.foo.set(this, 'bar')`\n   * This is the approach that Babel will probably take to implement private methods/fields\n   *   https://github.com/tc39/proposal-private-methods\n   *   https://github.com/babel/babel/pull/7555\n   * Once we have the changes from that PR in Babel, and our core class fits reasonable in *one module*\n   *   then we can use that language feature.\n   */\n\n  var privateProps = {\n    promise: new WeakMap(),\n    innerParams: new WeakMap(),\n    domCache: new WeakMap()\n  };\n\n  const swalPrefix = 'swal2-';\n\n  /**\n   * @typedef\n   * { | 'container'\n   *   | 'shown'\n   *   | 'height-auto'\n   *   | 'iosfix'\n   *   | 'popup'\n   *   | 'modal'\n   *   | 'no-backdrop'\n   *   | 'no-transition'\n   *   | 'toast'\n   *   | 'toast-shown'\n   *   | 'show'\n   *   | 'hide'\n   *   | 'close'\n   *   | 'title'\n   *   | 'html-container'\n   *   | 'actions'\n   *   | 'confirm'\n   *   | 'deny'\n   *   | 'cancel'\n   *   | 'default-outline'\n   *   | 'footer'\n   *   | 'icon'\n   *   | 'icon-content'\n   *   | 'image'\n   *   | 'input'\n   *   | 'file'\n   *   | 'range'\n   *   | 'select'\n   *   | 'radio'\n   *   | 'checkbox'\n   *   | 'label'\n   *   | 'textarea'\n   *   | 'inputerror'\n   *   | 'input-label'\n   *   | 'validation-message'\n   *   | 'progress-steps'\n   *   | 'active-progress-step'\n   *   | 'progress-step'\n   *   | 'progress-step-line'\n   *   | 'loader'\n   *   | 'loading'\n   *   | 'styled'\n   *   | 'top'\n   *   | 'top-start'\n   *   | 'top-end'\n   *   | 'top-left'\n   *   | 'top-right'\n   *   | 'center'\n   *   | 'center-start'\n   *   | 'center-end'\n   *   | 'center-left'\n   *   | 'center-right'\n   *   | 'bottom'\n   *   | 'bottom-start'\n   *   | 'bottom-end'\n   *   | 'bottom-left'\n   *   | 'bottom-right'\n   *   | 'grow-row'\n   *   | 'grow-column'\n   *   | 'grow-fullscreen'\n   *   | 'rtl'\n   *   | 'timer-progress-bar'\n   *   | 'timer-progress-bar-container'\n   *   | 'scrollbar-measure'\n   *   | 'icon-success'\n   *   | 'icon-warning'\n   *   | 'icon-info'\n   *   | 'icon-question'\n   *   | 'icon-error'\n   * } SwalClass\n   * @typedef {Record<SwalClass, string>} SwalClasses\n   */\n\n  /**\n   * @typedef {'success' | 'warning' | 'info' | 'question' | 'error'} SwalIcon\n   * @typedef {Record<SwalIcon, string>} SwalIcons\n   */\n\n  /** @type {SwalClass[]} */\n  const classNames = ['container', 'shown', 'height-auto', 'iosfix', 'popup', 'modal', 'no-backdrop', 'no-transition', 'toast', 'toast-shown', 'show', 'hide', 'close', 'title', 'html-container', 'actions', 'confirm', 'deny', 'cancel', 'default-outline', 'footer', 'icon', 'icon-content', 'image', 'input', 'file', 'range', 'select', 'radio', 'checkbox', 'label', 'textarea', 'inputerror', 'input-label', 'validation-message', 'progress-steps', 'active-progress-step', 'progress-step', 'progress-step-line', 'loader', 'loading', 'styled', 'top', 'top-start', 'top-end', 'top-left', 'top-right', 'center', 'center-start', 'center-end', 'center-left', 'center-right', 'bottom', 'bottom-start', 'bottom-end', 'bottom-left', 'bottom-right', 'grow-row', 'grow-column', 'grow-fullscreen', 'rtl', 'timer-progress-bar', 'timer-progress-bar-container', 'scrollbar-measure', 'icon-success', 'icon-warning', 'icon-info', 'icon-question', 'icon-error'];\n  const swalClasses = classNames.reduce((acc, className) => {\n    acc[className] = swalPrefix + className;\n    return acc;\n  }, /** @type {SwalClasses} */{});\n\n  /** @type {SwalIcon[]} */\n  const icons = ['success', 'warning', 'info', 'question', 'error'];\n  const iconTypes = icons.reduce((acc, icon) => {\n    acc[icon] = swalPrefix + icon;\n    return acc;\n  }, /** @type {SwalIcons} */{});\n\n  const consolePrefix = 'SweetAlert2:';\n\n  /**\n   * Capitalize the first letter of a string\n   *\n   * @param {string} str\n   * @returns {string}\n   */\n  const capitalizeFirstLetter = str => str.charAt(0).toUpperCase() + str.slice(1);\n\n  /**\n   * Standardize console warnings\n   *\n   * @param {string | string[]} message\n   */\n  const warn = message => {\n    console.warn(`${consolePrefix} ${typeof message === 'object' ? message.join(' ') : message}`);\n  };\n\n  /**\n   * Standardize console errors\n   *\n   * @param {string} message\n   */\n  const error = message => {\n    console.error(`${consolePrefix} ${message}`);\n  };\n\n  /**\n   * Private global state for `warnOnce`\n   *\n   * @type {string[]}\n   * @private\n   */\n  const previousWarnOnceMessages = [];\n\n  /**\n   * Show a console warning, but only if it hasn't already been shown\n   *\n   * @param {string} message\n   */\n  const warnOnce = message => {\n    if (!previousWarnOnceMessages.includes(message)) {\n      previousWarnOnceMessages.push(message);\n      warn(message);\n    }\n  };\n\n  /**\n   * Show a one-time console warning about deprecated params/methods\n   *\n   * @param {string} deprecatedParam\n   * @param {string} useInstead\n   */\n  const warnAboutDeprecation = (deprecatedParam, useInstead) => {\n    warnOnce(`\"${deprecatedParam}\" is deprecated and will be removed in the next major release. Please use \"${useInstead}\" instead.`);\n  };\n\n  /**\n   * If `arg` is a function, call it (with no arguments or context) and return the result.\n   * Otherwise, just pass the value through\n   *\n   * @param {Function | any} arg\n   * @returns {any}\n   */\n  const callIfFunction = arg => typeof arg === 'function' ? arg() : arg;\n\n  /**\n   * @param {any} arg\n   * @returns {boolean}\n   */\n  const hasToPromiseFn = arg => arg && typeof arg.toPromise === 'function';\n\n  /**\n   * @param {any} arg\n   * @returns {Promise<any>}\n   */\n  const asPromise = arg => hasToPromiseFn(arg) ? arg.toPromise() : Promise.resolve(arg);\n\n  /**\n   * @param {any} arg\n   * @returns {boolean}\n   */\n  const isPromise = arg => arg && Promise.resolve(arg) === arg;\n\n  /**\n   * Gets the popup container which contains the backdrop and the popup itself.\n   *\n   * @returns {HTMLElement | null}\n   */\n  const getContainer = () => document.body.querySelector(`.${swalClasses.container}`);\n\n  /**\n   * @param {string} selectorString\n   * @returns {HTMLElement | null}\n   */\n  const elementBySelector = selectorString => {\n    const container = getContainer();\n    return container ? container.querySelector(selectorString) : null;\n  };\n\n  /**\n   * @param {string} className\n   * @returns {HTMLElement | null}\n   */\n  const elementByClass = className => {\n    return elementBySelector(`.${className}`);\n  };\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getPopup = () => elementByClass(swalClasses.popup);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getIcon = () => elementByClass(swalClasses.icon);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getIconContent = () => elementByClass(swalClasses['icon-content']);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getTitle = () => elementByClass(swalClasses.title);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getHtmlContainer = () => elementByClass(swalClasses['html-container']);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getImage = () => elementByClass(swalClasses.image);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getProgressSteps = () => elementByClass(swalClasses['progress-steps']);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getValidationMessage = () => elementByClass(swalClasses['validation-message']);\n\n  /**\n   * @returns {HTMLButtonElement | null}\n   */\n  const getConfirmButton = () => /** @type {HTMLButtonElement} */elementBySelector(`.${swalClasses.actions} .${swalClasses.confirm}`);\n\n  /**\n   * @returns {HTMLButtonElement | null}\n   */\n  const getCancelButton = () => /** @type {HTMLButtonElement} */elementBySelector(`.${swalClasses.actions} .${swalClasses.cancel}`);\n\n  /**\n   * @returns {HTMLButtonElement | null}\n   */\n  const getDenyButton = () => /** @type {HTMLButtonElement} */elementBySelector(`.${swalClasses.actions} .${swalClasses.deny}`);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getInputLabel = () => elementByClass(swalClasses['input-label']);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getLoader = () => elementBySelector(`.${swalClasses.loader}`);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getActions = () => elementByClass(swalClasses.actions);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getFooter = () => elementByClass(swalClasses.footer);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getTimerProgressBar = () => elementByClass(swalClasses['timer-progress-bar']);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getCloseButton = () => elementByClass(swalClasses.close);\n\n  // https://github.com/jkup/focusable/blob/master/index.js\n  const focusable = `\n  a[href],\n  area[href],\n  input:not([disabled]),\n  select:not([disabled]),\n  textarea:not([disabled]),\n  button:not([disabled]),\n  iframe,\n  object,\n  embed,\n  [tabindex=\"0\"],\n  [contenteditable],\n  audio[controls],\n  video[controls],\n  summary\n`;\n  /**\n   * @returns {HTMLElement[]}\n   */\n  const getFocusableElements = () => {\n    /** @type {NodeListOf<HTMLElement>} */\n    const focusableElementsWithTabindex = getPopup().querySelectorAll('[tabindex]:not([tabindex=\"-1\"]):not([tabindex=\"0\"])');\n    const focusableElementsWithTabindexSorted = Array.from(focusableElementsWithTabindex)\n    // sort according to tabindex\n    .sort((a, b) => {\n      const tabindexA = parseInt(a.getAttribute('tabindex'));\n      const tabindexB = parseInt(b.getAttribute('tabindex'));\n      if (tabindexA > tabindexB) {\n        return 1;\n      } else if (tabindexA < tabindexB) {\n        return -1;\n      }\n      return 0;\n    });\n\n    /** @type {NodeListOf<HTMLElement>} */\n    const otherFocusableElements = getPopup().querySelectorAll(focusable);\n    const otherFocusableElementsFiltered = Array.from(otherFocusableElements).filter(el => el.getAttribute('tabindex') !== '-1');\n    return [...new Set(focusableElementsWithTabindexSorted.concat(otherFocusableElementsFiltered))].filter(el => isVisible$1(el));\n  };\n\n  /**\n   * @returns {boolean}\n   */\n  const isModal = () => {\n    return hasClass(document.body, swalClasses.shown) && !hasClass(document.body, swalClasses['toast-shown']) && !hasClass(document.body, swalClasses['no-backdrop']);\n  };\n\n  /**\n   * @returns {boolean}\n   */\n  const isToast = () => {\n    return getPopup() && hasClass(getPopup(), swalClasses.toast);\n  };\n\n  /**\n   * @returns {boolean}\n   */\n  const isLoading = () => {\n    return getPopup().hasAttribute('data-loading');\n  };\n\n  /**\n   * Securely set innerHTML of an element\n   * https://github.com/sweetalert2/sweetalert2/issues/1926\n   *\n   * @param {HTMLElement} elem\n   * @param {string} html\n   */\n  const setInnerHtml = (elem, html) => {\n    elem.textContent = '';\n    if (html) {\n      const parser = new DOMParser();\n      const parsed = parser.parseFromString(html, `text/html`);\n      Array.from(parsed.querySelector('head').childNodes).forEach(child => {\n        elem.appendChild(child);\n      });\n      Array.from(parsed.querySelector('body').childNodes).forEach(child => {\n        if (child instanceof HTMLVideoElement || child instanceof HTMLAudioElement) {\n          elem.appendChild(child.cloneNode(true)); // https://github.com/sweetalert2/sweetalert2/issues/2507\n        } else {\n          elem.appendChild(child);\n        }\n      });\n    }\n  };\n\n  /**\n   * @param {HTMLElement} elem\n   * @param {string} className\n   * @returns {boolean}\n   */\n  const hasClass = (elem, className) => {\n    if (!className) {\n      return false;\n    }\n    const classList = className.split(/\\s+/);\n    for (let i = 0; i < classList.length; i++) {\n      if (!elem.classList.contains(classList[i])) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  /**\n   * @param {HTMLElement} elem\n   * @param {SweetAlertOptions} params\n   */\n  const removeCustomClasses = (elem, params) => {\n    Array.from(elem.classList).forEach(className => {\n      if (!Object.values(swalClasses).includes(className) && !Object.values(iconTypes).includes(className) && !Object.values(params.showClass).includes(className)) {\n        elem.classList.remove(className);\n      }\n    });\n  };\n\n  /**\n   * @param {HTMLElement} elem\n   * @param {SweetAlertOptions} params\n   * @param {string} className\n   */\n  const applyCustomClass = (elem, params, className) => {\n    removeCustomClasses(elem, params);\n    if (params.customClass && params.customClass[className]) {\n      if (typeof params.customClass[className] !== 'string' && !params.customClass[className].forEach) {\n        warn(`Invalid type of customClass.${className}! Expected string or iterable object, got \"${typeof params.customClass[className]}\"`);\n        return;\n      }\n      addClass(elem, params.customClass[className]);\n    }\n  };\n\n  /**\n   * @param {HTMLElement} popup\n   * @param {import('./renderers/renderInput').InputClass} inputClass\n   * @returns {HTMLInputElement | null}\n   */\n  const getInput$1 = (popup, inputClass) => {\n    if (!inputClass) {\n      return null;\n    }\n    switch (inputClass) {\n      case 'select':\n      case 'textarea':\n      case 'file':\n        return popup.querySelector(`.${swalClasses.popup} > .${swalClasses[inputClass]}`);\n      case 'checkbox':\n        return popup.querySelector(`.${swalClasses.popup} > .${swalClasses.checkbox} input`);\n      case 'radio':\n        return popup.querySelector(`.${swalClasses.popup} > .${swalClasses.radio} input:checked`) || popup.querySelector(`.${swalClasses.popup} > .${swalClasses.radio} input:first-child`);\n      case 'range':\n        return popup.querySelector(`.${swalClasses.popup} > .${swalClasses.range} input`);\n      default:\n        return popup.querySelector(`.${swalClasses.popup} > .${swalClasses.input}`);\n    }\n  };\n\n  /**\n   * @param {HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement} input\n   */\n  const focusInput = input => {\n    input.focus();\n\n    // place cursor at end of text in text input\n    if (input.type !== 'file') {\n      // http://stackoverflow.com/a/2345915\n      const val = input.value;\n      input.value = '';\n      input.value = val;\n    }\n  };\n\n  /**\n   * @param {HTMLElement | HTMLElement[] | null} target\n   * @param {string | string[] | readonly string[]} classList\n   * @param {boolean} condition\n   */\n  const toggleClass = (target, classList, condition) => {\n    if (!target || !classList) {\n      return;\n    }\n    if (typeof classList === 'string') {\n      classList = classList.split(/\\s+/).filter(Boolean);\n    }\n    classList.forEach(className => {\n      if (Array.isArray(target)) {\n        target.forEach(elem => {\n          condition ? elem.classList.add(className) : elem.classList.remove(className);\n        });\n      } else {\n        condition ? target.classList.add(className) : target.classList.remove(className);\n      }\n    });\n  };\n\n  /**\n   * @param {HTMLElement | HTMLElement[] | null} target\n   * @param {string | string[] | readonly string[]} classList\n   */\n  const addClass = (target, classList) => {\n    toggleClass(target, classList, true);\n  };\n\n  /**\n   * @param {HTMLElement | HTMLElement[] | null} target\n   * @param {string | string[] | readonly string[]} classList\n   */\n  const removeClass = (target, classList) => {\n    toggleClass(target, classList, false);\n  };\n\n  /**\n   * Get direct child of an element by class name\n   *\n   * @param {HTMLElement} elem\n   * @param {string} className\n   * @returns {HTMLElement | undefined}\n   */\n  const getDirectChildByClass = (elem, className) => {\n    const children = Array.from(elem.children);\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      if (child instanceof HTMLElement && hasClass(child, className)) {\n        return child;\n      }\n    }\n  };\n\n  /**\n   * @param {HTMLElement} elem\n   * @param {string} property\n   * @param {*} value\n   */\n  const applyNumericalStyle = (elem, property, value) => {\n    if (value === `${parseInt(value)}`) {\n      value = parseInt(value);\n    }\n    if (value || parseInt(value) === 0) {\n      elem.style[property] = typeof value === 'number' ? `${value}px` : value;\n    } else {\n      elem.style.removeProperty(property);\n    }\n  };\n\n  /**\n   * @param {HTMLElement | null} elem\n   * @param {string} display\n   */\n  const show = function (elem) {\n    let display = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'flex';\n    elem && (elem.style.display = display);\n  };\n\n  /**\n   * @param {HTMLElement | null} elem\n   */\n  const hide = elem => {\n    elem && (elem.style.display = 'none');\n  };\n\n  /**\n   * @param {HTMLElement} parent\n   * @param {string} selector\n   * @param {string} property\n   * @param {string} value\n   */\n  const setStyle = (parent, selector, property, value) => {\n    /** @type {HTMLElement} */\n    const el = parent.querySelector(selector);\n    if (el) {\n      el.style[property] = value;\n    }\n  };\n\n  /**\n   * @param {HTMLElement} elem\n   * @param {any} condition\n   * @param {string} display\n   */\n  const toggle = function (elem, condition) {\n    let display = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'flex';\n    condition ? show(elem, display) : hide(elem);\n  };\n\n  /**\n   * borrowed from jquery $(elem).is(':visible') implementation\n   *\n   * @param {HTMLElement} elem\n   * @returns {boolean}\n   */\n  const isVisible$1 = elem => !!(elem && (elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length));\n\n  /**\n   * @returns {boolean}\n   */\n  const allButtonsAreHidden = () => !isVisible$1(getConfirmButton()) && !isVisible$1(getDenyButton()) && !isVisible$1(getCancelButton());\n\n  /**\n   * @param {HTMLElement} elem\n   * @returns {boolean}\n   */\n  const isScrollable = elem => !!(elem.scrollHeight > elem.clientHeight);\n\n  /**\n   * borrowed from https://stackoverflow.com/a/46352119\n   *\n   * @param {HTMLElement} elem\n   * @returns {boolean}\n   */\n  const hasCssAnimation = elem => {\n    const style = window.getComputedStyle(elem);\n    const animDuration = parseFloat(style.getPropertyValue('animation-duration') || '0');\n    const transDuration = parseFloat(style.getPropertyValue('transition-duration') || '0');\n    return animDuration > 0 || transDuration > 0;\n  };\n\n  /**\n   * @param {number} timer\n   * @param {boolean} reset\n   */\n  const animateTimerProgressBar = function (timer) {\n    let reset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    const timerProgressBar = getTimerProgressBar();\n    if (isVisible$1(timerProgressBar)) {\n      if (reset) {\n        timerProgressBar.style.transition = 'none';\n        timerProgressBar.style.width = '100%';\n      }\n      setTimeout(() => {\n        timerProgressBar.style.transition = `width ${timer / 1000}s linear`;\n        timerProgressBar.style.width = '0%';\n      }, 10);\n    }\n  };\n  const stopTimerProgressBar = () => {\n    const timerProgressBar = getTimerProgressBar();\n    const timerProgressBarWidth = parseInt(window.getComputedStyle(timerProgressBar).width);\n    timerProgressBar.style.removeProperty('transition');\n    timerProgressBar.style.width = '100%';\n    const timerProgressBarFullWidth = parseInt(window.getComputedStyle(timerProgressBar).width);\n    const timerProgressBarPercent = timerProgressBarWidth / timerProgressBarFullWidth * 100;\n    timerProgressBar.style.width = `${timerProgressBarPercent}%`;\n  };\n\n  /**\n   * Detect Node env\n   *\n   * @returns {boolean}\n   */\n  const isNodeEnv = () => typeof window === 'undefined' || typeof document === 'undefined';\n\n  const sweetHTML = `\n <div aria-labelledby=\"${swalClasses.title}\" aria-describedby=\"${swalClasses['html-container']}\" class=\"${swalClasses.popup}\" tabindex=\"-1\">\n   <button type=\"button\" class=\"${swalClasses.close}\"></button>\n   <ul class=\"${swalClasses['progress-steps']}\"></ul>\n   <div class=\"${swalClasses.icon}\"></div>\n   <img class=\"${swalClasses.image}\" />\n   <h2 class=\"${swalClasses.title}\" id=\"${swalClasses.title}\"></h2>\n   <div class=\"${swalClasses['html-container']}\" id=\"${swalClasses['html-container']}\"></div>\n   <input class=\"${swalClasses.input}\" />\n   <input type=\"file\" class=\"${swalClasses.file}\" />\n   <div class=\"${swalClasses.range}\">\n     <input type=\"range\" />\n     <output></output>\n   </div>\n   <select class=\"${swalClasses.select}\"></select>\n   <div class=\"${swalClasses.radio}\"></div>\n   <label for=\"${swalClasses.checkbox}\" class=\"${swalClasses.checkbox}\">\n     <input type=\"checkbox\" />\n     <span class=\"${swalClasses.label}\"></span>\n   </label>\n   <textarea class=\"${swalClasses.textarea}\"></textarea>\n   <div class=\"${swalClasses['validation-message']}\" id=\"${swalClasses['validation-message']}\"></div>\n   <div class=\"${swalClasses.actions}\">\n     <div class=\"${swalClasses.loader}\"></div>\n     <button type=\"button\" class=\"${swalClasses.confirm}\"></button>\n     <button type=\"button\" class=\"${swalClasses.deny}\"></button>\n     <button type=\"button\" class=\"${swalClasses.cancel}\"></button>\n   </div>\n   <div class=\"${swalClasses.footer}\"></div>\n   <div class=\"${swalClasses['timer-progress-bar-container']}\">\n     <div class=\"${swalClasses['timer-progress-bar']}\"></div>\n   </div>\n </div>\n`.replace(/(^|\\n)\\s*/g, '');\n\n  /**\n   * @returns {boolean}\n   */\n  const resetOldContainer = () => {\n    const oldContainer = getContainer();\n    if (!oldContainer) {\n      return false;\n    }\n    oldContainer.remove();\n    removeClass([document.documentElement, document.body], [swalClasses['no-backdrop'], swalClasses['toast-shown'], swalClasses['has-column']]);\n    return true;\n  };\n  const resetValidationMessage$1 = () => {\n    globalState.currentInstance.resetValidationMessage();\n  };\n  const addInputChangeListeners = () => {\n    const popup = getPopup();\n    const input = getDirectChildByClass(popup, swalClasses.input);\n    const file = getDirectChildByClass(popup, swalClasses.file);\n    /** @type {HTMLInputElement} */\n    const range = popup.querySelector(`.${swalClasses.range} input`);\n    /** @type {HTMLOutputElement} */\n    const rangeOutput = popup.querySelector(`.${swalClasses.range} output`);\n    const select = getDirectChildByClass(popup, swalClasses.select);\n    /** @type {HTMLInputElement} */\n    const checkbox = popup.querySelector(`.${swalClasses.checkbox} input`);\n    const textarea = getDirectChildByClass(popup, swalClasses.textarea);\n    input.oninput = resetValidationMessage$1;\n    file.onchange = resetValidationMessage$1;\n    select.onchange = resetValidationMessage$1;\n    checkbox.onchange = resetValidationMessage$1;\n    textarea.oninput = resetValidationMessage$1;\n    range.oninput = () => {\n      resetValidationMessage$1();\n      rangeOutput.value = range.value;\n    };\n    range.onchange = () => {\n      resetValidationMessage$1();\n      rangeOutput.value = range.value;\n    };\n  };\n\n  /**\n   * @param {string | HTMLElement} target\n   * @returns {HTMLElement}\n   */\n  const getTarget = target => typeof target === 'string' ? document.querySelector(target) : target;\n\n  /**\n   * @param {SweetAlertOptions} params\n   */\n  const setupAccessibility = params => {\n    const popup = getPopup();\n    popup.setAttribute('role', params.toast ? 'alert' : 'dialog');\n    popup.setAttribute('aria-live', params.toast ? 'polite' : 'assertive');\n    if (!params.toast) {\n      popup.setAttribute('aria-modal', 'true');\n    }\n  };\n\n  /**\n   * @param {HTMLElement} targetElement\n   */\n  const setupRTL = targetElement => {\n    if (window.getComputedStyle(targetElement).direction === 'rtl') {\n      addClass(getContainer(), swalClasses.rtl);\n    }\n  };\n\n  /**\n   * Add modal + backdrop + no-war message for Russians to DOM\n   *\n   * @param {SweetAlertOptions} params\n   */\n  const init = params => {\n    // Clean up the old popup container if it exists\n    const oldContainerExisted = resetOldContainer();\n\n    /* istanbul ignore if */\n    if (isNodeEnv()) {\n      error('SweetAlert2 requires document to initialize');\n      return;\n    }\n    const container = document.createElement('div');\n    container.className = swalClasses.container;\n    if (oldContainerExisted) {\n      addClass(container, swalClasses['no-transition']);\n    }\n    setInnerHtml(container, sweetHTML);\n    const targetElement = getTarget(params.target);\n    targetElement.appendChild(container);\n    setupAccessibility(params);\n    setupRTL(targetElement);\n    addInputChangeListeners();\n  };\n\n  /**\n   * @param {HTMLElement | object | string} param\n   * @param {HTMLElement} target\n   */\n  const parseHtmlToContainer = (param, target) => {\n    // DOM element\n    if (param instanceof HTMLElement) {\n      target.appendChild(param);\n    }\n\n    // Object\n    else if (typeof param === 'object') {\n      handleObject(param, target);\n    }\n\n    // Plain string\n    else if (param) {\n      setInnerHtml(target, param);\n    }\n  };\n\n  /**\n   * @param {object} param\n   * @param {HTMLElement} target\n   */\n  const handleObject = (param, target) => {\n    // JQuery element(s)\n    if (param.jquery) {\n      handleJqueryElem(target, param);\n    }\n\n    // For other objects use their string representation\n    else {\n      setInnerHtml(target, param.toString());\n    }\n  };\n\n  /**\n   * @param {HTMLElement} target\n   * @param {HTMLElement} elem\n   */\n  const handleJqueryElem = (target, elem) => {\n    target.textContent = '';\n    if (0 in elem) {\n      for (let i = 0; (i in elem); i++) {\n        target.appendChild(elem[i].cloneNode(true));\n      }\n    } else {\n      target.appendChild(elem.cloneNode(true));\n    }\n  };\n\n  /**\n   * @returns {'webkitAnimationEnd' | 'animationend' | false}\n   */\n  const animationEndEvent = (() => {\n    // Prevent run in Node env\n    /* istanbul ignore if */\n    if (isNodeEnv()) {\n      return false;\n    }\n    const testEl = document.createElement('div');\n    const transEndEventNames = {\n      WebkitAnimation: 'webkitAnimationEnd',\n      // Chrome, Safari and Opera\n      animation: 'animationend' // Standard syntax\n    };\n\n    for (const i in transEndEventNames) {\n      if (Object.prototype.hasOwnProperty.call(transEndEventNames, i) && typeof testEl.style[i] !== 'undefined') {\n        return transEndEventNames[i];\n      }\n    }\n    return false;\n  })();\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderActions = (instance, params) => {\n    const actions = getActions();\n    const loader = getLoader();\n\n    // Actions (buttons) wrapper\n    if (!params.showConfirmButton && !params.showDenyButton && !params.showCancelButton) {\n      hide(actions);\n    } else {\n      show(actions);\n    }\n\n    // Custom class\n    applyCustomClass(actions, params, 'actions');\n\n    // Render all the buttons\n    renderButtons(actions, loader, params);\n\n    // Loader\n    setInnerHtml(loader, params.loaderHtml);\n    applyCustomClass(loader, params, 'loader');\n  };\n\n  /**\n   * @param {HTMLElement} actions\n   * @param {HTMLElement} loader\n   * @param {SweetAlertOptions} params\n   */\n  function renderButtons(actions, loader, params) {\n    const confirmButton = getConfirmButton();\n    const denyButton = getDenyButton();\n    const cancelButton = getCancelButton();\n\n    // Render buttons\n    renderButton(confirmButton, 'confirm', params);\n    renderButton(denyButton, 'deny', params);\n    renderButton(cancelButton, 'cancel', params);\n    handleButtonsStyling(confirmButton, denyButton, cancelButton, params);\n    if (params.reverseButtons) {\n      if (params.toast) {\n        actions.insertBefore(cancelButton, confirmButton);\n        actions.insertBefore(denyButton, confirmButton);\n      } else {\n        actions.insertBefore(cancelButton, loader);\n        actions.insertBefore(denyButton, loader);\n        actions.insertBefore(confirmButton, loader);\n      }\n    }\n  }\n\n  /**\n   * @param {HTMLElement} confirmButton\n   * @param {HTMLElement} denyButton\n   * @param {HTMLElement} cancelButton\n   * @param {SweetAlertOptions} params\n   */\n  function handleButtonsStyling(confirmButton, denyButton, cancelButton, params) {\n    if (!params.buttonsStyling) {\n      removeClass([confirmButton, denyButton, cancelButton], swalClasses.styled);\n      return;\n    }\n    addClass([confirmButton, denyButton, cancelButton], swalClasses.styled);\n\n    // Buttons background colors\n    if (params.confirmButtonColor) {\n      confirmButton.style.backgroundColor = params.confirmButtonColor;\n      addClass(confirmButton, swalClasses['default-outline']);\n    }\n    if (params.denyButtonColor) {\n      denyButton.style.backgroundColor = params.denyButtonColor;\n      addClass(denyButton, swalClasses['default-outline']);\n    }\n    if (params.cancelButtonColor) {\n      cancelButton.style.backgroundColor = params.cancelButtonColor;\n      addClass(cancelButton, swalClasses['default-outline']);\n    }\n  }\n\n  /**\n   * @param {HTMLElement} button\n   * @param {'confirm' | 'deny' | 'cancel'} buttonType\n   * @param {SweetAlertOptions} params\n   */\n  function renderButton(button, buttonType, params) {\n    toggle(button, params[`show${capitalizeFirstLetter(buttonType)}Button`], 'inline-block');\n    setInnerHtml(button, params[`${buttonType}ButtonText`]); // Set caption text\n    button.setAttribute('aria-label', params[`${buttonType}ButtonAriaLabel`]); // ARIA label\n\n    // Add buttons custom classes\n    button.className = swalClasses[buttonType];\n    applyCustomClass(button, params, `${buttonType}Button`);\n    addClass(button, params[`${buttonType}ButtonClass`]);\n  }\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderCloseButton = (instance, params) => {\n    const closeButton = getCloseButton();\n    if (!closeButton) {\n      return;\n    }\n    setInnerHtml(closeButton, params.closeButtonHtml || '');\n\n    // Custom class\n    applyCustomClass(closeButton, params, 'closeButton');\n    toggle(closeButton, params.showCloseButton);\n    closeButton.setAttribute('aria-label', params.closeButtonAriaLabel || '');\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderContainer = (instance, params) => {\n    const container = getContainer();\n    if (!container) {\n      return;\n    }\n    handleBackdropParam(container, params.backdrop);\n    handlePositionParam(container, params.position);\n    handleGrowParam(container, params.grow);\n\n    // Custom class\n    applyCustomClass(container, params, 'container');\n  };\n\n  /**\n   * @param {HTMLElement} container\n   * @param {SweetAlertOptions['backdrop']} backdrop\n   */\n  function handleBackdropParam(container, backdrop) {\n    if (typeof backdrop === 'string') {\n      container.style.background = backdrop;\n    } else if (!backdrop) {\n      addClass([document.documentElement, document.body], swalClasses['no-backdrop']);\n    }\n  }\n\n  /**\n   * @param {HTMLElement} container\n   * @param {SweetAlertOptions['position']} position\n   */\n  function handlePositionParam(container, position) {\n    if (position in swalClasses) {\n      addClass(container, swalClasses[position]);\n    } else {\n      warn('The \"position\" parameter is not valid, defaulting to \"center\"');\n      addClass(container, swalClasses.center);\n    }\n  }\n\n  /**\n   * @param {HTMLElement} container\n   * @param {SweetAlertOptions['grow']} grow\n   */\n  function handleGrowParam(container, grow) {\n    if (grow && typeof grow === 'string') {\n      const growClass = `grow-${grow}`;\n      if (growClass in swalClasses) {\n        addClass(container, swalClasses[growClass]);\n      }\n    }\n  }\n\n  /// <reference path=\"../../../../sweetalert2.d.ts\"/>\n\n\n  /** @type {InputClass[]} */\n  const inputClasses = ['input', 'file', 'range', 'select', 'radio', 'checkbox', 'textarea'];\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderInput = (instance, params) => {\n    const popup = getPopup();\n    const innerParams = privateProps.innerParams.get(instance);\n    const rerender = !innerParams || params.input !== innerParams.input;\n    inputClasses.forEach(inputClass => {\n      const inputContainer = getDirectChildByClass(popup, swalClasses[inputClass]);\n\n      // set attributes\n      setAttributes(inputClass, params.inputAttributes);\n\n      // set class\n      inputContainer.className = swalClasses[inputClass];\n      if (rerender) {\n        hide(inputContainer);\n      }\n    });\n    if (params.input) {\n      if (rerender) {\n        showInput(params);\n      }\n      // set custom class\n      setCustomClass(params);\n    }\n  };\n\n  /**\n   * @param {SweetAlertOptions} params\n   */\n  const showInput = params => {\n    if (!renderInputType[params.input]) {\n      error(`Unexpected type of input! Expected \"text\", \"email\", \"password\", \"number\", \"tel\", \"select\", \"radio\", \"checkbox\", \"textarea\", \"file\" or \"url\", got \"${params.input}\"`);\n      return;\n    }\n    const inputContainer = getInputContainer(params.input);\n    const input = renderInputType[params.input](inputContainer, params);\n    show(inputContainer);\n\n    // input autofocus\n    if (params.inputAutoFocus) {\n      setTimeout(() => {\n        focusInput(input);\n      });\n    }\n  };\n\n  /**\n   * @param {HTMLInputElement} input\n   */\n  const removeAttributes = input => {\n    for (let i = 0; i < input.attributes.length; i++) {\n      const attrName = input.attributes[i].name;\n      if (!['type', 'value', 'style'].includes(attrName)) {\n        input.removeAttribute(attrName);\n      }\n    }\n  };\n\n  /**\n   * @param {InputClass} inputClass\n   * @param {SweetAlertOptions['inputAttributes']} inputAttributes\n   */\n  const setAttributes = (inputClass, inputAttributes) => {\n    const input = getInput$1(getPopup(), inputClass);\n    if (!input) {\n      return;\n    }\n    removeAttributes(input);\n    for (const attr in inputAttributes) {\n      input.setAttribute(attr, inputAttributes[attr]);\n    }\n  };\n\n  /**\n   * @param {SweetAlertOptions} params\n   */\n  const setCustomClass = params => {\n    const inputContainer = getInputContainer(params.input);\n    if (typeof params.customClass === 'object') {\n      addClass(inputContainer, params.customClass.input);\n    }\n  };\n\n  /**\n   * @param {HTMLInputElement | HTMLTextAreaElement} input\n   * @param {SweetAlertOptions} params\n   */\n  const setInputPlaceholder = (input, params) => {\n    if (!input.placeholder || params.inputPlaceholder) {\n      input.placeholder = params.inputPlaceholder;\n    }\n  };\n\n  /**\n   * @param {Input} input\n   * @param {Input} prependTo\n   * @param {SweetAlertOptions} params\n   */\n  const setInputLabel = (input, prependTo, params) => {\n    if (params.inputLabel) {\n      input.id = swalClasses.input;\n      const label = document.createElement('label');\n      const labelClass = swalClasses['input-label'];\n      label.setAttribute('for', input.id);\n      label.className = labelClass;\n      if (typeof params.customClass === 'object') {\n        addClass(label, params.customClass.inputLabel);\n      }\n      label.innerText = params.inputLabel;\n      prependTo.insertAdjacentElement('beforebegin', label);\n    }\n  };\n\n  /**\n   * @param {SweetAlertOptions['input']} inputType\n   * @returns {HTMLElement}\n   */\n  const getInputContainer = inputType => {\n    return getDirectChildByClass(getPopup(), swalClasses[inputType] || swalClasses.input);\n  };\n\n  /**\n   * @param {HTMLInputElement | HTMLOutputElement | HTMLTextAreaElement} input\n   * @param {SweetAlertOptions['inputValue']} inputValue\n   */\n  const checkAndSetInputValue = (input, inputValue) => {\n    if (['string', 'number'].includes(typeof inputValue)) {\n      input.value = `${inputValue}`;\n    } else if (!isPromise(inputValue)) {\n      warn(`Unexpected type of inputValue! Expected \"string\", \"number\" or \"Promise\", got \"${typeof inputValue}\"`);\n    }\n  };\n\n  /** @type {Record<string, (input: Input | HTMLElement, params: SweetAlertOptions) => Input>} */\n  const renderInputType = {};\n\n  /**\n   * @param {HTMLInputElement} input\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLInputElement}\n   */\n  renderInputType.text = renderInputType.email = renderInputType.password = renderInputType.number = renderInputType.tel = renderInputType.url = (input, params) => {\n    checkAndSetInputValue(input, params.inputValue);\n    setInputLabel(input, input, params);\n    setInputPlaceholder(input, params);\n    input.type = params.input;\n    return input;\n  };\n\n  /**\n   * @param {HTMLInputElement} input\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLInputElement}\n   */\n  renderInputType.file = (input, params) => {\n    setInputLabel(input, input, params);\n    setInputPlaceholder(input, params);\n    return input;\n  };\n\n  /**\n   * @param {HTMLInputElement} range\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLInputElement}\n   */\n  renderInputType.range = (range, params) => {\n    const rangeInput = range.querySelector('input');\n    const rangeOutput = range.querySelector('output');\n    checkAndSetInputValue(rangeInput, params.inputValue);\n    rangeInput.type = params.input;\n    checkAndSetInputValue(rangeOutput, params.inputValue);\n    setInputLabel(rangeInput, range, params);\n    return range;\n  };\n\n  /**\n   * @param {HTMLSelectElement} select\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLSelectElement}\n   */\n  renderInputType.select = (select, params) => {\n    select.textContent = '';\n    if (params.inputPlaceholder) {\n      const placeholder = document.createElement('option');\n      setInnerHtml(placeholder, params.inputPlaceholder);\n      placeholder.value = '';\n      placeholder.disabled = true;\n      placeholder.selected = true;\n      select.appendChild(placeholder);\n    }\n    setInputLabel(select, select, params);\n    return select;\n  };\n\n  /**\n   * @param {HTMLInputElement} radio\n   * @returns {HTMLInputElement}\n   */\n  renderInputType.radio = radio => {\n    radio.textContent = '';\n    return radio;\n  };\n\n  /**\n   * @param {HTMLLabelElement} checkboxContainer\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLInputElement}\n   */\n  renderInputType.checkbox = (checkboxContainer, params) => {\n    const checkbox = getInput$1(getPopup(), 'checkbox');\n    checkbox.value = '1';\n    checkbox.id = swalClasses.checkbox;\n    checkbox.checked = Boolean(params.inputValue);\n    const label = checkboxContainer.querySelector('span');\n    setInnerHtml(label, params.inputPlaceholder);\n    return checkbox;\n  };\n\n  /**\n   * @param {HTMLTextAreaElement} textarea\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLTextAreaElement}\n   */\n  renderInputType.textarea = (textarea, params) => {\n    checkAndSetInputValue(textarea, params.inputValue);\n    setInputPlaceholder(textarea, params);\n    setInputLabel(textarea, textarea, params);\n\n    /**\n     * @param {HTMLElement} el\n     * @returns {number}\n     */\n    const getMargin = el => parseInt(window.getComputedStyle(el).marginLeft) + parseInt(window.getComputedStyle(el).marginRight);\n\n    // https://github.com/sweetalert2/sweetalert2/issues/2291\n    setTimeout(() => {\n      // https://github.com/sweetalert2/sweetalert2/issues/1699\n      if ('MutationObserver' in window) {\n        const initialPopupWidth = parseInt(window.getComputedStyle(getPopup()).width);\n        const textareaResizeHandler = () => {\n          const textareaWidth = textarea.offsetWidth + getMargin(textarea);\n          if (textareaWidth > initialPopupWidth) {\n            getPopup().style.width = `${textareaWidth}px`;\n          } else {\n            getPopup().style.width = null;\n          }\n        };\n        new MutationObserver(textareaResizeHandler).observe(textarea, {\n          attributes: true,\n          attributeFilter: ['style']\n        });\n      }\n    });\n    return textarea;\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderContent = (instance, params) => {\n    const htmlContainer = getHtmlContainer();\n    if (!htmlContainer) {\n      return;\n    }\n    applyCustomClass(htmlContainer, params, 'htmlContainer');\n\n    // Content as HTML\n    if (params.html) {\n      parseHtmlToContainer(params.html, htmlContainer);\n      show(htmlContainer, 'block');\n    }\n\n    // Content as plain text\n    else if (params.text) {\n      htmlContainer.textContent = params.text;\n      show(htmlContainer, 'block');\n    }\n\n    // No content\n    else {\n      hide(htmlContainer);\n    }\n    renderInput(instance, params);\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderFooter = (instance, params) => {\n    const footer = getFooter();\n    if (!footer) {\n      return;\n    }\n    toggle(footer, params.footer);\n    if (params.footer) {\n      parseHtmlToContainer(params.footer, footer);\n    }\n\n    // Custom class\n    applyCustomClass(footer, params, 'footer');\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderIcon = (instance, params) => {\n    const innerParams = privateProps.innerParams.get(instance);\n    const icon = getIcon();\n\n    // if the given icon already rendered, apply the styling without re-rendering the icon\n    if (innerParams && params.icon === innerParams.icon) {\n      // Custom or default content\n      setContent(icon, params);\n      applyStyles(icon, params);\n      return;\n    }\n    if (!params.icon && !params.iconHtml) {\n      hide(icon);\n      return;\n    }\n    if (params.icon && Object.keys(iconTypes).indexOf(params.icon) === -1) {\n      error(`Unknown icon! Expected \"success\", \"error\", \"warning\", \"info\" or \"question\", got \"${params.icon}\"`);\n      hide(icon);\n      return;\n    }\n    show(icon);\n\n    // Custom or default content\n    setContent(icon, params);\n    applyStyles(icon, params);\n\n    // Animate icon\n    addClass(icon, params.showClass.icon);\n  };\n\n  /**\n   * @param {HTMLElement} icon\n   * @param {SweetAlertOptions} params\n   */\n  const applyStyles = (icon, params) => {\n    for (const iconType in iconTypes) {\n      if (params.icon !== iconType) {\n        removeClass(icon, iconTypes[iconType]);\n      }\n    }\n    addClass(icon, iconTypes[params.icon]);\n\n    // Icon color\n    setColor(icon, params);\n\n    // Success icon background color\n    adjustSuccessIconBackgroundColor();\n\n    // Custom class\n    applyCustomClass(icon, params, 'icon');\n  };\n\n  // Adjust success icon background color to match the popup background color\n  const adjustSuccessIconBackgroundColor = () => {\n    const popup = getPopup();\n    const popupBackgroundColor = window.getComputedStyle(popup).getPropertyValue('background-color');\n    /** @type {NodeListOf<HTMLElement>} */\n    const successIconParts = popup.querySelectorAll('[class^=swal2-success-circular-line], .swal2-success-fix');\n    for (let i = 0; i < successIconParts.length; i++) {\n      successIconParts[i].style.backgroundColor = popupBackgroundColor;\n    }\n  };\n  const successIconHtml = `\n  <div class=\"swal2-success-circular-line-left\"></div>\n  <span class=\"swal2-success-line-tip\"></span> <span class=\"swal2-success-line-long\"></span>\n  <div class=\"swal2-success-ring\"></div> <div class=\"swal2-success-fix\"></div>\n  <div class=\"swal2-success-circular-line-right\"></div>\n`;\n  const errorIconHtml = `\n  <span class=\"swal2-x-mark\">\n    <span class=\"swal2-x-mark-line-left\"></span>\n    <span class=\"swal2-x-mark-line-right\"></span>\n  </span>\n`;\n\n  /**\n   * @param {HTMLElement} icon\n   * @param {SweetAlertOptions} params\n   */\n  const setContent = (icon, params) => {\n    let oldContent = icon.innerHTML;\n    let newContent;\n    if (params.iconHtml) {\n      newContent = iconContent(params.iconHtml);\n    } else if (params.icon === 'success') {\n      newContent = successIconHtml;\n      oldContent = oldContent.replace(/ style=\".*?\"/g, ''); // undo adjustSuccessIconBackgroundColor()\n    } else if (params.icon === 'error') {\n      newContent = errorIconHtml;\n    } else {\n      const defaultIconHtml = {\n        question: '?',\n        warning: '!',\n        info: 'i'\n      };\n      newContent = iconContent(defaultIconHtml[params.icon]);\n    }\n    if (oldContent.trim() !== newContent.trim()) {\n      setInnerHtml(icon, newContent);\n    }\n  };\n\n  /**\n   * @param {HTMLElement} icon\n   * @param {SweetAlertOptions} params\n   */\n  const setColor = (icon, params) => {\n    if (!params.iconColor) {\n      return;\n    }\n    icon.style.color = params.iconColor;\n    icon.style.borderColor = params.iconColor;\n    for (const sel of ['.swal2-success-line-tip', '.swal2-success-line-long', '.swal2-x-mark-line-left', '.swal2-x-mark-line-right']) {\n      setStyle(icon, sel, 'backgroundColor', params.iconColor);\n    }\n    setStyle(icon, '.swal2-success-ring', 'borderColor', params.iconColor);\n  };\n\n  /**\n   * @param {string} content\n   * @returns {string}\n   */\n  const iconContent = content => `<div class=\"${swalClasses['icon-content']}\">${content}</div>`;\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderImage = (instance, params) => {\n    const image = getImage();\n    if (!image) {\n      return;\n    }\n    if (!params.imageUrl) {\n      hide(image);\n      return;\n    }\n    show(image, '');\n\n    // Src, alt\n    image.setAttribute('src', params.imageUrl);\n    image.setAttribute('alt', params.imageAlt || '');\n\n    // Width, height\n    applyNumericalStyle(image, 'width', params.imageWidth);\n    applyNumericalStyle(image, 'height', params.imageHeight);\n\n    // Class\n    image.className = swalClasses.image;\n    applyCustomClass(image, params, 'image');\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderPopup = (instance, params) => {\n    const container = getContainer();\n    const popup = getPopup();\n    if (!container || !popup) {\n      return;\n    }\n\n    // Width\n    // https://github.com/sweetalert2/sweetalert2/issues/2170\n    if (params.toast) {\n      applyNumericalStyle(container, 'width', params.width);\n      popup.style.width = '100%';\n      const loader = getLoader();\n      loader && popup.insertBefore(loader, getIcon());\n    } else {\n      applyNumericalStyle(popup, 'width', params.width);\n    }\n\n    // Padding\n    applyNumericalStyle(popup, 'padding', params.padding);\n\n    // Color\n    if (params.color) {\n      popup.style.color = params.color;\n    }\n\n    // Background\n    if (params.background) {\n      popup.style.background = params.background;\n    }\n    hide(getValidationMessage());\n\n    // Classes\n    addClasses$1(popup, params);\n  };\n\n  /**\n   * @param {HTMLElement} popup\n   * @param {SweetAlertOptions} params\n   */\n  const addClasses$1 = (popup, params) => {\n    const showClass = params.showClass || {};\n    // Default Class + showClass when updating Swal.update({})\n    popup.className = `${swalClasses.popup} ${isVisible$1(popup) ? showClass.popup : ''}`;\n    if (params.toast) {\n      addClass([document.documentElement, document.body], swalClasses['toast-shown']);\n      addClass(popup, swalClasses.toast);\n    } else {\n      addClass(popup, swalClasses.modal);\n    }\n\n    // Custom class\n    applyCustomClass(popup, params, 'popup');\n    if (typeof params.customClass === 'string') {\n      addClass(popup, params.customClass);\n    }\n\n    // Icon class (#1842)\n    if (params.icon) {\n      addClass(popup, swalClasses[`icon-${params.icon}`]);\n    }\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderProgressSteps = (instance, params) => {\n    const progressStepsContainer = getProgressSteps();\n    if (!progressStepsContainer) {\n      return;\n    }\n    const {\n      progressSteps,\n      currentProgressStep\n    } = params;\n    if (!progressSteps || progressSteps.length === 0 || currentProgressStep === undefined) {\n      hide(progressStepsContainer);\n      return;\n    }\n    show(progressStepsContainer);\n    progressStepsContainer.textContent = '';\n    if (currentProgressStep >= progressSteps.length) {\n      warn('Invalid currentProgressStep parameter, it should be less than progressSteps.length ' + '(currentProgressStep like JS arrays starts from 0)');\n    }\n    progressSteps.forEach((step, index) => {\n      const stepEl = createStepElement(step);\n      progressStepsContainer.appendChild(stepEl);\n      if (index === currentProgressStep) {\n        addClass(stepEl, swalClasses['active-progress-step']);\n      }\n      if (index !== progressSteps.length - 1) {\n        const lineEl = createLineElement(params);\n        progressStepsContainer.appendChild(lineEl);\n      }\n    });\n  };\n\n  /**\n   * @param {string} step\n   * @returns {HTMLLIElement}\n   */\n  const createStepElement = step => {\n    const stepEl = document.createElement('li');\n    addClass(stepEl, swalClasses['progress-step']);\n    setInnerHtml(stepEl, step);\n    return stepEl;\n  };\n\n  /**\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLLIElement}\n   */\n  const createLineElement = params => {\n    const lineEl = document.createElement('li');\n    addClass(lineEl, swalClasses['progress-step-line']);\n    if (params.progressStepsDistance) {\n      applyNumericalStyle(lineEl, 'width', params.progressStepsDistance);\n    }\n    return lineEl;\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderTitle = (instance, params) => {\n    const title = getTitle();\n    if (!title) {\n      return;\n    }\n    toggle(title, params.title || params.titleText, 'block');\n    if (params.title) {\n      parseHtmlToContainer(params.title, title);\n    }\n    if (params.titleText) {\n      title.innerText = params.titleText;\n    }\n\n    // Custom class\n    applyCustomClass(title, params, 'title');\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {SweetAlertOptions} params\n   */\n  const render = (instance, params) => {\n    renderPopup(instance, params);\n    renderContainer(instance, params);\n    renderProgressSteps(instance, params);\n    renderIcon(instance, params);\n    renderImage(instance, params);\n    renderTitle(instance, params);\n    renderCloseButton(instance, params);\n    renderContent(instance, params);\n    renderActions(instance, params);\n    renderFooter(instance, params);\n    const popup = getPopup();\n    if (typeof params.didRender === 'function' && popup) {\n      params.didRender(popup);\n    }\n  };\n\n  /*\n   * Global function to determine if SweetAlert2 popup is shown\n   */\n  const isVisible = () => {\n    return isVisible$1(getPopup());\n  };\n\n  /*\n   * Global function to click 'Confirm' button\n   */\n  const clickConfirm = () => getConfirmButton() && getConfirmButton().click();\n\n  /*\n   * Global function to click 'Deny' button\n   */\n  const clickDeny = () => getDenyButton() && getDenyButton().click();\n\n  /*\n   * Global function to click 'Cancel' button\n   */\n  const clickCancel = () => getCancelButton() && getCancelButton().click();\n\n  /** @typedef {'cancel' | 'backdrop' | 'close' | 'esc' | 'timer'} DismissReason */\n\n  /** @type {Record<DismissReason, DismissReason>} */\n  const DismissReason = Object.freeze({\n    cancel: 'cancel',\n    backdrop: 'backdrop',\n    close: 'close',\n    esc: 'esc',\n    timer: 'timer'\n  });\n\n  /**\n   * @param {GlobalState} globalState\n   */\n  const removeKeydownHandler = globalState => {\n    if (globalState.keydownTarget && globalState.keydownHandlerAdded) {\n      globalState.keydownTarget.removeEventListener('keydown', globalState.keydownHandler, {\n        capture: globalState.keydownListenerCapture\n      });\n      globalState.keydownHandlerAdded = false;\n    }\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {GlobalState} globalState\n   * @param {SweetAlertOptions} innerParams\n   * @param {*} dismissWith\n   */\n  const addKeydownHandler = (instance, globalState, innerParams, dismissWith) => {\n    removeKeydownHandler(globalState);\n    if (!innerParams.toast) {\n      globalState.keydownHandler = e => keydownHandler(instance, e, dismissWith);\n      globalState.keydownTarget = innerParams.keydownListenerCapture ? window : getPopup();\n      globalState.keydownListenerCapture = innerParams.keydownListenerCapture;\n      globalState.keydownTarget.addEventListener('keydown', globalState.keydownHandler, {\n        capture: globalState.keydownListenerCapture\n      });\n      globalState.keydownHandlerAdded = true;\n    }\n  };\n\n  /**\n   * @param {number} index\n   * @param {number} increment\n   */\n  const setFocus = (index, increment) => {\n    const focusableElements = getFocusableElements();\n    // search for visible elements and select the next possible match\n    if (focusableElements.length) {\n      index = index + increment;\n\n      // rollover to first item\n      if (index === focusableElements.length) {\n        index = 0;\n\n        // go to last item\n      } else if (index === -1) {\n        index = focusableElements.length - 1;\n      }\n      focusableElements[index].focus();\n      return;\n    }\n    // no visible focusable elements, focus the popup\n    getPopup().focus();\n  };\n  const arrowKeysNextButton = ['ArrowRight', 'ArrowDown'];\n  const arrowKeysPreviousButton = ['ArrowLeft', 'ArrowUp'];\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {KeyboardEvent} event\n   * @param {Function} dismissWith\n   */\n  const keydownHandler = (instance, event, dismissWith) => {\n    const innerParams = privateProps.innerParams.get(instance);\n    if (!innerParams) {\n      return; // This instance has already been destroyed\n    }\n\n    // Ignore keydown during IME composition\n    // https://developer.mozilla.org/en-US/docs/Web/API/Document/keydown_event#ignoring_keydown_during_ime_composition\n    // https://github.com/sweetalert2/sweetalert2/issues/720\n    // https://github.com/sweetalert2/sweetalert2/issues/2406\n    if (event.isComposing || event.keyCode === 229) {\n      return;\n    }\n    if (innerParams.stopKeydownPropagation) {\n      event.stopPropagation();\n    }\n\n    // ENTER\n    if (event.key === 'Enter') {\n      handleEnter(instance, event, innerParams);\n    }\n\n    // TAB\n    else if (event.key === 'Tab') {\n      handleTab(event);\n    }\n\n    // ARROWS - switch focus between buttons\n    else if ([...arrowKeysNextButton, ...arrowKeysPreviousButton].includes(event.key)) {\n      handleArrows(event.key);\n    }\n\n    // ESC\n    else if (event.key === 'Escape') {\n      handleEsc(event, innerParams, dismissWith);\n    }\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {KeyboardEvent} event\n   * @param {SweetAlertOptions} innerParams\n   */\n  const handleEnter = (instance, event, innerParams) => {\n    // https://github.com/sweetalert2/sweetalert2/issues/2386\n    if (!callIfFunction(innerParams.allowEnterKey)) {\n      return;\n    }\n    if (event.target && instance.getInput() && event.target instanceof HTMLElement && event.target.outerHTML === instance.getInput().outerHTML) {\n      if (['textarea', 'file'].includes(innerParams.input)) {\n        return; // do not submit\n      }\n\n      clickConfirm();\n      event.preventDefault();\n    }\n  };\n\n  /**\n   * @param {KeyboardEvent} event\n   */\n  const handleTab = event => {\n    const targetElement = event.target;\n    const focusableElements = getFocusableElements();\n    let btnIndex = -1;\n    for (let i = 0; i < focusableElements.length; i++) {\n      if (targetElement === focusableElements[i]) {\n        btnIndex = i;\n        break;\n      }\n    }\n\n    // Cycle to the next button\n    if (!event.shiftKey) {\n      setFocus(btnIndex, 1);\n    }\n\n    // Cycle to the prev button\n    else {\n      setFocus(btnIndex, -1);\n    }\n    event.stopPropagation();\n    event.preventDefault();\n  };\n\n  /**\n   * @param {string} key\n   */\n  const handleArrows = key => {\n    const confirmButton = getConfirmButton();\n    const denyButton = getDenyButton();\n    const cancelButton = getCancelButton();\n    /** @type HTMLElement[] */\n    const buttons = [confirmButton, denyButton, cancelButton];\n    if (document.activeElement instanceof HTMLElement && !buttons.includes(document.activeElement)) {\n      return;\n    }\n    const sibling = arrowKeysNextButton.includes(key) ? 'nextElementSibling' : 'previousElementSibling';\n    let buttonToFocus = document.activeElement;\n    for (let i = 0; i < getActions().children.length; i++) {\n      buttonToFocus = buttonToFocus[sibling];\n      if (!buttonToFocus) {\n        return;\n      }\n      if (buttonToFocus instanceof HTMLButtonElement && isVisible$1(buttonToFocus)) {\n        break;\n      }\n    }\n    if (buttonToFocus instanceof HTMLButtonElement) {\n      buttonToFocus.focus();\n    }\n  };\n\n  /**\n   * @param {KeyboardEvent} event\n   * @param {SweetAlertOptions} innerParams\n   * @param {Function} dismissWith\n   */\n  const handleEsc = (event, innerParams, dismissWith) => {\n    if (callIfFunction(innerParams.allowEscapeKey)) {\n      event.preventDefault();\n      dismissWith(DismissReason.esc);\n    }\n  };\n\n  /**\n   * This module contains `WeakMap`s for each effectively-\"private  property\" that a `Swal` has.\n   * For example, to set the private property \"foo\" of `this` to \"bar\", you can `privateProps.foo.set(this, 'bar')`\n   * This is the approach that Babel will probably take to implement private methods/fields\n   *   https://github.com/tc39/proposal-private-methods\n   *   https://github.com/babel/babel/pull/7555\n   * Once we have the changes from that PR in Babel, and our core class fits reasonable in *one module*\n   *   then we can use that language feature.\n   */\n\n  var privateMethods = {\n    swalPromiseResolve: new WeakMap(),\n    swalPromiseReject: new WeakMap()\n  };\n\n  // From https://developer.paciellogroup.com/blog/2018/06/the-current-state-of-modal-dialog-accessibility/\n  // Adding aria-hidden=\"true\" to elements outside of the active modal dialog ensures that\n  // elements not within the active modal dialog will not be surfaced if a user opens a screen\n  // reader’s list of elements (headings, form controls, landmarks, etc.) in the document.\n\n  const setAriaHidden = () => {\n    const bodyChildren = Array.from(document.body.children);\n    bodyChildren.forEach(el => {\n      if (el === getContainer() || el.contains(getContainer())) {\n        return;\n      }\n      if (el.hasAttribute('aria-hidden')) {\n        el.setAttribute('data-previous-aria-hidden', el.getAttribute('aria-hidden') || '');\n      }\n      el.setAttribute('aria-hidden', 'true');\n    });\n  };\n  const unsetAriaHidden = () => {\n    const bodyChildren = Array.from(document.body.children);\n    bodyChildren.forEach(el => {\n      if (el.hasAttribute('data-previous-aria-hidden')) {\n        el.setAttribute('aria-hidden', el.getAttribute('data-previous-aria-hidden') || '');\n        el.removeAttribute('data-previous-aria-hidden');\n      } else {\n        el.removeAttribute('aria-hidden');\n      }\n    });\n  };\n\n  /* istanbul ignore file */\n\n  // Fix iOS scrolling http://stackoverflow.com/q/39626302\n\n  const iOSfix = () => {\n    const iOS =\n    // @ts-ignore\n    /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream || navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1;\n    if (iOS && !hasClass(document.body, swalClasses.iosfix)) {\n      const offset = document.body.scrollTop;\n      document.body.style.top = `${offset * -1}px`;\n      addClass(document.body, swalClasses.iosfix);\n      lockBodyScroll();\n      addBottomPaddingForTallPopups();\n    }\n  };\n\n  /**\n   * https://github.com/sweetalert2/sweetalert2/issues/1948\n   */\n  const addBottomPaddingForTallPopups = () => {\n    const ua = navigator.userAgent;\n    const iOS = !!ua.match(/iPad/i) || !!ua.match(/iPhone/i);\n    const webkit = !!ua.match(/WebKit/i);\n    const iOSSafari = iOS && webkit && !ua.match(/CriOS/i);\n    if (iOSSafari) {\n      const bottomPanelHeight = 44;\n      if (getPopup().scrollHeight > window.innerHeight - bottomPanelHeight) {\n        getContainer().style.paddingBottom = `${bottomPanelHeight}px`;\n      }\n    }\n  };\n\n  /**\n   * https://github.com/sweetalert2/sweetalert2/issues/1246\n   */\n  const lockBodyScroll = () => {\n    const container = getContainer();\n    let preventTouchMove;\n    /**\n     * @param {TouchEvent} event\n     */\n    container.ontouchstart = event => {\n      preventTouchMove = shouldPreventTouchMove(event);\n    };\n    /**\n     * @param {TouchEvent} event\n     */\n    container.ontouchmove = event => {\n      if (preventTouchMove) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n    };\n  };\n\n  /**\n   * @param {TouchEvent} event\n   * @returns {boolean}\n   */\n  const shouldPreventTouchMove = event => {\n    const target = event.target;\n    const container = getContainer();\n    if (isStylus(event) || isZoom(event)) {\n      return false;\n    }\n    if (target === container) {\n      return true;\n    }\n    if (!isScrollable(container) && target instanceof HTMLElement && target.tagName !== 'INPUT' &&\n    // #1603\n    target.tagName !== 'TEXTAREA' &&\n    // #2266\n    !(isScrollable(getHtmlContainer()) &&\n    // #1944\n    getHtmlContainer().contains(target))) {\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * https://github.com/sweetalert2/sweetalert2/issues/1786\n   *\n   * @param {*} event\n   * @returns {boolean}\n   */\n  const isStylus = event => {\n    return event.touches && event.touches.length && event.touches[0].touchType === 'stylus';\n  };\n\n  /**\n   * https://github.com/sweetalert2/sweetalert2/issues/1891\n   *\n   * @param {TouchEvent} event\n   * @returns {boolean}\n   */\n  const isZoom = event => {\n    return event.touches && event.touches.length > 1;\n  };\n  const undoIOSfix = () => {\n    if (hasClass(document.body, swalClasses.iosfix)) {\n      const offset = parseInt(document.body.style.top, 10);\n      removeClass(document.body, swalClasses.iosfix);\n      document.body.style.top = '';\n      document.body.scrollTop = offset * -1;\n    }\n  };\n\n  /**\n   * Measure scrollbar width for padding body during modal show/hide\n   * https://github.com/twbs/bootstrap/blob/master/js/src/modal.js\n   *\n   * @returns {number}\n   */\n  const measureScrollbar = () => {\n    const scrollDiv = document.createElement('div');\n    scrollDiv.className = swalClasses['scrollbar-measure'];\n    document.body.appendChild(scrollDiv);\n    const scrollbarWidth = scrollDiv.getBoundingClientRect().width - scrollDiv.clientWidth;\n    document.body.removeChild(scrollDiv);\n    return scrollbarWidth;\n  };\n\n  /**\n   * Remember state in cases where opening and handling a modal will fiddle with it.\n   * @type {number | null}\n   */\n  let previousBodyPadding = null;\n  const fixScrollbar = () => {\n    // for queues, do not do this more than once\n    if (previousBodyPadding !== null) {\n      return;\n    }\n    // if the body has overflow\n    if (document.body.scrollHeight > window.innerHeight) {\n      // add padding so the content doesn't shift after removal of scrollbar\n      previousBodyPadding = parseInt(window.getComputedStyle(document.body).getPropertyValue('padding-right'));\n      document.body.style.paddingRight = `${previousBodyPadding + measureScrollbar()}px`;\n    }\n  };\n  const undoScrollbar = () => {\n    if (previousBodyPadding !== null) {\n      document.body.style.paddingRight = `${previousBodyPadding}px`;\n      previousBodyPadding = null;\n    }\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {HTMLElement} container\n   * @param {boolean} returnFocus\n   * @param {Function} didClose\n   */\n  function removePopupAndResetState(instance, container, returnFocus, didClose) {\n    if (isToast()) {\n      triggerDidCloseAndDispose(instance, didClose);\n    } else {\n      restoreActiveElement(returnFocus).then(() => triggerDidCloseAndDispose(instance, didClose));\n      removeKeydownHandler(globalState);\n    }\n    const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n    // workaround for #2088\n    // for some reason removing the container in Safari will scroll the document to bottom\n    if (isSafari) {\n      container.setAttribute('style', 'display:none !important');\n      container.removeAttribute('class');\n      container.innerHTML = '';\n    } else {\n      container.remove();\n    }\n    if (isModal()) {\n      undoScrollbar();\n      undoIOSfix();\n      unsetAriaHidden();\n    }\n    removeBodyClasses();\n  }\n\n  /**\n   * Remove SweetAlert2 classes from body\n   */\n  function removeBodyClasses() {\n    removeClass([document.documentElement, document.body], [swalClasses.shown, swalClasses['height-auto'], swalClasses['no-backdrop'], swalClasses['toast-shown']]);\n  }\n\n  /**\n   * Instance method to close sweetAlert\n   *\n   * @param {any} resolveValue\n   */\n  function close(resolveValue) {\n    resolveValue = prepareResolveValue(resolveValue);\n    const swalPromiseResolve = privateMethods.swalPromiseResolve.get(this);\n    const didClose = triggerClosePopup(this);\n    if (this.isAwaitingPromise) {\n      // A swal awaiting for a promise (after a click on Confirm or Deny) cannot be dismissed anymore #2335\n      if (!resolveValue.isDismissed) {\n        handleAwaitingPromise(this);\n        swalPromiseResolve(resolveValue);\n      }\n    } else if (didClose) {\n      // Resolve Swal promise\n      swalPromiseResolve(resolveValue);\n    }\n  }\n  const triggerClosePopup = instance => {\n    const popup = getPopup();\n    if (!popup) {\n      return false;\n    }\n    const innerParams = privateProps.innerParams.get(instance);\n    if (!innerParams || hasClass(popup, innerParams.hideClass.popup)) {\n      return false;\n    }\n    removeClass(popup, innerParams.showClass.popup);\n    addClass(popup, innerParams.hideClass.popup);\n    const backdrop = getContainer();\n    removeClass(backdrop, innerParams.showClass.backdrop);\n    addClass(backdrop, innerParams.hideClass.backdrop);\n    handlePopupAnimation(instance, popup, innerParams);\n    return true;\n  };\n\n  /**\n   * @param {any} error\n   */\n  function rejectPromise(error) {\n    const rejectPromise = privateMethods.swalPromiseReject.get(this);\n    handleAwaitingPromise(this);\n    if (rejectPromise) {\n      // Reject Swal promise\n      rejectPromise(error);\n    }\n  }\n\n  /**\n   * @param {SweetAlert} instance\n   */\n  const handleAwaitingPromise = instance => {\n    if (instance.isAwaitingPromise) {\n      delete instance.isAwaitingPromise;\n      // The instance might have been previously partly destroyed, we must resume the destroy process in this case #2335\n      if (!privateProps.innerParams.get(instance)) {\n        instance._destroy();\n      }\n    }\n  };\n\n  /**\n   * @param {any} resolveValue\n   * @returns {SweetAlertResult}\n   */\n  const prepareResolveValue = resolveValue => {\n    // When user calls Swal.close()\n    if (typeof resolveValue === 'undefined') {\n      return {\n        isConfirmed: false,\n        isDenied: false,\n        isDismissed: true\n      };\n    }\n    return Object.assign({\n      isConfirmed: false,\n      isDenied: false,\n      isDismissed: false\n    }, resolveValue);\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {HTMLElement} popup\n   * @param {SweetAlertOptions} innerParams\n   */\n  const handlePopupAnimation = (instance, popup, innerParams) => {\n    const container = getContainer();\n    // If animation is supported, animate\n    const animationIsSupported = animationEndEvent && hasCssAnimation(popup);\n    if (typeof innerParams.willClose === 'function') {\n      innerParams.willClose(popup);\n    }\n    if (animationIsSupported) {\n      animatePopup(instance, popup, container, innerParams.returnFocus, innerParams.didClose);\n    } else {\n      // Otherwise, remove immediately\n      removePopupAndResetState(instance, container, innerParams.returnFocus, innerParams.didClose);\n    }\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {HTMLElement} popup\n   * @param {HTMLElement} container\n   * @param {boolean} returnFocus\n   * @param {Function} didClose\n   */\n  const animatePopup = (instance, popup, container, returnFocus, didClose) => {\n    globalState.swalCloseEventFinishedCallback = removePopupAndResetState.bind(null, instance, container, returnFocus, didClose);\n    popup.addEventListener(animationEndEvent, function (e) {\n      if (e.target === popup) {\n        globalState.swalCloseEventFinishedCallback();\n        delete globalState.swalCloseEventFinishedCallback;\n      }\n    });\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {Function} didClose\n   */\n  const triggerDidCloseAndDispose = (instance, didClose) => {\n    setTimeout(() => {\n      if (typeof didClose === 'function') {\n        didClose.bind(instance.params)();\n      }\n      // instance might have been destroyed already\n      if (instance._destroy) {\n        instance._destroy();\n      }\n    });\n  };\n\n  /**\n   * Shows loader (spinner), this is useful with AJAX requests.\n   * By default the loader be shown instead of the \"Confirm\" button.\n   *\n   * @param {HTMLButtonElement} [buttonToReplace]\n   */\n  const showLoading = buttonToReplace => {\n    let popup = getPopup();\n    if (!popup) {\n      new Swal(); // eslint-disable-line no-new\n    }\n\n    popup = getPopup();\n    const loader = getLoader();\n    if (isToast()) {\n      hide(getIcon());\n    } else {\n      replaceButton(popup, buttonToReplace);\n    }\n    show(loader);\n    popup.setAttribute('data-loading', 'true');\n    popup.setAttribute('aria-busy', 'true');\n    popup.focus();\n  };\n\n  /**\n   * @param {HTMLElement} popup\n   * @param {HTMLButtonElement} [buttonToReplace]\n   */\n  const replaceButton = (popup, buttonToReplace) => {\n    const actions = getActions();\n    const loader = getLoader();\n    if (!buttonToReplace && isVisible$1(getConfirmButton())) {\n      buttonToReplace = getConfirmButton();\n    }\n    show(actions);\n    if (buttonToReplace) {\n      hide(buttonToReplace);\n      loader.setAttribute('data-button-to-replace', buttonToReplace.className);\n    }\n    loader.parentNode.insertBefore(loader, buttonToReplace);\n    addClass([popup, actions], swalClasses.loading);\n  };\n\n  /**\n   * @typedef { string | number | boolean } InputValue\n   */\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {SweetAlertOptions} params\n   */\n  const handleInputOptionsAndValue = (instance, params) => {\n    if (params.input === 'select' || params.input === 'radio') {\n      handleInputOptions(instance, params);\n    } else if (['text', 'email', 'number', 'tel', 'textarea'].includes(params.input) && (hasToPromiseFn(params.inputValue) || isPromise(params.inputValue))) {\n      showLoading(getConfirmButton());\n      handleInputValue(instance, params);\n    }\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {SweetAlertOptions} innerParams\n   * @returns {string | number | File | FileList | null}\n   */\n  const getInputValue = (instance, innerParams) => {\n    const input = instance.getInput();\n    if (!input) {\n      return null;\n    }\n    switch (innerParams.input) {\n      case 'checkbox':\n        return getCheckboxValue(input);\n      case 'radio':\n        return getRadioValue(input);\n      case 'file':\n        return getFileValue(input);\n      default:\n        return innerParams.inputAutoTrim ? input.value.trim() : input.value;\n    }\n  };\n\n  /**\n   * @param {HTMLInputElement} input\n   * @returns {number}\n   */\n  const getCheckboxValue = input => input.checked ? 1 : 0;\n\n  /**\n   * @param {HTMLInputElement} input\n   * @returns {string | null}\n   */\n  const getRadioValue = input => input.checked ? input.value : null;\n\n  /**\n   * @param {HTMLInputElement} input\n   * @returns {FileList | File | null}\n   */\n  const getFileValue = input => input.files.length ? input.getAttribute('multiple') !== null ? input.files : input.files[0] : null;\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {SweetAlertOptions} params\n   */\n  const handleInputOptions = (instance, params) => {\n    const popup = getPopup();\n    /**\n     * @param {Record<string, any>} inputOptions\n     */\n    const processInputOptions = inputOptions => {\n      populateInputOptions[params.input](popup, formatInputOptions(inputOptions), params);\n    };\n    if (hasToPromiseFn(params.inputOptions) || isPromise(params.inputOptions)) {\n      showLoading(getConfirmButton());\n      asPromise(params.inputOptions).then(inputOptions => {\n        instance.hideLoading();\n        processInputOptions(inputOptions);\n      });\n    } else if (typeof params.inputOptions === 'object') {\n      processInputOptions(params.inputOptions);\n    } else {\n      error(`Unexpected type of inputOptions! Expected object, Map or Promise, got ${typeof params.inputOptions}`);\n    }\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {SweetAlertOptions} params\n   */\n  const handleInputValue = (instance, params) => {\n    const input = instance.getInput();\n    hide(input);\n    asPromise(params.inputValue).then(inputValue => {\n      input.value = params.input === 'number' ? `${parseFloat(inputValue) || 0}` : `${inputValue}`;\n      show(input);\n      input.focus();\n      instance.hideLoading();\n    }).catch(err => {\n      error(`Error in inputValue promise: ${err}`);\n      input.value = '';\n      show(input);\n      input.focus();\n      instance.hideLoading();\n    });\n  };\n  const populateInputOptions = {\n    /**\n     * @param {HTMLElement} popup\n     * @param {Record<string, any>} inputOptions\n     * @param {SweetAlertOptions} params\n     */\n    select: (popup, inputOptions, params) => {\n      const select = getDirectChildByClass(popup, swalClasses.select);\n      /**\n       * @param {HTMLElement} parent\n       * @param {string} optionLabel\n       * @param {string} optionValue\n       */\n      const renderOption = (parent, optionLabel, optionValue) => {\n        const option = document.createElement('option');\n        option.value = optionValue;\n        setInnerHtml(option, optionLabel);\n        option.selected = isSelected(optionValue, params.inputValue);\n        parent.appendChild(option);\n      };\n      inputOptions.forEach(inputOption => {\n        const optionValue = inputOption[0];\n        const optionLabel = inputOption[1];\n        // <optgroup> spec:\n        // https://www.w3.org/TR/html401/interact/forms.html#h-17.6\n        // \"...all OPTGROUP elements must be specified directly within a SELECT element (i.e., groups may not be nested)...\"\n        // check whether this is a <optgroup>\n        if (Array.isArray(optionLabel)) {\n          // if it is an array, then it is an <optgroup>\n          const optgroup = document.createElement('optgroup');\n          optgroup.label = optionValue;\n          optgroup.disabled = false; // not configurable for now\n          select.appendChild(optgroup);\n          optionLabel.forEach(o => renderOption(optgroup, o[1], o[0]));\n        } else {\n          // case of <option>\n          renderOption(select, optionLabel, optionValue);\n        }\n      });\n      select.focus();\n    },\n    /**\n     * @param {HTMLElement} popup\n     * @param {Record<string, any>} inputOptions\n     * @param {SweetAlertOptions} params\n     */\n    radio: (popup, inputOptions, params) => {\n      const radio = getDirectChildByClass(popup, swalClasses.radio);\n      inputOptions.forEach(inputOption => {\n        const radioValue = inputOption[0];\n        const radioLabel = inputOption[1];\n        const radioInput = document.createElement('input');\n        const radioLabelElement = document.createElement('label');\n        radioInput.type = 'radio';\n        radioInput.name = swalClasses.radio;\n        radioInput.value = radioValue;\n        if (isSelected(radioValue, params.inputValue)) {\n          radioInput.checked = true;\n        }\n        const label = document.createElement('span');\n        setInnerHtml(label, radioLabel);\n        label.className = swalClasses.label;\n        radioLabelElement.appendChild(radioInput);\n        radioLabelElement.appendChild(label);\n        radio.appendChild(radioLabelElement);\n      });\n      const radios = radio.querySelectorAll('input');\n      if (radios.length) {\n        radios[0].focus();\n      }\n    }\n  };\n\n  /**\n   * Converts `inputOptions` into an array of `[value, label]`s\n   *\n   * @param {Record<string, any>} inputOptions\n   * @returns {Array<Array<string>>}\n   */\n  const formatInputOptions = inputOptions => {\n    const result = [];\n    if (typeof Map !== 'undefined' && inputOptions instanceof Map) {\n      inputOptions.forEach((value, key) => {\n        let valueFormatted = value;\n        if (typeof valueFormatted === 'object') {\n          // case of <optgroup>\n          valueFormatted = formatInputOptions(valueFormatted);\n        }\n        result.push([key, valueFormatted]);\n      });\n    } else {\n      Object.keys(inputOptions).forEach(key => {\n        let valueFormatted = inputOptions[key];\n        if (typeof valueFormatted === 'object') {\n          // case of <optgroup>\n          valueFormatted = formatInputOptions(valueFormatted);\n        }\n        result.push([key, valueFormatted]);\n      });\n    }\n    return result;\n  };\n\n  /**\n   * @param {string} optionValue\n   * @param {InputValue | Promise<InputValue> | { toPromise: () => InputValue }} inputValue\n   * @returns {boolean}\n   */\n  const isSelected = (optionValue, inputValue) => {\n    return inputValue && inputValue.toString() === optionValue.toString();\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   */\n  const handleConfirmButtonClick = instance => {\n    const innerParams = privateProps.innerParams.get(instance);\n    instance.disableButtons();\n    if (innerParams.input) {\n      handleConfirmOrDenyWithInput(instance, 'confirm');\n    } else {\n      confirm(instance, true);\n    }\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   */\n  const handleDenyButtonClick = instance => {\n    const innerParams = privateProps.innerParams.get(instance);\n    instance.disableButtons();\n    if (innerParams.returnInputValueOnDeny) {\n      handleConfirmOrDenyWithInput(instance, 'deny');\n    } else {\n      deny(instance, false);\n    }\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {Function} dismissWith\n   */\n  const handleCancelButtonClick = (instance, dismissWith) => {\n    instance.disableButtons();\n    dismissWith(DismissReason.cancel);\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {'confirm' | 'deny'} type\n   */\n  const handleConfirmOrDenyWithInput = (instance, type) => {\n    const innerParams = privateProps.innerParams.get(instance);\n    if (!innerParams.input) {\n      error(`The \"input\" parameter is needed to be set when using returnInputValueOn${capitalizeFirstLetter(type)}`);\n      return;\n    }\n    const inputValue = getInputValue(instance, innerParams);\n    if (innerParams.inputValidator) {\n      handleInputValidator(instance, inputValue, type);\n    } else if (!instance.getInput().checkValidity()) {\n      instance.enableButtons();\n      instance.showValidationMessage(innerParams.validationMessage);\n    } else if (type === 'deny') {\n      deny(instance, inputValue);\n    } else {\n      confirm(instance, inputValue);\n    }\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {string | number | File | FileList | null} inputValue\n   * @param {'confirm' | 'deny'} type\n   */\n  const handleInputValidator = (instance, inputValue, type) => {\n    const innerParams = privateProps.innerParams.get(instance);\n    instance.disableInput();\n    const validationPromise = Promise.resolve().then(() => asPromise(innerParams.inputValidator(inputValue, innerParams.validationMessage)));\n    validationPromise.then(validationMessage => {\n      instance.enableButtons();\n      instance.enableInput();\n      if (validationMessage) {\n        instance.showValidationMessage(validationMessage);\n      } else if (type === 'deny') {\n        deny(instance, inputValue);\n      } else {\n        confirm(instance, inputValue);\n      }\n    });\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {any} value\n   */\n  const deny = (instance, value) => {\n    const innerParams = privateProps.innerParams.get(instance || undefined);\n    if (innerParams.showLoaderOnDeny) {\n      showLoading(getDenyButton());\n    }\n    if (innerParams.preDeny) {\n      instance.isAwaitingPromise = true; // Flagging the instance as awaiting a promise so it's own promise's reject/resolve methods doesn't get destroyed until the result from this preDeny's promise is received\n      const preDenyPromise = Promise.resolve().then(() => asPromise(innerParams.preDeny(value, innerParams.validationMessage)));\n      preDenyPromise.then(preDenyValue => {\n        if (preDenyValue === false) {\n          instance.hideLoading();\n          handleAwaitingPromise(instance);\n        } else {\n          instance.close({\n            isDenied: true,\n            value: typeof preDenyValue === 'undefined' ? value : preDenyValue\n          });\n        }\n      }).catch(error => rejectWith(instance || undefined, error));\n    } else {\n      instance.close({\n        isDenied: true,\n        value\n      });\n    }\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {any} value\n   */\n  const succeedWith = (instance, value) => {\n    instance.close({\n      isConfirmed: true,\n      value\n    });\n  };\n\n  /**\n   *\n   * @param {SweetAlert} instance\n   * @param {string} error\n   */\n  const rejectWith = (instance, error) => {\n    instance.rejectPromise(error);\n  };\n\n  /**\n   *\n   * @param {SweetAlert} instance\n   * @param {any} value\n   */\n  const confirm = (instance, value) => {\n    const innerParams = privateProps.innerParams.get(instance || undefined);\n    if (innerParams.showLoaderOnConfirm) {\n      showLoading();\n    }\n    if (innerParams.preConfirm) {\n      instance.resetValidationMessage();\n      instance.isAwaitingPromise = true; // Flagging the instance as awaiting a promise so it's own promise's reject/resolve methods doesn't get destroyed until the result from this preConfirm's promise is received\n      const preConfirmPromise = Promise.resolve().then(() => asPromise(innerParams.preConfirm(value, innerParams.validationMessage)));\n      preConfirmPromise.then(preConfirmValue => {\n        if (isVisible$1(getValidationMessage()) || preConfirmValue === false) {\n          instance.hideLoading();\n          handleAwaitingPromise(instance);\n        } else {\n          succeedWith(instance, typeof preConfirmValue === 'undefined' ? value : preConfirmValue);\n        }\n      }).catch(error => rejectWith(instance || undefined, error));\n    } else {\n      succeedWith(instance, value);\n    }\n  };\n\n  /**\n   * Hides loader and shows back the button which was hidden by .showLoading()\n   */\n  function hideLoading() {\n    // do nothing if popup is closed\n    const innerParams = privateProps.innerParams.get(this);\n    if (!innerParams) {\n      return;\n    }\n    const domCache = privateProps.domCache.get(this);\n    hide(domCache.loader);\n    if (isToast()) {\n      if (innerParams.icon) {\n        show(getIcon());\n      }\n    } else {\n      showRelatedButton(domCache);\n    }\n    removeClass([domCache.popup, domCache.actions], swalClasses.loading);\n    domCache.popup.removeAttribute('aria-busy');\n    domCache.popup.removeAttribute('data-loading');\n    domCache.confirmButton.disabled = false;\n    domCache.denyButton.disabled = false;\n    domCache.cancelButton.disabled = false;\n  }\n  const showRelatedButton = domCache => {\n    const buttonToReplace = domCache.popup.getElementsByClassName(domCache.loader.getAttribute('data-button-to-replace'));\n    if (buttonToReplace.length) {\n      show(buttonToReplace[0], 'inline-block');\n    } else if (allButtonsAreHidden()) {\n      hide(domCache.actions);\n    }\n  };\n\n  /**\n   * Gets the input DOM node, this method works with input parameter.\n   *\n   * @returns {HTMLInputElement | null}\n   */\n  function getInput() {\n    const innerParams = privateProps.innerParams.get(this);\n    const domCache = privateProps.domCache.get(this);\n    if (!domCache) {\n      return null;\n    }\n    return getInput$1(domCache.popup, innerParams.input);\n  }\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {string[]} buttons\n   * @param {boolean} disabled\n   */\n  function setButtonsDisabled(instance, buttons, disabled) {\n    const domCache = privateProps.domCache.get(instance);\n    buttons.forEach(button => {\n      domCache[button].disabled = disabled;\n    });\n  }\n\n  /**\n   * @param {HTMLInputElement} input\n   * @param {boolean} disabled\n   */\n  function setInputDisabled(input, disabled) {\n    if (!input) {\n      return;\n    }\n    if (input.type === 'radio') {\n      const radiosContainer = input.parentNode.parentNode;\n      const radios = radiosContainer.querySelectorAll('input');\n      for (let i = 0; i < radios.length; i++) {\n        radios[i].disabled = disabled;\n      }\n    } else {\n      input.disabled = disabled;\n    }\n  }\n\n  /**\n   * Enable all the buttons\n   */\n  function enableButtons() {\n    setButtonsDisabled(this, ['confirmButton', 'denyButton', 'cancelButton'], false);\n  }\n\n  /**\n   * Disable all the buttons\n   */\n  function disableButtons() {\n    setButtonsDisabled(this, ['confirmButton', 'denyButton', 'cancelButton'], true);\n  }\n\n  /**\n   * Enable the input field\n   */\n  function enableInput() {\n    setInputDisabled(this.getInput(), false);\n  }\n\n  /**\n   * Disable the input field\n   */\n  function disableInput() {\n    setInputDisabled(this.getInput(), true);\n  }\n\n  /**\n   * Show block with validation message\n   *\n   * @param {string} error\n   */\n  function showValidationMessage(error) {\n    const domCache = privateProps.domCache.get(this);\n    const params = privateProps.innerParams.get(this);\n    setInnerHtml(domCache.validationMessage, error);\n    domCache.validationMessage.className = swalClasses['validation-message'];\n    if (params.customClass && params.customClass.validationMessage) {\n      addClass(domCache.validationMessage, params.customClass.validationMessage);\n    }\n    show(domCache.validationMessage);\n    const input = this.getInput();\n    if (input) {\n      input.setAttribute('aria-invalid', true);\n      input.setAttribute('aria-describedby', swalClasses['validation-message']);\n      focusInput(input);\n      addClass(input, swalClasses.inputerror);\n    }\n  }\n\n  /**\n   * Hide block with validation message\n   */\n  function resetValidationMessage() {\n    const domCache = privateProps.domCache.get(this);\n    if (domCache.validationMessage) {\n      hide(domCache.validationMessage);\n    }\n    const input = this.getInput();\n    if (input) {\n      input.removeAttribute('aria-invalid');\n      input.removeAttribute('aria-describedby');\n      removeClass(input, swalClasses.inputerror);\n    }\n  }\n\n  const defaultParams = {\n    title: '',\n    titleText: '',\n    text: '',\n    html: '',\n    footer: '',\n    icon: undefined,\n    iconColor: undefined,\n    iconHtml: undefined,\n    template: undefined,\n    toast: false,\n    showClass: {\n      popup: 'swal2-show',\n      backdrop: 'swal2-backdrop-show',\n      icon: 'swal2-icon-show'\n    },\n    hideClass: {\n      popup: 'swal2-hide',\n      backdrop: 'swal2-backdrop-hide',\n      icon: 'swal2-icon-hide'\n    },\n    customClass: {},\n    target: 'body',\n    color: undefined,\n    backdrop: true,\n    heightAuto: true,\n    allowOutsideClick: true,\n    allowEscapeKey: true,\n    allowEnterKey: true,\n    stopKeydownPropagation: true,\n    keydownListenerCapture: false,\n    showConfirmButton: true,\n    showDenyButton: false,\n    showCancelButton: false,\n    preConfirm: undefined,\n    preDeny: undefined,\n    confirmButtonText: 'OK',\n    confirmButtonAriaLabel: '',\n    confirmButtonColor: undefined,\n    denyButtonText: 'No',\n    denyButtonAriaLabel: '',\n    denyButtonColor: undefined,\n    cancelButtonText: 'Cancel',\n    cancelButtonAriaLabel: '',\n    cancelButtonColor: undefined,\n    buttonsStyling: true,\n    reverseButtons: false,\n    focusConfirm: true,\n    focusDeny: false,\n    focusCancel: false,\n    returnFocus: true,\n    showCloseButton: false,\n    closeButtonHtml: '&times;',\n    closeButtonAriaLabel: 'Close this dialog',\n    loaderHtml: '',\n    showLoaderOnConfirm: false,\n    showLoaderOnDeny: false,\n    imageUrl: undefined,\n    imageWidth: undefined,\n    imageHeight: undefined,\n    imageAlt: '',\n    timer: undefined,\n    timerProgressBar: false,\n    width: undefined,\n    padding: undefined,\n    background: undefined,\n    input: undefined,\n    inputPlaceholder: '',\n    inputLabel: '',\n    inputValue: '',\n    inputOptions: {},\n    inputAutoFocus: true,\n    inputAutoTrim: true,\n    inputAttributes: {},\n    inputValidator: undefined,\n    returnInputValueOnDeny: false,\n    validationMessage: undefined,\n    grow: false,\n    position: 'center',\n    progressSteps: [],\n    currentProgressStep: undefined,\n    progressStepsDistance: undefined,\n    willOpen: undefined,\n    didOpen: undefined,\n    didRender: undefined,\n    willClose: undefined,\n    didClose: undefined,\n    didDestroy: undefined,\n    scrollbarPadding: true\n  };\n  const updatableParams = ['allowEscapeKey', 'allowOutsideClick', 'background', 'buttonsStyling', 'cancelButtonAriaLabel', 'cancelButtonColor', 'cancelButtonText', 'closeButtonAriaLabel', 'closeButtonHtml', 'color', 'confirmButtonAriaLabel', 'confirmButtonColor', 'confirmButtonText', 'currentProgressStep', 'customClass', 'denyButtonAriaLabel', 'denyButtonColor', 'denyButtonText', 'didClose', 'didDestroy', 'footer', 'hideClass', 'html', 'icon', 'iconColor', 'iconHtml', 'imageAlt', 'imageHeight', 'imageUrl', 'imageWidth', 'preConfirm', 'preDeny', 'progressSteps', 'returnFocus', 'reverseButtons', 'showCancelButton', 'showCloseButton', 'showConfirmButton', 'showDenyButton', 'text', 'title', 'titleText', 'willClose'];\n\n  /** @type {Record<string, string>} */\n  const deprecatedParams = {};\n  const toastIncompatibleParams = ['allowOutsideClick', 'allowEnterKey', 'backdrop', 'focusConfirm', 'focusDeny', 'focusCancel', 'returnFocus', 'heightAuto', 'keydownListenerCapture'];\n\n  /**\n   * Is valid parameter\n   *\n   * @param {string} paramName\n   * @returns {boolean}\n   */\n  const isValidParameter = paramName => {\n    return Object.prototype.hasOwnProperty.call(defaultParams, paramName);\n  };\n\n  /**\n   * Is valid parameter for Swal.update() method\n   *\n   * @param {string} paramName\n   * @returns {boolean}\n   */\n  const isUpdatableParameter = paramName => {\n    return updatableParams.indexOf(paramName) !== -1;\n  };\n\n  /**\n   * Is deprecated parameter\n   *\n   * @param {string} paramName\n   * @returns {string | undefined}\n   */\n  const isDeprecatedParameter = paramName => {\n    return deprecatedParams[paramName];\n  };\n\n  /**\n   * @param {string} param\n   */\n  const checkIfParamIsValid = param => {\n    if (!isValidParameter(param)) {\n      warn(`Unknown parameter \"${param}\"`);\n    }\n  };\n\n  /**\n   * @param {string} param\n   */\n  const checkIfToastParamIsValid = param => {\n    if (toastIncompatibleParams.includes(param)) {\n      warn(`The parameter \"${param}\" is incompatible with toasts`);\n    }\n  };\n\n  /**\n   * @param {string} param\n   */\n  const checkIfParamIsDeprecated = param => {\n    const isDeprecated = isDeprecatedParameter(param);\n    if (isDeprecated) {\n      warnAboutDeprecation(param, isDeprecated);\n    }\n  };\n\n  /**\n   * Show relevant warnings for given params\n   *\n   * @param {SweetAlertOptions} params\n   */\n  const showWarningsForParams = params => {\n    if (params.backdrop === false && params.allowOutsideClick) {\n      warn('\"allowOutsideClick\" parameter requires `backdrop` parameter to be set to `true`');\n    }\n    for (const param in params) {\n      checkIfParamIsValid(param);\n      if (params.toast) {\n        checkIfToastParamIsValid(param);\n      }\n      checkIfParamIsDeprecated(param);\n    }\n  };\n\n  /**\n   * Updates popup parameters.\n   *\n   * @param {SweetAlertOptions} params\n   */\n  function update(params) {\n    const popup = getPopup();\n    const innerParams = privateProps.innerParams.get(this);\n    if (!popup || hasClass(popup, innerParams.hideClass.popup)) {\n      warn(`You're trying to update the closed or closing popup, that won't work. Use the update() method in preConfirm parameter or show a new popup.`);\n      return;\n    }\n    const validUpdatableParams = filterValidParams(params);\n    const updatedParams = Object.assign({}, innerParams, validUpdatableParams);\n    render(this, updatedParams);\n    privateProps.innerParams.set(this, updatedParams);\n    Object.defineProperties(this, {\n      params: {\n        value: Object.assign({}, this.params, params),\n        writable: false,\n        enumerable: true\n      }\n    });\n  }\n\n  /**\n   * @param {SweetAlertOptions} params\n   * @returns {SweetAlertOptions}\n   */\n  const filterValidParams = params => {\n    const validUpdatableParams = {};\n    Object.keys(params).forEach(param => {\n      if (isUpdatableParameter(param)) {\n        validUpdatableParams[param] = params[param];\n      } else {\n        warn(`Invalid parameter to update: ${param}`);\n      }\n    });\n    return validUpdatableParams;\n  };\n\n  /**\n   * Dispose the current SweetAlert2 instance\n   */\n  function _destroy() {\n    const domCache = privateProps.domCache.get(this);\n    const innerParams = privateProps.innerParams.get(this);\n    if (!innerParams) {\n      disposeWeakMaps(this); // The WeakMaps might have been partly destroyed, we must recall it to dispose any remaining WeakMaps #2335\n      return; // This instance has already been destroyed\n    }\n\n    // Check if there is another Swal closing\n    if (domCache.popup && globalState.swalCloseEventFinishedCallback) {\n      globalState.swalCloseEventFinishedCallback();\n      delete globalState.swalCloseEventFinishedCallback;\n    }\n    if (typeof innerParams.didDestroy === 'function') {\n      innerParams.didDestroy();\n    }\n    disposeSwal(this);\n  }\n\n  /**\n   * @param {SweetAlert} instance\n   */\n  const disposeSwal = instance => {\n    disposeWeakMaps(instance);\n    // Unset this.params so GC will dispose it (#1569)\n    delete instance.params;\n    // Unset globalState props so GC will dispose globalState (#1569)\n    delete globalState.keydownHandler;\n    delete globalState.keydownTarget;\n    // Unset currentInstance\n    delete globalState.currentInstance;\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   */\n  const disposeWeakMaps = instance => {\n    // If the current instance is awaiting a promise result, we keep the privateMethods to call them once the promise result is retrieved #2335\n    if (instance.isAwaitingPromise) {\n      unsetWeakMaps(privateProps, instance);\n      instance.isAwaitingPromise = true;\n    } else {\n      unsetWeakMaps(privateMethods, instance);\n      unsetWeakMaps(privateProps, instance);\n      delete instance.isAwaitingPromise;\n      // Unset instance methods\n      delete instance.disableButtons;\n      delete instance.enableButtons;\n      delete instance.getInput;\n      delete instance.disableInput;\n      delete instance.enableInput;\n      delete instance.hideLoading;\n      delete instance.disableLoading;\n      delete instance.showValidationMessage;\n      delete instance.resetValidationMessage;\n      delete instance.close;\n      delete instance.closePopup;\n      delete instance.closeModal;\n      delete instance.closeToast;\n      delete instance.rejectPromise;\n      delete instance.update;\n      delete instance._destroy;\n    }\n  };\n\n  /**\n   * @param {object} obj\n   * @param {SweetAlert} instance\n   */\n  const unsetWeakMaps = (obj, instance) => {\n    for (const i in obj) {\n      obj[i].delete(instance);\n    }\n  };\n\n  var instanceMethods = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    _destroy: _destroy,\n    close: close,\n    closeModal: close,\n    closePopup: close,\n    closeToast: close,\n    disableButtons: disableButtons,\n    disableInput: disableInput,\n    disableLoading: hideLoading,\n    enableButtons: enableButtons,\n    enableInput: enableInput,\n    getInput: getInput,\n    handleAwaitingPromise: handleAwaitingPromise,\n    hideLoading: hideLoading,\n    rejectPromise: rejectPromise,\n    resetValidationMessage: resetValidationMessage,\n    showValidationMessage: showValidationMessage,\n    update: update\n  });\n\n  const handlePopupClick = (instance, domCache, dismissWith) => {\n    const innerParams = privateProps.innerParams.get(instance);\n    if (innerParams.toast) {\n      handleToastClick(instance, domCache, dismissWith);\n    } else {\n      // Ignore click events that had mousedown on the popup but mouseup on the container\n      // This can happen when the user drags a slider\n      handleModalMousedown(domCache);\n\n      // Ignore click events that had mousedown on the container but mouseup on the popup\n      handleContainerMousedown(domCache);\n      handleModalClick(instance, domCache, dismissWith);\n    }\n  };\n  const handleToastClick = (instance, domCache, dismissWith) => {\n    // Closing toast by internal click\n    domCache.popup.onclick = () => {\n      const innerParams = privateProps.innerParams.get(instance);\n      if (innerParams && (isAnyButtonShown(innerParams) || innerParams.timer || innerParams.input)) {\n        return;\n      }\n      dismissWith(DismissReason.close);\n    };\n  };\n\n  /**\n   * @param {*} innerParams\n   * @returns {boolean}\n   */\n  const isAnyButtonShown = innerParams => {\n    return innerParams.showConfirmButton || innerParams.showDenyButton || innerParams.showCancelButton || innerParams.showCloseButton;\n  };\n  let ignoreOutsideClick = false;\n  const handleModalMousedown = domCache => {\n    domCache.popup.onmousedown = () => {\n      domCache.container.onmouseup = function (e) {\n        domCache.container.onmouseup = undefined;\n        // We only check if the mouseup target is the container because usually it doesn't\n        // have any other direct children aside of the popup\n        if (e.target === domCache.container) {\n          ignoreOutsideClick = true;\n        }\n      };\n    };\n  };\n  const handleContainerMousedown = domCache => {\n    domCache.container.onmousedown = () => {\n      domCache.popup.onmouseup = function (e) {\n        domCache.popup.onmouseup = undefined;\n        // We also need to check if the mouseup target is a child of the popup\n        if (e.target === domCache.popup || domCache.popup.contains(e.target)) {\n          ignoreOutsideClick = true;\n        }\n      };\n    };\n  };\n  const handleModalClick = (instance, domCache, dismissWith) => {\n    domCache.container.onclick = e => {\n      const innerParams = privateProps.innerParams.get(instance);\n      if (ignoreOutsideClick) {\n        ignoreOutsideClick = false;\n        return;\n      }\n      if (e.target === domCache.container && callIfFunction(innerParams.allowOutsideClick)) {\n        dismissWith(DismissReason.backdrop);\n      }\n    };\n  };\n\n  const isJqueryElement = elem => typeof elem === 'object' && elem.jquery;\n  const isElement = elem => elem instanceof Element || isJqueryElement(elem);\n  const argsToParams = args => {\n    const params = {};\n    if (typeof args[0] === 'object' && !isElement(args[0])) {\n      Object.assign(params, args[0]);\n    } else {\n      ['title', 'html', 'icon'].forEach((name, index) => {\n        const arg = args[index];\n        if (typeof arg === 'string' || isElement(arg)) {\n          params[name] = arg;\n        } else if (arg !== undefined) {\n          error(`Unexpected type of ${name}! Expected \"string\" or \"Element\", got ${typeof arg}`);\n        }\n      });\n    }\n    return params;\n  };\n\n  /**\n   * Main method to create a new SweetAlert2 popup\n   *\n   * @param  {...SweetAlertOptions} args\n   * @returns {Promise<SweetAlertResult>}\n   */\n  function fire() {\n    const Swal = this; // eslint-disable-line @typescript-eslint/no-this-alias\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return new Swal(...args);\n  }\n\n  /**\n   * Returns an extended version of `Swal` containing `params` as defaults.\n   * Useful for reusing Swal configuration.\n   *\n   * For example:\n   *\n   * Before:\n   * const textPromptOptions = { input: 'text', showCancelButton: true }\n   * const {value: firstName} = await Swal.fire({ ...textPromptOptions, title: 'What is your first name?' })\n   * const {value: lastName} = await Swal.fire({ ...textPromptOptions, title: 'What is your last name?' })\n   *\n   * After:\n   * const TextPrompt = Swal.mixin({ input: 'text', showCancelButton: true })\n   * const {value: firstName} = await TextPrompt('What is your first name?')\n   * const {value: lastName} = await TextPrompt('What is your last name?')\n   *\n   * @param {SweetAlertOptions} mixinParams\n   * @returns {SweetAlert}\n   */\n  function mixin(mixinParams) {\n    class MixinSwal extends this {\n      _main(params, priorityMixinParams) {\n        return super._main(params, Object.assign({}, mixinParams, priorityMixinParams));\n      }\n    }\n    // @ts-ignore\n    return MixinSwal;\n  }\n\n  /**\n   * If `timer` parameter is set, returns number of milliseconds of timer remained.\n   * Otherwise, returns undefined.\n   *\n   * @returns {number | undefined}\n   */\n  const getTimerLeft = () => {\n    return globalState.timeout && globalState.timeout.getTimerLeft();\n  };\n\n  /**\n   * Stop timer. Returns number of milliseconds of timer remained.\n   * If `timer` parameter isn't set, returns undefined.\n   *\n   * @returns {number | undefined}\n   */\n  const stopTimer = () => {\n    if (globalState.timeout) {\n      stopTimerProgressBar();\n      return globalState.timeout.stop();\n    }\n  };\n\n  /**\n   * Resume timer. Returns number of milliseconds of timer remained.\n   * If `timer` parameter isn't set, returns undefined.\n   *\n   * @returns {number | undefined}\n   */\n  const resumeTimer = () => {\n    if (globalState.timeout) {\n      const remaining = globalState.timeout.start();\n      animateTimerProgressBar(remaining);\n      return remaining;\n    }\n  };\n\n  /**\n   * Resume timer. Returns number of milliseconds of timer remained.\n   * If `timer` parameter isn't set, returns undefined.\n   *\n   * @returns {number | undefined}\n   */\n  const toggleTimer = () => {\n    const timer = globalState.timeout;\n    return timer && (timer.running ? stopTimer() : resumeTimer());\n  };\n\n  /**\n   * Increase timer. Returns number of milliseconds of an updated timer.\n   * If `timer` parameter isn't set, returns undefined.\n   *\n   * @param {number} n\n   * @returns {number | undefined}\n   */\n  const increaseTimer = n => {\n    if (globalState.timeout) {\n      const remaining = globalState.timeout.increase(n);\n      animateTimerProgressBar(remaining, true);\n      return remaining;\n    }\n  };\n\n  /**\n   * Check if timer is running. Returns true if timer is running\n   * or false if timer is paused or stopped.\n   * If `timer` parameter isn't set, returns undefined\n   *\n   * @returns {boolean}\n   */\n  const isTimerRunning = () => {\n    return !!(globalState.timeout && globalState.timeout.isRunning());\n  };\n\n  let bodyClickListenerAdded = false;\n  const clickHandlers = {};\n\n  /**\n   * @param {string} attr\n   */\n  function bindClickHandler() {\n    let attr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'data-swal-template';\n    clickHandlers[attr] = this;\n    if (!bodyClickListenerAdded) {\n      document.body.addEventListener('click', bodyClickListener);\n      bodyClickListenerAdded = true;\n    }\n  }\n  const bodyClickListener = event => {\n    for (let el = event.target; el && el !== document; el = el.parentNode) {\n      for (const attr in clickHandlers) {\n        const template = el.getAttribute(attr);\n        if (template) {\n          clickHandlers[attr].fire({\n            template\n          });\n          return;\n        }\n      }\n    }\n  };\n\n  var staticMethods = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    argsToParams: argsToParams,\n    bindClickHandler: bindClickHandler,\n    clickCancel: clickCancel,\n    clickConfirm: clickConfirm,\n    clickDeny: clickDeny,\n    enableLoading: showLoading,\n    fire: fire,\n    getActions: getActions,\n    getCancelButton: getCancelButton,\n    getCloseButton: getCloseButton,\n    getConfirmButton: getConfirmButton,\n    getContainer: getContainer,\n    getDenyButton: getDenyButton,\n    getFocusableElements: getFocusableElements,\n    getFooter: getFooter,\n    getHtmlContainer: getHtmlContainer,\n    getIcon: getIcon,\n    getIconContent: getIconContent,\n    getImage: getImage,\n    getInputLabel: getInputLabel,\n    getLoader: getLoader,\n    getPopup: getPopup,\n    getProgressSteps: getProgressSteps,\n    getTimerLeft: getTimerLeft,\n    getTimerProgressBar: getTimerProgressBar,\n    getTitle: getTitle,\n    getValidationMessage: getValidationMessage,\n    increaseTimer: increaseTimer,\n    isDeprecatedParameter: isDeprecatedParameter,\n    isLoading: isLoading,\n    isTimerRunning: isTimerRunning,\n    isUpdatableParameter: isUpdatableParameter,\n    isValidParameter: isValidParameter,\n    isVisible: isVisible,\n    mixin: mixin,\n    resumeTimer: resumeTimer,\n    showLoading: showLoading,\n    stopTimer: stopTimer,\n    toggleTimer: toggleTimer\n  });\n\n  class Timer {\n    /**\n     * @param {Function} callback\n     * @param {number} delay\n     */\n    constructor(callback, delay) {\n      this.callback = callback;\n      this.remaining = delay;\n      this.running = false;\n      this.start();\n    }\n\n    /**\n     * @returns {number}\n     */\n    start() {\n      if (!this.running) {\n        this.running = true;\n        this.started = new Date();\n        this.id = setTimeout(this.callback, this.remaining);\n      }\n      return this.remaining;\n    }\n\n    /**\n     * @returns {number}\n     */\n    stop() {\n      if (this.started && this.running) {\n        this.running = false;\n        clearTimeout(this.id);\n        this.remaining -= new Date().getTime() - this.started.getTime();\n      }\n      return this.remaining;\n    }\n\n    /**\n     * @param {number} n\n     * @returns {number}\n     */\n    increase(n) {\n      const running = this.running;\n      if (running) {\n        this.stop();\n      }\n      this.remaining += n;\n      if (running) {\n        this.start();\n      }\n      return this.remaining;\n    }\n\n    /**\n     * @returns {number}\n     */\n    getTimerLeft() {\n      if (this.running) {\n        this.stop();\n        this.start();\n      }\n      return this.remaining;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isRunning() {\n      return this.running;\n    }\n  }\n\n  const swalStringParams = ['swal-title', 'swal-html', 'swal-footer'];\n\n  /**\n   * @param {SweetAlertOptions} params\n   * @returns {SweetAlertOptions}\n   */\n  const getTemplateParams = params => {\n    /** @type {HTMLTemplateElement} */\n    const template = typeof params.template === 'string' ? document.querySelector(params.template) : params.template;\n    if (!template) {\n      return {};\n    }\n    /** @type {DocumentFragment} */\n    const templateContent = template.content;\n    showWarningsForElements(templateContent);\n    const result = Object.assign(getSwalParams(templateContent), getSwalFunctionParams(templateContent), getSwalButtons(templateContent), getSwalImage(templateContent), getSwalIcon(templateContent), getSwalInput(templateContent), getSwalStringParams(templateContent, swalStringParams));\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   * @returns {SweetAlertOptions}\n   */\n  const getSwalParams = templateContent => {\n    const result = {};\n    /** @type {HTMLElement[]} */\n    const swalParams = Array.from(templateContent.querySelectorAll('swal-param'));\n    swalParams.forEach(param => {\n      showWarningsForAttributes(param, ['name', 'value']);\n      const paramName = param.getAttribute('name');\n      const value = param.getAttribute('value');\n      if (typeof defaultParams[paramName] === 'boolean') {\n        result[paramName] = value !== 'false';\n      } else if (typeof defaultParams[paramName] === 'object') {\n        result[paramName] = JSON.parse(value);\n      } else {\n        result[paramName] = value;\n      }\n    });\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   * @returns {SweetAlertOptions}\n   */\n  const getSwalFunctionParams = templateContent => {\n    const result = {};\n    /** @type {HTMLElement[]} */\n    const swalFunctions = Array.from(templateContent.querySelectorAll('swal-function-param'));\n    swalFunctions.forEach(param => {\n      const paramName = param.getAttribute('name');\n      const value = param.getAttribute('value');\n      result[paramName] = new Function(`return ${value}`)();\n    });\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   * @returns {SweetAlertOptions}\n   */\n  const getSwalButtons = templateContent => {\n    const result = {};\n    /** @type {HTMLElement[]} */\n    const swalButtons = Array.from(templateContent.querySelectorAll('swal-button'));\n    swalButtons.forEach(button => {\n      showWarningsForAttributes(button, ['type', 'color', 'aria-label']);\n      const type = button.getAttribute('type');\n      result[`${type}ButtonText`] = button.innerHTML;\n      result[`show${capitalizeFirstLetter(type)}Button`] = true;\n      if (button.hasAttribute('color')) {\n        result[`${type}ButtonColor`] = button.getAttribute('color');\n      }\n      if (button.hasAttribute('aria-label')) {\n        result[`${type}ButtonAriaLabel`] = button.getAttribute('aria-label');\n      }\n    });\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   * @returns {SweetAlertOptions}\n   */\n  const getSwalImage = templateContent => {\n    const result = {};\n    /** @type {HTMLElement} */\n    const image = templateContent.querySelector('swal-image');\n    if (image) {\n      showWarningsForAttributes(image, ['src', 'width', 'height', 'alt']);\n      if (image.hasAttribute('src')) {\n        result.imageUrl = image.getAttribute('src');\n      }\n      if (image.hasAttribute('width')) {\n        result.imageWidth = image.getAttribute('width');\n      }\n      if (image.hasAttribute('height')) {\n        result.imageHeight = image.getAttribute('height');\n      }\n      if (image.hasAttribute('alt')) {\n        result.imageAlt = image.getAttribute('alt');\n      }\n    }\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   * @returns {SweetAlertOptions}\n   */\n  const getSwalIcon = templateContent => {\n    const result = {};\n    /** @type {HTMLElement} */\n    const icon = templateContent.querySelector('swal-icon');\n    if (icon) {\n      showWarningsForAttributes(icon, ['type', 'color']);\n      if (icon.hasAttribute('type')) {\n        /** @type {SweetAlertIcon} */\n        // @ts-ignore\n        result.icon = icon.getAttribute('type');\n      }\n      if (icon.hasAttribute('color')) {\n        result.iconColor = icon.getAttribute('color');\n      }\n      result.iconHtml = icon.innerHTML;\n    }\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   * @returns {SweetAlertOptions}\n   */\n  const getSwalInput = templateContent => {\n    const result = {};\n    /** @type {HTMLElement} */\n    const input = templateContent.querySelector('swal-input');\n    if (input) {\n      showWarningsForAttributes(input, ['type', 'label', 'placeholder', 'value']);\n      /** @type {SweetAlertInput} */\n      // @ts-ignore\n      result.input = input.getAttribute('type') || 'text';\n      if (input.hasAttribute('label')) {\n        result.inputLabel = input.getAttribute('label');\n      }\n      if (input.hasAttribute('placeholder')) {\n        result.inputPlaceholder = input.getAttribute('placeholder');\n      }\n      if (input.hasAttribute('value')) {\n        result.inputValue = input.getAttribute('value');\n      }\n    }\n    /** @type {HTMLElement[]} */\n    const inputOptions = Array.from(templateContent.querySelectorAll('swal-input-option'));\n    if (inputOptions.length) {\n      result.inputOptions = {};\n      inputOptions.forEach(option => {\n        showWarningsForAttributes(option, ['value']);\n        const optionValue = option.getAttribute('value');\n        const optionName = option.innerHTML;\n        result.inputOptions[optionValue] = optionName;\n      });\n    }\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   * @param {string[]} paramNames\n   * @returns {SweetAlertOptions}\n   */\n  const getSwalStringParams = (templateContent, paramNames) => {\n    const result = {};\n    for (const i in paramNames) {\n      const paramName = paramNames[i];\n      /** @type {HTMLElement} */\n      const tag = templateContent.querySelector(paramName);\n      if (tag) {\n        showWarningsForAttributes(tag, []);\n        result[paramName.replace(/^swal-/, '')] = tag.innerHTML.trim();\n      }\n    }\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   */\n  const showWarningsForElements = templateContent => {\n    const allowedElements = swalStringParams.concat(['swal-param', 'swal-function-param', 'swal-button', 'swal-image', 'swal-icon', 'swal-input', 'swal-input-option']);\n    Array.from(templateContent.children).forEach(el => {\n      const tagName = el.tagName.toLowerCase();\n      if (!allowedElements.includes(tagName)) {\n        warn(`Unrecognized element <${tagName}>`);\n      }\n    });\n  };\n\n  /**\n   * @param {HTMLElement} el\n   * @param {string[]} allowedAttributes\n   */\n  const showWarningsForAttributes = (el, allowedAttributes) => {\n    Array.from(el.attributes).forEach(attribute => {\n      if (allowedAttributes.indexOf(attribute.name) === -1) {\n        warn([`Unrecognized attribute \"${attribute.name}\" on <${el.tagName.toLowerCase()}>.`, `${allowedAttributes.length ? `Allowed attributes are: ${allowedAttributes.join(', ')}` : 'To set the value, use HTML within the element.'}`]);\n      }\n    });\n  };\n\n  const SHOW_CLASS_TIMEOUT = 10;\n\n  /**\n   * Open popup, add necessary classes and styles, fix scrollbar\n   *\n   * @param {SweetAlertOptions} params\n   */\n  const openPopup = params => {\n    const container = getContainer();\n    const popup = getPopup();\n    if (typeof params.willOpen === 'function') {\n      params.willOpen(popup);\n    }\n    const bodyStyles = window.getComputedStyle(document.body);\n    const initialBodyOverflow = bodyStyles.overflowY;\n    addClasses(container, popup, params);\n\n    // scrolling is 'hidden' until animation is done, after that 'auto'\n    setTimeout(() => {\n      setScrollingVisibility(container, popup);\n    }, SHOW_CLASS_TIMEOUT);\n    if (isModal()) {\n      fixScrollContainer(container, params.scrollbarPadding, initialBodyOverflow);\n      setAriaHidden();\n    }\n    if (!isToast() && !globalState.previousActiveElement) {\n      globalState.previousActiveElement = document.activeElement;\n    }\n    if (typeof params.didOpen === 'function') {\n      setTimeout(() => params.didOpen(popup));\n    }\n    removeClass(container, swalClasses['no-transition']);\n  };\n\n  /**\n   * @param {AnimationEvent} event\n   */\n  const swalOpenAnimationFinished = event => {\n    const popup = getPopup();\n    if (event.target !== popup) {\n      return;\n    }\n    const container = getContainer();\n    popup.removeEventListener(animationEndEvent, swalOpenAnimationFinished);\n    container.style.overflowY = 'auto';\n  };\n\n  /**\n   * @param {HTMLElement} container\n   * @param {HTMLElement} popup\n   */\n  const setScrollingVisibility = (container, popup) => {\n    if (animationEndEvent && hasCssAnimation(popup)) {\n      container.style.overflowY = 'hidden';\n      popup.addEventListener(animationEndEvent, swalOpenAnimationFinished);\n    } else {\n      container.style.overflowY = 'auto';\n    }\n  };\n\n  /**\n   * @param {HTMLElement} container\n   * @param {boolean} scrollbarPadding\n   * @param {string} initialBodyOverflow\n   */\n  const fixScrollContainer = (container, scrollbarPadding, initialBodyOverflow) => {\n    iOSfix();\n    if (scrollbarPadding && initialBodyOverflow !== 'hidden') {\n      fixScrollbar();\n    }\n\n    // sweetalert2/issues/1247\n    setTimeout(() => {\n      container.scrollTop = 0;\n    });\n  };\n\n  /**\n   * @param {HTMLElement} container\n   * @param {HTMLElement} popup\n   * @param {SweetAlertOptions} params\n   */\n  const addClasses = (container, popup, params) => {\n    addClass(container, params.showClass.backdrop);\n    // this workaround with opacity is needed for https://github.com/sweetalert2/sweetalert2/issues/2059\n    popup.style.setProperty('opacity', '0', 'important');\n    show(popup, 'grid');\n    setTimeout(() => {\n      // Animate popup right after showing it\n      addClass(popup, params.showClass.popup);\n      // and remove the opacity workaround\n      popup.style.removeProperty('opacity');\n    }, SHOW_CLASS_TIMEOUT); // 10ms in order to fix #2062\n\n    addClass([document.documentElement, document.body], swalClasses.shown);\n    if (params.heightAuto && params.backdrop && !params.toast) {\n      addClass([document.documentElement, document.body], swalClasses['height-auto']);\n    }\n  };\n\n  var defaultInputValidators = {\n    /**\n     * @param {string} string\n     * @param {string} validationMessage\n     * @returns {Promise<void | string>}\n     */\n    email: (string, validationMessage) => {\n      return /^[a-zA-Z0-9.+_-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z0-9-]{2,24}$/.test(string) ? Promise.resolve() : Promise.resolve(validationMessage || 'Invalid email address');\n    },\n    /**\n     * @param {string} string\n     * @param {string} validationMessage\n     * @returns {Promise<void | string>}\n     */\n    url: (string, validationMessage) => {\n      // taken from https://stackoverflow.com/a/3809435 with a small change from #1306 and #2013\n      return /^https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-z]{2,63}\\b([-a-zA-Z0-9@:%_+.~#?&/=]*)$/.test(string) ? Promise.resolve() : Promise.resolve(validationMessage || 'Invalid URL');\n    }\n  };\n\n  /**\n   * @param {SweetAlertOptions} params\n   */\n  function setDefaultInputValidators(params) {\n    // Use default `inputValidator` for supported input types if not provided\n    if (!params.inputValidator) {\n      Object.keys(defaultInputValidators).forEach(key => {\n        if (params.input === key) {\n          params.inputValidator = defaultInputValidators[key];\n        }\n      });\n    }\n  }\n\n  /**\n   * @param {SweetAlertOptions} params\n   */\n  function validateCustomTargetElement(params) {\n    // Determine if the custom target element is valid\n    if (!params.target || typeof params.target === 'string' && !document.querySelector(params.target) || typeof params.target !== 'string' && !params.target.appendChild) {\n      warn('Target parameter is not valid, defaulting to \"body\"');\n      params.target = 'body';\n    }\n  }\n\n  /**\n   * Set type, text and actions on popup\n   *\n   * @param {SweetAlertOptions} params\n   */\n  function setParameters(params) {\n    setDefaultInputValidators(params);\n\n    // showLoaderOnConfirm && preConfirm\n    if (params.showLoaderOnConfirm && !params.preConfirm) {\n      warn('showLoaderOnConfirm is set to true, but preConfirm is not defined.\\n' + 'showLoaderOnConfirm should be used together with preConfirm, see usage example:\\n' + 'https://sweetalert2.github.io/#ajax-request');\n    }\n    validateCustomTargetElement(params);\n\n    // Replace newlines with <br> in title\n    if (typeof params.title === 'string') {\n      params.title = params.title.split('\\n').join('<br />');\n    }\n    init(params);\n  }\n\n  /** @type {SweetAlert} */\n  let currentInstance;\n  class SweetAlert {\n    /**\n     * @param {...any} args\n     * @this {SweetAlert}\n     */\n    constructor() {\n      // Prevent run in Node env\n      if (typeof window === 'undefined') {\n        return;\n      }\n      currentInstance = this;\n\n      // @ts-ignore\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      const outerParams = Object.freeze(this.constructor.argsToParams(args));\n\n      /** @type {Readonly<SweetAlertOptions>} */\n      this.params = outerParams;\n\n      /** @type {boolean} */\n      this.isAwaitingPromise = false;\n      const promise = currentInstance._main(currentInstance.params);\n      privateProps.promise.set(this, promise);\n    }\n    _main(userParams) {\n      let mixinParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      showWarningsForParams(Object.assign({}, mixinParams, userParams));\n      if (globalState.currentInstance) {\n        globalState.currentInstance._destroy();\n        if (isModal()) {\n          unsetAriaHidden();\n        }\n      }\n      globalState.currentInstance = currentInstance;\n      const innerParams = prepareParams(userParams, mixinParams);\n      setParameters(innerParams);\n      Object.freeze(innerParams);\n\n      // clear the previous timer\n      if (globalState.timeout) {\n        globalState.timeout.stop();\n        delete globalState.timeout;\n      }\n\n      // clear the restore focus timeout\n      clearTimeout(globalState.restoreFocusTimeout);\n      const domCache = populateDomCache(currentInstance);\n      render(currentInstance, innerParams);\n      privateProps.innerParams.set(currentInstance, innerParams);\n      return swalPromise(currentInstance, domCache, innerParams);\n    }\n\n    // `catch` cannot be the name of a module export, so we define our thenable methods here instead\n    then(onFulfilled) {\n      const promise = privateProps.promise.get(this);\n      return promise.then(onFulfilled);\n    }\n    finally(onFinally) {\n      const promise = privateProps.promise.get(this);\n      return promise.finally(onFinally);\n    }\n  }\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {DomCache} domCache\n   * @param {SweetAlertOptions} innerParams\n   * @returns {Promise}\n   */\n  const swalPromise = (instance, domCache, innerParams) => {\n    return new Promise((resolve, reject) => {\n      // functions to handle all closings/dismissals\n      /**\n       * @param {DismissReason} dismiss\n       */\n      const dismissWith = dismiss => {\n        instance.close({\n          isDismissed: true,\n          dismiss\n        });\n      };\n      privateMethods.swalPromiseResolve.set(instance, resolve);\n      privateMethods.swalPromiseReject.set(instance, reject);\n      domCache.confirmButton.onclick = () => {\n        handleConfirmButtonClick(instance);\n      };\n      domCache.denyButton.onclick = () => {\n        handleDenyButtonClick(instance);\n      };\n      domCache.cancelButton.onclick = () => {\n        handleCancelButtonClick(instance, dismissWith);\n      };\n      domCache.closeButton.onclick = () => {\n        dismissWith(DismissReason.close);\n      };\n      handlePopupClick(instance, domCache, dismissWith);\n      addKeydownHandler(instance, globalState, innerParams, dismissWith);\n      handleInputOptionsAndValue(instance, innerParams);\n      openPopup(innerParams);\n      setupTimer(globalState, innerParams, dismissWith);\n      initFocus(domCache, innerParams);\n\n      // Scroll container to top on open (#1247, #1946)\n      setTimeout(() => {\n        domCache.container.scrollTop = 0;\n      });\n    });\n  };\n\n  /**\n   * @param {SweetAlertOptions} userParams\n   * @param {SweetAlertOptions} mixinParams\n   * @returns {SweetAlertOptions}\n   */\n  const prepareParams = (userParams, mixinParams) => {\n    const templateParams = getTemplateParams(userParams);\n    const params = Object.assign({}, defaultParams, mixinParams, templateParams, userParams); // precedence is described in #2131\n    params.showClass = Object.assign({}, defaultParams.showClass, params.showClass);\n    params.hideClass = Object.assign({}, defaultParams.hideClass, params.hideClass);\n    return params;\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @returns {DomCache}\n   */\n  const populateDomCache = instance => {\n    const domCache = {\n      popup: getPopup(),\n      container: getContainer(),\n      actions: getActions(),\n      confirmButton: getConfirmButton(),\n      denyButton: getDenyButton(),\n      cancelButton: getCancelButton(),\n      loader: getLoader(),\n      closeButton: getCloseButton(),\n      validationMessage: getValidationMessage(),\n      progressSteps: getProgressSteps()\n    };\n    privateProps.domCache.set(instance, domCache);\n    return domCache;\n  };\n\n  /**\n   * @param {GlobalState} globalState\n   * @param {SweetAlertOptions} innerParams\n   * @param {Function} dismissWith\n   */\n  const setupTimer = (globalState, innerParams, dismissWith) => {\n    const timerProgressBar = getTimerProgressBar();\n    hide(timerProgressBar);\n    if (innerParams.timer) {\n      globalState.timeout = new Timer(() => {\n        dismissWith('timer');\n        delete globalState.timeout;\n      }, innerParams.timer);\n      if (innerParams.timerProgressBar) {\n        show(timerProgressBar);\n        applyCustomClass(timerProgressBar, innerParams, 'timerProgressBar');\n        setTimeout(() => {\n          if (globalState.timeout && globalState.timeout.running) {\n            // timer can be already stopped or unset at this point\n            animateTimerProgressBar(innerParams.timer);\n          }\n        });\n      }\n    }\n  };\n\n  /**\n   * @param {DomCache} domCache\n   * @param {SweetAlertOptions} innerParams\n   */\n  const initFocus = (domCache, innerParams) => {\n    if (innerParams.toast) {\n      return;\n    }\n    if (!callIfFunction(innerParams.allowEnterKey)) {\n      blurActiveElement();\n      return;\n    }\n    if (!focusButton(domCache, innerParams)) {\n      setFocus(-1, 1);\n    }\n  };\n\n  /**\n   * @param {DomCache} domCache\n   * @param {SweetAlertOptions} innerParams\n   * @returns {boolean}\n   */\n  const focusButton = (domCache, innerParams) => {\n    if (innerParams.focusDeny && isVisible$1(domCache.denyButton)) {\n      domCache.denyButton.focus();\n      return true;\n    }\n    if (innerParams.focusCancel && isVisible$1(domCache.cancelButton)) {\n      domCache.cancelButton.focus();\n      return true;\n    }\n    if (innerParams.focusConfirm && isVisible$1(domCache.confirmButton)) {\n      domCache.confirmButton.focus();\n      return true;\n    }\n    return false;\n  };\n  const blurActiveElement = () => {\n    if (document.activeElement instanceof HTMLElement && typeof document.activeElement.blur === 'function') {\n      document.activeElement.blur();\n    }\n  };\n\n  // Dear russian users visiting russian sites. Let's have fun.\n  if (typeof window !== 'undefined' && /^ru\\b/.test(navigator.language) && location.host.match(/\\.(ru|su|by|xn--p1ai)$/)) {\n    const now = new Date();\n    const initiationDate = localStorage.getItem('swal-initiation');\n    if (!initiationDate) {\n      localStorage.setItem('swal-initiation', `${now}`);\n    } else if ((now.getTime() - Date.parse(initiationDate)) / (1000 * 60 * 60 * 24) > 3) {\n      setTimeout(() => {\n        document.body.style.pointerEvents = 'none';\n        const ukrainianAnthem = document.createElement('audio');\n        ukrainianAnthem.src = 'https://flag-gimn.ru/wp-content/uploads/2021/09/Ukraina.mp3';\n        ukrainianAnthem.loop = true;\n        document.body.appendChild(ukrainianAnthem);\n        setTimeout(() => {\n          ukrainianAnthem.play().catch(() => {\n            // ignore\n          });\n        }, 2500);\n      }, 500);\n    }\n  }\n\n  // Assign instance methods from src/instanceMethods/*.js to prototype\n  SweetAlert.prototype.disableButtons = disableButtons;\n  SweetAlert.prototype.enableButtons = enableButtons;\n  SweetAlert.prototype.getInput = getInput;\n  SweetAlert.prototype.disableInput = disableInput;\n  SweetAlert.prototype.enableInput = enableInput;\n  SweetAlert.prototype.hideLoading = hideLoading;\n  SweetAlert.prototype.disableLoading = hideLoading;\n  SweetAlert.prototype.showValidationMessage = showValidationMessage;\n  SweetAlert.prototype.resetValidationMessage = resetValidationMessage;\n  SweetAlert.prototype.close = close;\n  SweetAlert.prototype.closePopup = close;\n  SweetAlert.prototype.closeModal = close;\n  SweetAlert.prototype.closeToast = close;\n  SweetAlert.prototype.rejectPromise = rejectPromise;\n  SweetAlert.prototype.update = update;\n  SweetAlert.prototype._destroy = _destroy;\n\n  // Assign static methods from src/staticMethods/*.js to constructor\n  Object.assign(SweetAlert, staticMethods);\n\n  // Proxy to instance methods to constructor, for now, for backwards compatibility\n  Object.keys(instanceMethods).forEach(key => {\n    /**\n     * @param {...any} args\n     * @returns {any | undefined}\n     */\n    SweetAlert[key] = function () {\n      if (currentInstance && currentInstance[key]) {\n        return currentInstance[key](...arguments);\n      }\n      return null;\n    };\n  });\n  SweetAlert.DismissReason = DismissReason;\n  SweetAlert.version = '11.7.12';\n\n  const Swal = SweetAlert;\n  // @ts-ignore\n  Swal.default = Swal;\n\n  return Swal;\n\n}));\nif (typeof this !== 'undefined' && this.Sweetalert2){this.swal = this.sweetAlert = this.Swal = this.SweetAlert = this.Sweetalert2}\n\"undefined\"!=typeof document&&function(e,t){var n=e.createElement(\"style\");if(e.getElementsByTagName(\"head\")[0].appendChild(n),n.styleSheet)n.styleSheet.disabled||(n.styleSheet.cssText=t);else try{n.innerHTML=t}catch(e){n.innerText=t}}(document,\".swal2-popup.swal2-toast{box-sizing:border-box;grid-column:1/4 !important;grid-row:1/4 !important;grid-template-columns:min-content auto min-content;padding:1em;overflow-y:hidden;background:#fff;box-shadow:0 0 1px rgba(0,0,0,.075),0 1px 2px rgba(0,0,0,.075),1px 2px 4px rgba(0,0,0,.075),1px 3px 8px rgba(0,0,0,.075),2px 4px 16px rgba(0,0,0,.075);pointer-events:all}.swal2-popup.swal2-toast>*{grid-column:2}.swal2-popup.swal2-toast .swal2-title{margin:.5em 1em;padding:0;font-size:1em;text-align:initial}.swal2-popup.swal2-toast .swal2-loading{justify-content:center}.swal2-popup.swal2-toast .swal2-input{height:2em;margin:.5em;font-size:1em}.swal2-popup.swal2-toast .swal2-validation-message{font-size:1em}.swal2-popup.swal2-toast .swal2-footer{margin:.5em 0 0;padding:.5em 0 0;font-size:.8em}.swal2-popup.swal2-toast .swal2-close{grid-column:3/3;grid-row:1/99;align-self:center;width:.8em;height:.8em;margin:0;font-size:2em}.swal2-popup.swal2-toast .swal2-html-container{margin:.5em 1em;padding:0;overflow:initial;font-size:1em;text-align:initial}.swal2-popup.swal2-toast .swal2-html-container:empty{padding:0}.swal2-popup.swal2-toast .swal2-loader{grid-column:1;grid-row:1/99;align-self:center;width:2em;height:2em;margin:.25em}.swal2-popup.swal2-toast .swal2-icon{grid-column:1;grid-row:1/99;align-self:center;width:2em;min-width:2em;height:2em;margin:0 .5em 0 0}.swal2-popup.swal2-toast .swal2-icon .swal2-icon-content{display:flex;align-items:center;font-size:1.8em;font-weight:bold}.swal2-popup.swal2-toast .swal2-icon.swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line]{top:.875em;width:1.375em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:.3125em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:.3125em}.swal2-popup.swal2-toast .swal2-actions{justify-content:flex-start;height:auto;margin:0;margin-top:.5em;padding:0 .5em}.swal2-popup.swal2-toast .swal2-styled{margin:.25em .5em;padding:.4em .6em;font-size:1em}.swal2-popup.swal2-toast .swal2-success{border-color:#a5dc86}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line]{position:absolute;width:1.6em;height:3em;transform:rotate(45deg);border-radius:50%}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=left]{top:-0.8em;left:-0.5em;transform:rotate(-45deg);transform-origin:2em 2em;border-radius:4em 0 0 4em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=right]{top:-0.25em;left:.9375em;transform-origin:0 1.5em;border-radius:0 4em 4em 0}.swal2-popup.swal2-toast .swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-success .swal2-success-fix{top:0;left:.4375em;width:.4375em;height:2.6875em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line]{height:.3125em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=tip]{top:1.125em;left:.1875em;width:.75em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=long]{top:.9375em;right:.1875em;width:1.375em}.swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-tip{animation:swal2-toast-animate-success-line-tip .75s}.swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-long{animation:swal2-toast-animate-success-line-long .75s}.swal2-popup.swal2-toast.swal2-show{animation:swal2-toast-show .5s}.swal2-popup.swal2-toast.swal2-hide{animation:swal2-toast-hide .1s forwards}div:where(.swal2-container){display:grid;position:fixed;z-index:1060;inset:0;box-sizing:border-box;grid-template-areas:\\\"top-start     top            top-end\\\" \\\"center-start  center         center-end\\\" \\\"bottom-start  bottom-center  bottom-end\\\";grid-template-rows:minmax(min-content, auto) minmax(min-content, auto) minmax(min-content, auto);height:100%;padding:.625em;overflow-x:hidden;transition:background-color .1s;-webkit-overflow-scrolling:touch}div:where(.swal2-container).swal2-backdrop-show,div:where(.swal2-container).swal2-noanimation{background:rgba(0,0,0,.4)}div:where(.swal2-container).swal2-backdrop-hide{background:rgba(0,0,0,0) !important}div:where(.swal2-container).swal2-top-start,div:where(.swal2-container).swal2-center-start,div:where(.swal2-container).swal2-bottom-start{grid-template-columns:minmax(0, 1fr) auto auto}div:where(.swal2-container).swal2-top,div:where(.swal2-container).swal2-center,div:where(.swal2-container).swal2-bottom{grid-template-columns:auto minmax(0, 1fr) auto}div:where(.swal2-container).swal2-top-end,div:where(.swal2-container).swal2-center-end,div:where(.swal2-container).swal2-bottom-end{grid-template-columns:auto auto minmax(0, 1fr)}div:where(.swal2-container).swal2-top-start>.swal2-popup{align-self:start}div:where(.swal2-container).swal2-top>.swal2-popup{grid-column:2;align-self:start;justify-self:center}div:where(.swal2-container).swal2-top-end>.swal2-popup,div:where(.swal2-container).swal2-top-right>.swal2-popup{grid-column:3;align-self:start;justify-self:end}div:where(.swal2-container).swal2-center-start>.swal2-popup,div:where(.swal2-container).swal2-center-left>.swal2-popup{grid-row:2;align-self:center}div:where(.swal2-container).swal2-center>.swal2-popup{grid-column:2;grid-row:2;align-self:center;justify-self:center}div:where(.swal2-container).swal2-center-end>.swal2-popup,div:where(.swal2-container).swal2-center-right>.swal2-popup{grid-column:3;grid-row:2;align-self:center;justify-self:end}div:where(.swal2-container).swal2-bottom-start>.swal2-popup,div:where(.swal2-container).swal2-bottom-left>.swal2-popup{grid-column:1;grid-row:3;align-self:end}div:where(.swal2-container).swal2-bottom>.swal2-popup{grid-column:2;grid-row:3;justify-self:center;align-self:end}div:where(.swal2-container).swal2-bottom-end>.swal2-popup,div:where(.swal2-container).swal2-bottom-right>.swal2-popup{grid-column:3;grid-row:3;align-self:end;justify-self:end}div:where(.swal2-container).swal2-grow-row>.swal2-popup,div:where(.swal2-container).swal2-grow-fullscreen>.swal2-popup{grid-column:1/4;width:100%}div:where(.swal2-container).swal2-grow-column>.swal2-popup,div:where(.swal2-container).swal2-grow-fullscreen>.swal2-popup{grid-row:1/4;align-self:stretch}div:where(.swal2-container).swal2-no-transition{transition:none !important}div:where(.swal2-container) div:where(.swal2-popup){display:none;position:relative;box-sizing:border-box;grid-template-columns:minmax(0, 100%);width:32em;max-width:100%;padding:0 0 1.25em;border:none;border-radius:5px;background:#fff;color:#545454;font-family:inherit;font-size:1rem}div:where(.swal2-container) div:where(.swal2-popup):focus{outline:none}div:where(.swal2-container) div:where(.swal2-popup).swal2-loading{overflow-y:hidden}div:where(.swal2-container) h2:where(.swal2-title){position:relative;max-width:100%;margin:0;padding:.8em 1em 0;color:inherit;font-size:1.875em;font-weight:600;text-align:center;text-transform:none;word-wrap:break-word}div:where(.swal2-container) div:where(.swal2-actions){display:flex;z-index:1;box-sizing:border-box;flex-wrap:wrap;align-items:center;justify-content:center;width:auto;margin:1.25em auto 0;padding:0}div:where(.swal2-container) div:where(.swal2-actions):not(.swal2-loading) .swal2-styled[disabled]{opacity:.4}div:where(.swal2-container) div:where(.swal2-actions):not(.swal2-loading) .swal2-styled:hover{background-image:linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.1))}div:where(.swal2-container) div:where(.swal2-actions):not(.swal2-loading) .swal2-styled:active{background-image:linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2))}div:where(.swal2-container) div:where(.swal2-loader){display:none;align-items:center;justify-content:center;width:2.2em;height:2.2em;margin:0 1.875em;animation:swal2-rotate-loading 1.5s linear 0s infinite normal;border-width:.25em;border-style:solid;border-radius:100%;border-color:#2778c4 rgba(0,0,0,0) #2778c4 rgba(0,0,0,0)}div:where(.swal2-container) button:where(.swal2-styled){margin:.3125em;padding:.625em 1.1em;transition:box-shadow .1s;box-shadow:0 0 0 3px rgba(0,0,0,0);font-weight:500}div:where(.swal2-container) button:where(.swal2-styled):not([disabled]){cursor:pointer}div:where(.swal2-container) button:where(.swal2-styled).swal2-confirm{border:0;border-radius:.25em;background:initial;background-color:#7066e0;color:#fff;font-size:1em}div:where(.swal2-container) button:where(.swal2-styled).swal2-confirm:focus{box-shadow:0 0 0 3px rgba(112,102,224,.5)}div:where(.swal2-container) button:where(.swal2-styled).swal2-deny{border:0;border-radius:.25em;background:initial;background-color:#dc3741;color:#fff;font-size:1em}div:where(.swal2-container) button:where(.swal2-styled).swal2-deny:focus{box-shadow:0 0 0 3px rgba(220,55,65,.5)}div:where(.swal2-container) button:where(.swal2-styled).swal2-cancel{border:0;border-radius:.25em;background:initial;background-color:#6e7881;color:#fff;font-size:1em}div:where(.swal2-container) button:where(.swal2-styled).swal2-cancel:focus{box-shadow:0 0 0 3px rgba(110,120,129,.5)}div:where(.swal2-container) button:where(.swal2-styled).swal2-default-outline:focus{box-shadow:0 0 0 3px rgba(100,150,200,.5)}div:where(.swal2-container) button:where(.swal2-styled):focus{outline:none}div:where(.swal2-container) button:where(.swal2-styled)::-moz-focus-inner{border:0}div:where(.swal2-container) div:where(.swal2-footer){justify-content:center;margin:1em 0 0;padding:1em 1em 0;border-top:1px solid #eee;color:inherit;font-size:1em}div:where(.swal2-container) .swal2-timer-progress-bar-container{position:absolute;right:0;bottom:0;left:0;grid-column:auto !important;overflow:hidden;border-bottom-right-radius:5px;border-bottom-left-radius:5px}div:where(.swal2-container) div:where(.swal2-timer-progress-bar){width:100%;height:.25em;background:rgba(0,0,0,.2)}div:where(.swal2-container) img:where(.swal2-image){max-width:100%;margin:2em auto 1em}div:where(.swal2-container) button:where(.swal2-close){z-index:2;align-items:center;justify-content:center;width:1.2em;height:1.2em;margin-top:0;margin-right:0;margin-bottom:-1.2em;padding:0;overflow:hidden;transition:color .1s,box-shadow .1s;border:none;border-radius:5px;background:rgba(0,0,0,0);color:#ccc;font-family:monospace;font-size:2.5em;cursor:pointer;justify-self:end}div:where(.swal2-container) button:where(.swal2-close):hover{transform:none;background:rgba(0,0,0,0);color:#f27474}div:where(.swal2-container) button:where(.swal2-close):focus{outline:none;box-shadow:inset 0 0 0 3px rgba(100,150,200,.5)}div:where(.swal2-container) button:where(.swal2-close)::-moz-focus-inner{border:0}div:where(.swal2-container) .swal2-html-container{z-index:1;justify-content:center;margin:1em 1.6em .3em;padding:0;overflow:auto;color:inherit;font-size:1.125em;font-weight:normal;line-height:normal;text-align:center;word-wrap:break-word;word-break:break-word}div:where(.swal2-container) input:where(.swal2-input),div:where(.swal2-container) input:where(.swal2-file),div:where(.swal2-container) textarea:where(.swal2-textarea),div:where(.swal2-container) select:where(.swal2-select),div:where(.swal2-container) div:where(.swal2-radio),div:where(.swal2-container) label:where(.swal2-checkbox){margin:1em 2em 3px}div:where(.swal2-container) input:where(.swal2-input),div:where(.swal2-container) input:where(.swal2-file),div:where(.swal2-container) textarea:where(.swal2-textarea){box-sizing:border-box;width:auto;transition:border-color .1s,box-shadow .1s;border:1px solid #d9d9d9;border-radius:.1875em;background:rgba(0,0,0,0);box-shadow:inset 0 1px 1px rgba(0,0,0,.06),0 0 0 3px rgba(0,0,0,0);color:inherit;font-size:1.125em}div:where(.swal2-container) input:where(.swal2-input).swal2-inputerror,div:where(.swal2-container) input:where(.swal2-file).swal2-inputerror,div:where(.swal2-container) textarea:where(.swal2-textarea).swal2-inputerror{border-color:#f27474 !important;box-shadow:0 0 2px #f27474 !important}div:where(.swal2-container) input:where(.swal2-input):focus,div:where(.swal2-container) input:where(.swal2-file):focus,div:where(.swal2-container) textarea:where(.swal2-textarea):focus{border:1px solid #b4dbed;outline:none;box-shadow:inset 0 1px 1px rgba(0,0,0,.06),0 0 0 3px rgba(100,150,200,.5)}div:where(.swal2-container) input:where(.swal2-input)::placeholder,div:where(.swal2-container) input:where(.swal2-file)::placeholder,div:where(.swal2-container) textarea:where(.swal2-textarea)::placeholder{color:#ccc}div:where(.swal2-container) .swal2-range{margin:1em 2em 3px;background:#fff}div:where(.swal2-container) .swal2-range input{width:80%}div:where(.swal2-container) .swal2-range output{width:20%;color:inherit;font-weight:600;text-align:center}div:where(.swal2-container) .swal2-range input,div:where(.swal2-container) .swal2-range output{height:2.625em;padding:0;font-size:1.125em;line-height:2.625em}div:where(.swal2-container) .swal2-input{height:2.625em;padding:0 .75em}div:where(.swal2-container) .swal2-file{width:75%;margin-right:auto;margin-left:auto;background:rgba(0,0,0,0);font-size:1.125em}div:where(.swal2-container) .swal2-textarea{height:6.75em;padding:.75em}div:where(.swal2-container) .swal2-select{min-width:50%;max-width:100%;padding:.375em .625em;background:rgba(0,0,0,0);color:inherit;font-size:1.125em}div:where(.swal2-container) .swal2-radio,div:where(.swal2-container) .swal2-checkbox{align-items:center;justify-content:center;background:#fff;color:inherit}div:where(.swal2-container) .swal2-radio label,div:where(.swal2-container) .swal2-checkbox label{margin:0 .6em;font-size:1.125em}div:where(.swal2-container) .swal2-radio input,div:where(.swal2-container) .swal2-checkbox input{flex-shrink:0;margin:0 .4em}div:where(.swal2-container) label:where(.swal2-input-label){display:flex;justify-content:center;margin:1em auto 0}div:where(.swal2-container) div:where(.swal2-validation-message){align-items:center;justify-content:center;margin:1em 0 0;padding:.625em;overflow:hidden;background:#f0f0f0;color:#666;font-size:1em;font-weight:300}div:where(.swal2-container) div:where(.swal2-validation-message)::before{content:\\\"!\\\";display:inline-block;width:1.5em;min-width:1.5em;height:1.5em;margin:0 .625em;border-radius:50%;background-color:#f27474;color:#fff;font-weight:600;line-height:1.5em;text-align:center}div:where(.swal2-container) .swal2-progress-steps{flex-wrap:wrap;align-items:center;max-width:100%;margin:1.25em auto;padding:0;background:rgba(0,0,0,0);font-weight:600}div:where(.swal2-container) .swal2-progress-steps li{display:inline-block;position:relative}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step{z-index:20;flex-shrink:0;width:2em;height:2em;border-radius:2em;background:#2778c4;color:#fff;line-height:2em;text-align:center}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step.swal2-active-progress-step{background:#2778c4}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step{background:#add8e6;color:#fff}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step-line{background:#add8e6}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step-line{z-index:10;flex-shrink:0;width:2.5em;height:.4em;margin:0 -1px;background:#2778c4}div:where(.swal2-icon){position:relative;box-sizing:content-box;justify-content:center;width:5em;height:5em;margin:2.5em auto .6em;border:0.25em solid rgba(0,0,0,0);border-radius:50%;border-color:#000;font-family:inherit;line-height:5em;cursor:default;user-select:none}div:where(.swal2-icon) .swal2-icon-content{display:flex;align-items:center;font-size:3.75em}div:where(.swal2-icon).swal2-error{border-color:#f27474;color:#f27474}div:where(.swal2-icon).swal2-error .swal2-x-mark{position:relative;flex-grow:1}div:where(.swal2-icon).swal2-error [class^=swal2-x-mark-line]{display:block;position:absolute;top:2.3125em;width:2.9375em;height:.3125em;border-radius:.125em;background-color:#f27474}div:where(.swal2-icon).swal2-error [class^=swal2-x-mark-line][class$=left]{left:1.0625em;transform:rotate(45deg)}div:where(.swal2-icon).swal2-error [class^=swal2-x-mark-line][class$=right]{right:1em;transform:rotate(-45deg)}div:where(.swal2-icon).swal2-error.swal2-icon-show{animation:swal2-animate-error-icon .5s}div:where(.swal2-icon).swal2-error.swal2-icon-show .swal2-x-mark{animation:swal2-animate-error-x-mark .5s}div:where(.swal2-icon).swal2-warning{border-color:#facea8;color:#f8bb86}div:where(.swal2-icon).swal2-warning.swal2-icon-show{animation:swal2-animate-error-icon .5s}div:where(.swal2-icon).swal2-warning.swal2-icon-show .swal2-icon-content{animation:swal2-animate-i-mark .5s}div:where(.swal2-icon).swal2-info{border-color:#9de0f6;color:#3fc3ee}div:where(.swal2-icon).swal2-info.swal2-icon-show{animation:swal2-animate-error-icon .5s}div:where(.swal2-icon).swal2-info.swal2-icon-show .swal2-icon-content{animation:swal2-animate-i-mark .8s}div:where(.swal2-icon).swal2-question{border-color:#c9dae1;color:#87adbd}div:where(.swal2-icon).swal2-question.swal2-icon-show{animation:swal2-animate-error-icon .5s}div:where(.swal2-icon).swal2-question.swal2-icon-show .swal2-icon-content{animation:swal2-animate-question-mark .8s}div:where(.swal2-icon).swal2-success{border-color:#a5dc86;color:#a5dc86}div:where(.swal2-icon).swal2-success [class^=swal2-success-circular-line]{position:absolute;width:3.75em;height:7.5em;transform:rotate(45deg);border-radius:50%}div:where(.swal2-icon).swal2-success [class^=swal2-success-circular-line][class$=left]{top:-0.4375em;left:-2.0635em;transform:rotate(-45deg);transform-origin:3.75em 3.75em;border-radius:7.5em 0 0 7.5em}div:where(.swal2-icon).swal2-success [class^=swal2-success-circular-line][class$=right]{top:-0.6875em;left:1.875em;transform:rotate(-45deg);transform-origin:0 3.75em;border-radius:0 7.5em 7.5em 0}div:where(.swal2-icon).swal2-success .swal2-success-ring{position:absolute;z-index:2;top:-0.25em;left:-0.25em;box-sizing:content-box;width:100%;height:100%;border:.25em solid rgba(165,220,134,.3);border-radius:50%}div:where(.swal2-icon).swal2-success .swal2-success-fix{position:absolute;z-index:1;top:.5em;left:1.625em;width:.4375em;height:5.625em;transform:rotate(-45deg)}div:where(.swal2-icon).swal2-success [class^=swal2-success-line]{display:block;position:absolute;z-index:2;height:.3125em;border-radius:.125em;background-color:#a5dc86}div:where(.swal2-icon).swal2-success [class^=swal2-success-line][class$=tip]{top:2.875em;left:.8125em;width:1.5625em;transform:rotate(45deg)}div:where(.swal2-icon).swal2-success [class^=swal2-success-line][class$=long]{top:2.375em;right:.5em;width:2.9375em;transform:rotate(-45deg)}div:where(.swal2-icon).swal2-success.swal2-icon-show .swal2-success-line-tip{animation:swal2-animate-success-line-tip .75s}div:where(.swal2-icon).swal2-success.swal2-icon-show .swal2-success-line-long{animation:swal2-animate-success-line-long .75s}div:where(.swal2-icon).swal2-success.swal2-icon-show .swal2-success-circular-line-right{animation:swal2-rotate-success-circular-line 4.25s ease-in}[class^=swal2]{-webkit-tap-highlight-color:rgba(0,0,0,0)}.swal2-show{animation:swal2-show .3s}.swal2-hide{animation:swal2-hide .15s forwards}.swal2-noanimation{transition:none}.swal2-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}.swal2-rtl .swal2-close{margin-right:initial;margin-left:0}.swal2-rtl .swal2-timer-progress-bar{right:0;left:auto}@keyframes swal2-toast-show{0%{transform:translateY(-0.625em) rotateZ(2deg)}33%{transform:translateY(0) rotateZ(-2deg)}66%{transform:translateY(0.3125em) rotateZ(2deg)}100%{transform:translateY(0) rotateZ(0deg)}}@keyframes swal2-toast-hide{100%{transform:rotateZ(1deg);opacity:0}}@keyframes swal2-toast-animate-success-line-tip{0%{top:.5625em;left:.0625em;width:0}54%{top:.125em;left:.125em;width:0}70%{top:.625em;left:-0.25em;width:1.625em}84%{top:1.0625em;left:.75em;width:.5em}100%{top:1.125em;left:.1875em;width:.75em}}@keyframes swal2-toast-animate-success-line-long{0%{top:1.625em;right:1.375em;width:0}65%{top:1.25em;right:.9375em;width:0}84%{top:.9375em;right:0;width:1.125em}100%{top:.9375em;right:.1875em;width:1.375em}}@keyframes swal2-show{0%{transform:scale(0.7)}45%{transform:scale(1.05)}80%{transform:scale(0.95)}100%{transform:scale(1)}}@keyframes swal2-hide{0%{transform:scale(1);opacity:1}100%{transform:scale(0.5);opacity:0}}@keyframes swal2-animate-success-line-tip{0%{top:1.1875em;left:.0625em;width:0}54%{top:1.0625em;left:.125em;width:0}70%{top:2.1875em;left:-0.375em;width:3.125em}84%{top:3em;left:1.3125em;width:1.0625em}100%{top:2.8125em;left:.8125em;width:1.5625em}}@keyframes swal2-animate-success-line-long{0%{top:3.375em;right:2.875em;width:0}65%{top:3.375em;right:2.875em;width:0}84%{top:2.1875em;right:0;width:3.4375em}100%{top:2.375em;right:.5em;width:2.9375em}}@keyframes swal2-rotate-success-circular-line{0%{transform:rotate(-45deg)}5%{transform:rotate(-45deg)}12%{transform:rotate(-405deg)}100%{transform:rotate(-405deg)}}@keyframes swal2-animate-error-x-mark{0%{margin-top:1.625em;transform:scale(0.4);opacity:0}50%{margin-top:1.625em;transform:scale(0.4);opacity:0}80%{margin-top:-0.375em;transform:scale(1.15)}100%{margin-top:0;transform:scale(1);opacity:1}}@keyframes swal2-animate-error-icon{0%{transform:rotateX(100deg);opacity:0}100%{transform:rotateX(0deg);opacity:1}}@keyframes swal2-rotate-loading{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes swal2-animate-question-mark{0%{transform:rotateY(-360deg)}100%{transform:rotateY(0)}}@keyframes swal2-animate-i-mark{0%{transform:rotateZ(45deg);opacity:0}25%{transform:rotateZ(-25deg);opacity:.4}50%{transform:rotateZ(15deg);opacity:.8}75%{transform:rotateZ(-5deg);opacity:1}100%{transform:rotateX(0);opacity:1}}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow:hidden}body.swal2-height-auto{height:auto !important}body.swal2-no-backdrop .swal2-container{background-color:rgba(0,0,0,0) !important;pointer-events:none}body.swal2-no-backdrop .swal2-container .swal2-popup{pointer-events:all}body.swal2-no-backdrop .swal2-container .swal2-modal{box-shadow:0 0 10px rgba(0,0,0,.4)}@media print{body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow-y:scroll !important}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown)>[aria-hidden=true]{display:none}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown) .swal2-container{position:static !important}}body.swal2-toast-shown .swal2-container{box-sizing:border-box;width:360px;max-width:100%;background-color:rgba(0,0,0,0);pointer-events:none}body.swal2-toast-shown .swal2-container.swal2-top{inset:0 auto auto 50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-top-end,body.swal2-toast-shown .swal2-container.swal2-top-right{inset:0 0 auto auto}body.swal2-toast-shown .swal2-container.swal2-top-start,body.swal2-toast-shown .swal2-container.swal2-top-left{inset:0 auto auto 0}body.swal2-toast-shown .swal2-container.swal2-center-start,body.swal2-toast-shown .swal2-container.swal2-center-left{inset:50% auto auto 0;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-center{inset:50% auto auto 50%;transform:translate(-50%, -50%)}body.swal2-toast-shown .swal2-container.swal2-center-end,body.swal2-toast-shown .swal2-container.swal2-center-right{inset:50% 0 auto auto;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-start,body.swal2-toast-shown .swal2-container.swal2-bottom-left{inset:auto auto 0 0}body.swal2-toast-shown .swal2-container.swal2-bottom{inset:auto auto 0 50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-end,body.swal2-toast-shown .swal2-container.swal2-bottom-right{inset:auto 0 0 auto}\");"],"x_google_ignoreList":[4]}