{"version":3,"file":"343.ae25facf12738708.js","mappings":"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","names":["EscrutinioService","constructor","http","Urls","this","url","apiUrl","getHttpHeaders","HttpHeaders","Accept","getEscuelasDeLaEleccion","id","endPoint","eleccion_id","params","HttpParams","set","httpOptions","headers","get","getListasElectoralesPorEleccion","getResultadoMesaPorCargo","id_mesa","id_cargo","toString","guardarResultadoMesa","resultado","mesa_id","cargo_id","post","t","i0","i1","API_URLS","core","Yz7","factory","ɵfac","providedIn","mesa_r4","_r6","$implicit","ctx_r5","redirectToCarga","numeroMesa","SidebarEscrutinioComponent_mat_expansion_panel_9_mat_list_item_5_Template","escuela_r2","nombre","MesaElectorals","SidebarEscrutinioComponent","breakpointObserver","escrutinioService","route","router","isHandsetSubject","Subject","data","isHandset$","asObservable","id_eleccion","snapshot","observe","Breakpoints","Handset","subscribe","result","next","matches","ngOnInit","loadMenu","idMesa","navigate","relativeTo","i2","i3","Xpm","selectors","decls","vars","consts","template","rf","ctx","SidebarEscrutinioComponent_mat_expansion_panel_9_Template","_r7","_r0","toggle","LayoutComponent","setupService","e","eleccionOb$","ele","cargo_r3","$event","_r5","ctx_r4","onSelectChange","CargaDatosComponent_div_0_mat_option_7_Template","ctx_r0","mesa","Escuela","cargos","_r9","ctx_r8","actualizarValores","item_r7","cantidadVotos","ListaElectoral","Candidato","apellido","_r12","ctx_r11","resultadoMesa","votosAfirmativos","ctx_r13","ctx_r14","votosBlancos","ctx_r15","ctx_r16","votosNulos","ctx_r17","ctx_r18","votosRecurridos","ctx_r19","ctx_r20","votosImpuganados","ctx_r21","totalVotos","CargaDatosComponent_div_1_div_26_Template","ctx_r22","guardar","ctx_r1","DetalleResultado","routes","path","component","children","CargaDatosComponent","zone","crudService","formBuilder","functionCallingService","listas","listasFiltradas","idCargoSelected","funciones","formulario","group","ngOnDestroy","navigateSusbcriptions","unsubscribe","parent","undefined","loadMesa","loadListasElectorales","subscription","functionReturned$","run","length","includes","responseObject","JSON","parse","arguments","name","trim","cargarResultadoPorVoz","console","log","loadCargos","map","item","Cargo","filter","value","index","self","findIndex","c","res","MesasElectoral","getById","error","err","Swal","icon","title","text","filtrarListasPorCargo","cargoId","lista","event","ResultadoMesa","Object","assign","total","agregarDetallesFaltantes","armarFunctionsCallings","addPromptText","armarPromt","description","parameters","type","properties","votes","items","qty_vote","addFunctions","prompt","i","l","numero_lista","forEach","find","detalle","lista_id","push","rta","reduce","accum","valor","validarResultado","argumentos","dr","x","i4","i5","CargaDatosComponent_div_0_Template","CargaDatosComponent_div_1_Template","EscrutinioRoutingModule","oAB","cJS","RouterModule","forChild","EscrutinioModule","CommonModule","MaterialModule","FormsModule","ReactiveFormsModule"],"sourceRoot":"webpack:///","sources":["./src/app/Escrutinio/services/escrutinio.service.ts","./src/app/Escrutinio/layout/sidebar-escrutinio/sidebar-escrutinio.component.html","./src/app/Escrutinio/layout/sidebar-escrutinio/sidebar-escrutinio.component.ts","./src/app/Escrutinio/layout/layout.component.ts","./src/app/Escrutinio/layout/layout.component.html","./src/app/Escrutinio/carga-datos/carga-datos.component.html","./src/app/Escrutinio/escrutinio-routing.module.ts","./src/app/Escrutinio/carga-datos/carga-datos.component.ts","./src/app/Escrutinio/escrutinio.module.ts"],"sourcesContent":["import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { API_URLS, AppSetings } from 'src/app/app-setting/app-config.token';\r\nimport { Escuela } from 'src/app/models/Escuela';\r\nimport { ListaElectoral } from 'src/app/models/ListaElectoral';\r\nimport { ResultadoMesa } from 'src/app/models/ResultadoMesa';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EscrutinioService {\r\n  private url: string;\r\n  constructor(private http: HttpClient, @Inject(API_URLS) private Urls: AppSetings) {\r\n    this.url = Urls.apiUrl;\r\n\r\n  }\r\n\r\n  getHttpHeaders(): HttpHeaders {\r\n    return new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Accept': 'application/json'\r\n    });\r\n  }\r\n\r\n  public getEscuelasDeLaEleccion(id: number) {\r\n    const endPoint = this.url + \"escuelas/getEscuelaByEleccion/\";\r\n    const eleccion_id = id;\r\n\r\n    const params = new HttpParams()\r\n      .set('idEleccion', eleccion_id);\r\n\r\n    const httpOptions = {\r\n      headers: this.getHttpHeaders(),\r\n      params: params,\r\n    };\r\n\r\n    return this.http.get<Escuela[]>(endPoint, httpOptions);\r\n  }\r\n\r\n  public getListasElectoralesPorEleccion(eleccion_id: number) {\r\n    const endPoint = this.url + \"listas/obtenerPorEleccion/\";\r\n\r\n    const params = new HttpParams()\r\n      .set('eleccion_id', eleccion_id);\r\n\r\n    const httpOptions = {\r\n      headers: this.getHttpHeaders(),\r\n      params: params,\r\n    };\r\n\r\n    return this.http.get<ListaElectoral[]>(endPoint, httpOptions);\r\n\r\n  }\r\n\r\n  public getResultadoMesaPorCargo(id_mesa: number, id_cargo: number) {\r\n    const endPoint = this.url + \"escrutinio/resultadoMesa\";\r\n    let params = new HttpParams();\r\n    params = params.set('id_mesa', id_mesa.toString());\r\n    params = params.set('id_cargo', id_cargo.toString());\r\n\r\n    const httpOptions = {\r\n      headers: this.getHttpHeaders(),\r\n      params: params,\r\n    };\r\n\r\n    return this.http.get<ResultadoMesa>(endPoint, httpOptions);\r\n  }\r\n\r\n  public guardarResultadoMesa(resultado: ResultadoMesa) {\r\n    const endPoint = this.url + \"escrutinio/gurdarResultado\"\r\n\r\n    let params = new HttpParams();\r\n    params = params.set('id_mesa', resultado.mesa_id);\r\n    params = params.set('id_cargo', resultado.cargo_id);\r\n\r\n    const httpOptions = {\r\n      headers: this.getHttpHeaders(),\r\n      params: params,\r\n    };\r\n\r\n    return this.http.post(endPoint, resultado, httpOptions);\r\n  }\r\n\r\n\r\n}\r\n","<mat-sidenav-container class=\"sidenav-container sidebar-container\">\r\n  <mat-sidenav\r\n    #drawer\r\n    class=\"sidenav\"\r\n    fixedInViewport\r\n    [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\r\n    [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\r\n    [opened]=\"(isHandset$ | async) === false\"\r\n\r\n  >\r\n    <mat-toolbar>Menu</mat-toolbar>\r\n    <mat-accordion multi=\"true\">\r\n      <mat-expansion-panel\r\n        *ngFor=\"let escuela of data\"\r\n        class=\"mat-elevation-z0\"\r\n      >\r\n        <mat-expansion-panel-header>\r\n          <mat-panel-title>{{ escuela.nombre }}</mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n        <mat-nav-list>\r\n          <mat-list-item *ngFor=\"let mesa of escuela.MesaElectorals\"  matLine (click)=\"redirectToCarga(mesa.id)\">\r\n            <a>{{ mesa.numeroMesa }}</a>\r\n          </mat-list-item>\r\n        </mat-nav-list>\r\n      </mat-expansion-panel>\r\n    </mat-accordion>\r\n  </mat-sidenav>\r\n\r\n  <mat-sidenav-content>\r\n    <mat-toolbar color=\"primary\">\r\n      <button\r\n        type=\"button\"\r\n        aria-label=\"Toggle sidenav\"\r\n        mat-icon-button\r\n        (click)=\"drawer.toggle()\"\r\n      >\r\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\r\n      </button>\r\n      <span class=\"example-spacer\"></span>\r\n      <span>Escrutinio Elecciones 2023</span>\r\n    </mat-toolbar>\r\n    <!-- Contenido adicional aquí -->\r\n    <router-outlet></router-outlet>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Observable, Subject, map, shareReplay } from 'rxjs';\r\nimport { EscrutinioService } from '../../services/escrutinio.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Escuela } from 'src/app/models/Escuela';\r\n\r\n@Component({\r\n  selector: 'app-sidebar-escrutinio',\r\n  templateUrl: './sidebar-escrutinio.component.html',\r\n  styleUrls: ['./sidebar-escrutinio.component.css']\r\n})\r\nexport class SidebarEscrutinioComponent implements OnInit {\r\n\r\n  isHandsetSubject: Subject<boolean> = new Subject<boolean>();\r\n\r\n\r\n  data: Escuela[] = [];\r\n  id_eleccion: number;\r\n  isHandset$: Observable<boolean> = this.isHandsetSubject.asObservable();\r\n  constructor(private breakpointObserver: BreakpointObserver, private escrutinioService: EscrutinioService, private route: ActivatedRoute,  private router: Router) {\r\n\r\n    this.id_eleccion = this.route.snapshot.params['id_eleccion'];\r\n    this.breakpointObserver.observe(Breakpoints.Handset).subscribe((result) => {\r\n      this.isHandsetSubject.next(result.matches);\r\n    });\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadMenu();\r\n  }\r\n\r\n  loadMenu() {\r\n    this.escrutinioService.getEscuelasDeLaEleccion(this.id_eleccion).subscribe(\r\n      {\r\n        next: (data: Escuela[]) => {\r\n          this.data = data;\r\n          //this.isHandsetSubject.next(true); // Establecer el valor en true\r\n          this.isHandsetSubject.next(false); // Establecer el valor en false\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  redirectToCarga(idMesa: number) {\r\n    const idEleccion = this.id_eleccion;\r\n    this.router.navigate(['carga', idMesa], { relativeTo: this.route });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SetupService } from 'src/app/Shared/services/setup.service';\r\nimport { Eleccion } from 'src/app/models/Elecciones';\r\n\r\n@Component({\r\n  selector: 'app-layout',\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.component.css']\r\n})\r\nexport class LayoutComponent implements OnInit {\r\n  e: Eleccion | null= null;\r\n  constructor(private setupService : SetupService){\r\n    this.setupService.eleccionOb$.subscribe(\r\n      ele => this.e = ele\r\n      );\r\n  }\r\n  ngOnInit(): void {\r\n\r\n  }\r\n}\r\n","<div class=\"dashboard\">\r\n  <app-sidebar-escrutinio></app-sidebar-escrutinio>\r\n\r\n</div>\r\n","<div class=\"header form-grid\" *ngIf=\"mesa\">\r\n  <h2>Escuela: {{ mesa.Escuela.nombre }} Mesa Numero: {{ mesa.numeroMesa }}</h2>\r\n  <mat-form-field >\r\n    <mat-label>Cargos</mat-label>\r\n    <mat-select (selectionChange)=\"onSelectChange($event)\">\r\n      <mat-option *ngFor=\"let cargo of cargos\" [value]=\"cargo\">{{ cargo.nombre }}</mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n</div>\r\n\r\n<div *ngIf=\"resultadoMesa\">\r\n  <div class=\"form-grid\">\r\n    <mat-form-field class=\"form-field\">\r\n      <mat-label class=\"label-text\">Votos Afirmativos</mat-label>\r\n      <input matInput type=\"number\" [(ngModel)]=\"resultadoMesa.votosAfirmativos\" />\r\n    </mat-form-field>\r\n    <mat-form-field class=\"form-field\">\r\n      <mat-label class=\"label-text\">Votos Blancos</mat-label>\r\n      <input (change)=\"actualizarValores()\" matInput type=\"number\" [(ngModel)]=\"resultadoMesa.votosBlancos\" />\r\n    </mat-form-field>\r\n    <mat-form-field class=\"form-field\">\r\n      <mat-label class=\"label-text\">Votos Nulos</mat-label>\r\n      <input (change)=\"actualizarValores()\" matInput type=\"number\" [(ngModel)]=\"resultadoMesa.votosNulos\" />\r\n    </mat-form-field>\r\n    <mat-form-field class=\"form-field\">\r\n      <mat-label class=\"label-text\">Votos Recurridos</mat-label>\r\n      <input (change)=\"actualizarValores()\" matInput type=\"number\" [(ngModel)]=\"resultadoMesa.votosRecurridos\" />\r\n    </mat-form-field>\r\n    <mat-form-field class=\"form-field\">\r\n      <mat-label class=\"label-text\">Votos Impugnados</mat-label>\r\n      <input (change)=\"actualizarValores()\" matInput type=\"number\" [(ngModel)]=\"resultadoMesa.votosImpuganados\" />\r\n    </mat-form-field>\r\n    <mat-form-field class=\"form-field\">\r\n      <mat-label class=\"label-text\">Total</mat-label>\r\n      <input matInput type=\"number\" [(ngModel)]=\"totalVotos\" />\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <div *ngFor=\"let item of resultadoMesa.DetalleResultado\" class=\"form-field\">\r\n    <mat-form-field class=\"form-field\">\r\n      <mat-label class=\"label-text\">{{ item.ListaElectoral.nombre }} - {{ item.ListaElectoral.Candidato.nombre }} {{ item.ListaElectoral.Candidato.apellido }}</mat-label>\r\n      <input (change)=\"actualizarValores()\" matInput type=\"number\" [(ngModel)]=\"item.cantidadVotos\" />\r\n    </mat-form-field>\r\n  </div>\r\n  <button (click)=\"guardar()\" mat-raised-button color=\"primary\">Guardar</button>\r\n</div>\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LayoutComponent } from './layout/layout.component';\r\nimport { CargaDatosComponent } from './carga-datos/carga-datos.component';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LayoutComponent,\r\n    children: [\r\n      {path: 'carga/:id_mesa', component: CargaDatosComponent}, //\r\n    ],\r\n  }\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class EscrutinioRoutingModule { }\r\n","import { Component, NgZone, OnDestroy, OnInit } from '@angular/core';\r\nimport { EscrutinioService } from '../services/escrutinio.service';\r\nimport { Cargo } from 'src/app/models/Cargo';\r\nimport { ListaElectoral } from 'src/app/models/ListaElectoral';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Eleccion } from 'src/app/models/Elecciones';\r\nimport { MesasElectoral } from 'src/app/models/MesaElectoral';\r\nimport { CrudService } from 'src/app/Shared/services/crud.service';\r\nimport Swal from 'sweetalert2';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSelectChange } from '@angular/material/select';\r\nimport { DetalleResultado, ResultadoMesa } from 'src/app/models/ResultadoMesa';\r\nimport { Subscription } from 'rxjs';\r\nimport { FunctionCallingService } from 'src/app/Shared/services/functionCalling.service';\r\nimport { FunctionCall } from 'src/app/models/FunctionInterface';\r\n\r\n@Component({\r\n  selector: 'app-carga-datos',\r\n  templateUrl: './carga-datos.component.html',\r\n  styleUrls: ['./carga-datos.component.css']\r\n})\r\nexport class CargaDatosComponent implements OnInit, OnDestroy {\r\n  cargos: Cargo[] = [];\r\n  listas: ListaElectoral[] = [];\r\n  listasFiltradas: ListaElectoral[] = [];\r\n  mesa!: MesasElectoral;\r\n  eleccion!: Eleccion;\r\n  eleccion_id!: number;\r\n  mesa_id!: number;\r\n  formulario: FormGroup;\r\n  idCargoSelected: number = 0;\r\n  resultadoMesa: ResultadoMesa | undefined;\r\n  navigateSusbcriptions!: Subscription;\r\n  totalVotos: number = 0;\r\n  private subscription!: Subscription;\r\n\r\n  private funciones: any[] = [];\r\n\r\n  constructor(private escrutinioService: EscrutinioService, private route: ActivatedRoute,  private zone: NgZone,\r\n    private crudService: CrudService, private formBuilder: FormBuilder, private functionCallingService: FunctionCallingService) {\r\n\r\n    this.formulario = this.formBuilder.group({});\r\n    const prompt = `You have the following candidates/political parties name:\r\n    `;\r\n\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.navigateSusbcriptions.unsubscribe();\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.parent?.params.subscribe(params => {\r\n      this.eleccion_id = params['id_eleccion'];\r\n\r\n      if (this.navigateSusbcriptions) {\r\n        this.navigateSusbcriptions.unsubscribe();\r\n      }\r\n      this.navigateSusbcriptions = this.route.params.subscribe(params => {\r\n        this.mesa_id = params['id_mesa'];\r\n        this.resultadoMesa = undefined;\r\n        this.loadMesa();\r\n        this.loadListasElectorales();\r\n      });\r\n\r\n    });\r\n\r\n    this.subscription = this.functionCallingService.functionReturned$.subscribe((data: string) => {\r\n      this.zone.run(() => {\r\n      if (data.length > 0 && data.includes(\"name\") ) {\r\n\r\n        const responseObject = JSON.parse(data);\r\n        responseObject.arguments =  JSON.parse(responseObject.arguments);\r\n\r\n          switch (responseObject.name.trim()) {\r\n            case 'set_votes':\r\n              this.cargarResultadoPorVoz(responseObject.arguments );\r\n              break;\r\n\r\n            default:\r\n              console.log('La función no está definida o no se proporcionó un nombre válido.');\r\n          }\r\n\r\n\r\n        // Verificar el nombre de la función y ejecutarla con los argumentos correspondientes\r\n\r\n        console.log(data);\r\n\r\n      }\r\n    });\r\n\r\n    });\r\n  }\r\n\r\n  loadCargos() {\r\n    this.cargos = this.listas.map(item => item.Cargo)\r\n      .filter((value, index, self) => self.findIndex(c => c.id === value.id) === index);\r\n\r\n    //this.filtrarListasPorCargo(this.cargos[0].id); // Opcional: Selecciona el primer cargo por defecto\r\n  }\r\n\r\n  loadListasElectorales() {\r\n    this.escrutinioService.getListasElectoralesPorEleccion(this.eleccion_id)\r\n      .subscribe({\r\n        next: (res: ListaElectoral[]) => {\r\n          this.listas = res;\r\n          this.loadCargos();\r\n\r\n        }\r\n      });\r\n  }\r\n\r\n  loadMesa() {\r\n    const mesa = new MesasElectoral();\r\n    mesa.id = this.mesa_id;\r\n    this.crudService.getById(mesa).subscribe(\r\n      {\r\n        next: (mesa: MesasElectoral) => {\r\n          this.mesa = mesa;\r\n        },\r\n        error: (err) => {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: err,\r\n          });\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  filtrarListasPorCargo(cargoId: number) {\r\n    this.listasFiltradas = this.listas.filter(lista => lista.cargo_id === cargoId);\r\n\r\n  }\r\n\r\n  onSelectChange(event: MatSelectChange) {\r\n    this.idCargoSelected = event.value.id;\r\n    this.filtrarListasPorCargo(this.idCargoSelected);\r\n    // al cambiar el cargo, buscar si hay resultados y mostrarlos\r\n    //si no hay resultados cargar el formulario vacio\r\n\r\n    this.escrutinioService.getResultadoMesaPorCargo(this.mesa_id, this.idCargoSelected)\r\n      .subscribe((res: ResultadoMesa) => {\r\n        let resultado = new ResultadoMesa();\r\n        if (res) {\r\n          //si existe el resultado de mesa para el cargo\r\n          //agrego el detalle de los faltantes (rara vez podria venir con faltantes)\r\n          resultado = Object.assign(new ResultadoMesa, res);\r\n\r\n        } else {\r\n          resultado.mesa_id = this.mesa_id;\r\n          resultado.cargo_id = this.idCargoSelected;\r\n          resultado.total = 0;\r\n          resultado.votosAfirmativos = 0;\r\n          resultado.votosBlancos = 0;\r\n          resultado.votosImpuganados = 0;\r\n          resultado.votosNulos = 0;\r\n          resultado.votosRecurridos = 0;\r\n          resultado.DetalleResultado = [];\r\n        }\r\n        this.agregarDetallesFaltantes(resultado);\r\n        this.resultadoMesa = resultado;\r\n        console.log(resultado);\r\n        this.actualizarValores();\r\n      });\r\n    this.armarFunctionsCallings();\r\n\r\n    this.functionCallingService.addPromptText(this.armarPromt());\r\n\r\n\r\n    console.log('Valor seleccionado:', this.idCargoSelected);\r\n  }\r\n\r\n  armarFunctionsCallings(){\r\n    this.funciones = [\r\n      {\r\n        name: 'set_votes',\r\n        description: \"\",\r\n        parameters: {\r\n            type: 'object',\r\n            properties: {\r\n                votes: {\r\n                    type: 'array',\r\n                    items: {\r\n                        type: 'object',\r\n                        properties: {\r\n                            name: {type: 'string', description: 'Name of candidate, e.g. Juan Manuel'},\r\n                            id: {type: 'string', description: 'Id of candidate, e.g. 1'},\r\n                            qty_vote: {type: 'integer', description:'Number of votes, e.g. 100'}\r\n                        },\r\n                    }\r\n                },\r\n            },\r\n        }\r\n      }\r\n    ];\r\n    this.functionCallingService.addFunctions( this.funciones);\r\n  }\r\n  armarPromt() : string {\r\n\r\n    let prompt = `You have the following candidates name / candidate ID number /political parties name/political parties number:`;\r\n    for (let i = 0; i < this.listasFiltradas.length; i++) {\r\n      const l = this.listasFiltradas[i];\r\n      prompt = prompt + \"\\n\" + `${i}. ${l.Candidato.nombre} ${l.Candidato.apellido} / ${l.Candidato.id} / ${l.nombre} /  ${l.numero_lista}`;\r\n\r\n    }\r\n    prompt = prompt + '\\n' + 'The goal is set the votes for candidates in the list above.';\r\n    return prompt;\r\n  }\r\n\r\n  agregarDetallesFaltantes(resultadoMesa: ResultadoMesa) {\r\n    this.listasFiltradas.forEach((lista: ListaElectoral) => {\r\n      const detalleExistente = resultadoMesa.DetalleResultado.find(detalle => detalle.lista_id === lista.id);\r\n\r\n      if (!detalleExistente) {\r\n        const nuevoDetalle: DetalleResultado = {\r\n          mesa_id: this.mesa_id, // Asigna el valor adecuado para mesa_id\r\n          cargo_id: this.idCargoSelected, // Asigna el valor adecuado para cargo_id\r\n          lista_id: lista.id,\r\n          ListaElectoral: lista,\r\n          cantidadVotos: 0 // Asigna el valor inicial adecuado para cantidadVotos\r\n        };\r\n\r\n        resultadoMesa.DetalleResultado.push(nuevoDetalle);\r\n      }\r\n    });\r\n  }\r\n\r\n  actualizarValores() {\r\n    const rta = this.resultadoMesa?.DetalleResultado.map(i => i.cantidadVotos).reduce(\r\n      (accum, valor) => {\r\n        return accum += valor;\r\n      }\r\n    )\r\n    if (this.resultadoMesa) {\r\n      this.resultadoMesa.votosAfirmativos = rta ? rta : 0;\r\n      const totalVotos = this.resultadoMesa.votosAfirmativos + this.resultadoMesa.votosBlancos\r\n        + this.resultadoMesa.votosImpuganados + this.resultadoMesa.votosNulos + this.resultadoMesa.votosRecurridos;\r\n      this.totalVotos = totalVotos;\r\n    };\r\n\r\n  }\r\n  guardar() {\r\n    console.log(this.resultadoMesa);\r\n    if (this.resultadoMesa)\r\n      this.escrutinioService.guardarResultadoMesa(this.resultadoMesa).subscribe(\r\n        {\r\n          next: (res) => {\r\n            console.log(res);\r\n          },\r\n          error: (err) => {\r\n            console.log(err);\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  validarResultado(): boolean {\r\n\r\n\r\n    return false;\r\n  }\r\n\r\n  cargarResultadoPorVoz(argumentos : any){\r\n    argumentos.votes.forEach((c: any)=> {\r\n      const dr = this.resultadoMesa?.DetalleResultado.find(x=> x.ListaElectoral.Candidato.id == c.id);\r\n      if(dr){\r\n        //si encuentro el candidato, modifico el detalle,\r\n        dr.cantidadVotos = c.qty_vote;\r\n      }\r\n\r\n    });\r\n    this.actualizarValores();\r\n  }\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LayoutComponent } from './layout/layout.component';\r\nimport { SidebarEscrutinioComponent } from './layout/sidebar-escrutinio/sidebar-escrutinio.component';\r\nimport { EscrutinioRoutingModule } from './escrutinio-routing.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MaterialModule } from '../Shared/modules/material.module';\r\nimport { CargaDatosComponent } from './carga-datos/carga-datos.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LayoutComponent,\r\n    SidebarEscrutinioComponent,\r\n    CargaDatosComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    EscrutinioRoutingModule,\r\n    MaterialModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  exports: [LayoutComponent,SidebarEscrutinioComponent]\r\n})\r\nexport class EscrutinioModule { }\r\n"],"x_google_ignoreList":[]}