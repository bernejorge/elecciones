{"version":3,"file":"232.5607a9308e11fe6d.js","mappings":"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","names":["i0","tmp_0_0","ctx_r1","setupService","eleccionOb$","nombre","SidebarSetupComponent","constructor","breakpointObserver","functionCallingService","this","isHandset$","observe","Breakpoints","Handset","pipe","map","result","matches","shareReplay","funciones","name","description","parameters","type","properties","toogle","addFunctions","t","i1","i2","i3","core","Xpm","selectors","decls","vars","consts","template","rf","ctx","_r3","_r0","toggle","SidebarSetupComponent_div_38_Template","LayoutComponent","e","subscribe","ele","ngOnInit","FiscalMesa","BaseEntity","super","endPoint","getFilterText","Companero","MesaElectoral","numeroMesa","toString","companero_r10","_r12","$implicit","ctx_r11","selectCompanero","companero_r13","_r15","ctx_r14","apellido","companero_r16","_r18","ctx_r17","dni","companero_r19","_r21","ctx_r20","tel","row_r22","_r24","ctx_r23","selectAndClose","ctx_r9","isSelected","SelectCompaneroModalComponent","dialogRef","companeroService","companeros","companerosFiltrados","displayedColumns","_filterText","selectedCompanero","undefined","loadData","c","getAllEntity","res","x","Object","assign","applyFilter","filterValue","Filtrar","companero","close","filterText","value","console","log","cancel","$event","SelectCompaneroModalComponent_th_7_Template","SelectCompaneroModalComponent_td_8_Template","SelectCompaneroModalComponent_th_10_Template","SelectCompaneroModalComponent_td_11_Template","SelectCompaneroModalComponent_th_13_Template","SelectCompaneroModalComponent_td_14_Template","SelectCompaneroModalComponent_th_16_Template","SelectCompaneroModalComponent_td_17_Template","SelectCompaneroModalComponent_tr_18_Template","SelectCompaneroModalComponent_tr_19_Template","FiscalesService","Urls","http","eleccion","url","apiUrl","getHttpHeaders","HttpHeaders","Accept","getAllFiscalesMesas","httpOptions","headers","get","setFiscalMesa","idCompanero","idMesa","body","mesa_id","companero_id","post","deleteFiscalMesa","delete","getAllFiscalGenerales","eleccion_id","id","params","HttpParams","set","setFiscalGeneral","fg","entityWithoutId","deleteFiscalGeneral","escuela_id","API_URLS","Yz7","factory","ɵfac","providedIn","escuela_r4","mesa_r5","FiscalMesaModalComponent","dialog","formBuilder","fiscalService","abmService","data","isUpdate","escuelas","mesasDeEscuela","companeroSeleccionado","fiscal","form","group","Validators","required","setValue","Escuela","escuelaElegida","escuela","_escuelaElegida","loadMesas","getMesasByEscuela","openSelectCompaneroModal","event","stopPropagation","preventDefault","open","afterClosed","setFiscal","Swal","icon","title","text","closeModal","i4","i5","MAT_DIALOG_DATA","FiscalMesaModalComponent_mat_option_10_Template","FiscalMesaModalComponent_mat_option_16_Template","FiscalMesaModalComponent_mat_error_17_Template","FiscalMesaModalComponent_mat_error_23_Template","controls","hasError","invalid","element_r14","element_r15","element_r16","Eleccion","element_r17","element_r18","element_r19","borrarFiscalMesa","FiscalesMesasComponent","fiscalesMesas","dataSource","MatTableDataSource","paginator","abrirModalAgregar","mesa","width","panelClass","f","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","isConfirmed","err","viewQuery","MatPaginator","FiscalesMesasComponent_th_5_Template","FiscalesMesasComponent_td_6_Template","FiscalesMesasComponent_th_8_Template","FiscalesMesasComponent_td_9_Template","FiscalesMesasComponent_th_11_Template","FiscalesMesasComponent_td_12_Template","FiscalesMesasComponent_th_14_Template","FiscalesMesasComponent_td_15_Template","FiscalesMesasComponent_th_17_Template","FiscalesMesasComponent_td_18_Template","FiscalesMesasComponent_th_20_Template","FiscalesMesasComponent_td_21_Template","FiscalesMesasComponent_tr_22_Template","FiscalesMesasComponent_tr_23_Template","_c0","FiscalGeneral","Error","escuela_r2","FiscalGeneralModalComponent","errors","message","FiscalGeneralModalComponent_mat_option_10_Template","FiscalGeneralModalComponent_mat_error_16_Template","element_r12","element_r13","borrarFiscalGeneral","FiscalesGeneralesComponent","fiscalGeneral","FiscalesGeneralesComponent_th_6_Template","FiscalesGeneralesComponent_td_7_Template","FiscalesGeneralesComponent_th_9_Template","FiscalesGeneralesComponent_td_10_Template","FiscalesGeneralesComponent_th_12_Template","FiscalesGeneralesComponent_td_13_Template","FiscalesGeneralesComponent_th_15_Template","FiscalesGeneralesComponent_td_16_Template","FiscalesGeneralesComponent_th_18_Template","FiscalesGeneralesComponent_td_19_Template","FiscalesGeneralesComponent_tr_20_Template","FiscalesGeneralesComponent_tr_21_Template","ListaElectoral","numero_lista","candidato_r6","_r8","ctx_r7","selectCandidato","candidato_r9","_r11","ctx_r10","row_r12","_r14","ctx_r13","ctx_r5","SelectCandidatoComponent","candidatos","candidatosFiltrados","selectedCandidato","Candidato","candidato","SelectCandidatoComponent_th_7_Template","SelectCandidatoComponent_td_8_Template","SelectCandidatoComponent_th_10_Template","SelectCandidatoComponent_td_11_Template","SelectCandidatoComponent_tr_12_Template","SelectCandidatoComponent_tr_13_Template","ListasService","getAllByEleccion","setListaElectoral","listaElectoral","partido_r5","cargo_r6","ModalListasComponent","listaService","partidos","cargos","_candidatoSeleccionado","_cargoSeleccionado","partidoFiltrado","FormControl","partidosFiltrados","_listaElegida","lista","partido_id","candidato_id","cargo_id","valueChanges","startWith","filterPartidos","p","Partido","Cargo","openSelectCandidatoModal","partidoElegido","_partidoElegido","cargoElegido","setLista","next","error","displayPartido","partido","filter","toLowerCase","includes","ModalListasComponent_mat_option_10_Template","ModalListasComponent_mat_error_15_Template","ModalListasComponent_mat_error_19_Template","ModalListasComponent_mat_option_26_Template","ModalListasComponent_mat_error_32_Template","borrarListaElectoral","routes","path","component","children","MesasComponent","ListasElectoralesComponent","zone","listasElectorales","abrirModal","run","l","ListasElectoralesComponent_th_6_Template","ListasElectoralesComponent_td_7_Template","ListasElectoralesComponent_th_9_Template","ListasElectoralesComponent_td_10_Template","ListasElectoralesComponent_th_12_Template","ListasElectoralesComponent_td_13_Template","ListasElectoralesComponent_th_15_Template","ListasElectoralesComponent_td_16_Template","ListasElectoralesComponent_th_18_Template","ListasElectoralesComponent_td_19_Template","ListasElectoralesComponent_th_21_Template","ListasElectoralesComponent_td_22_Template","ListasElectoralesComponent_tr_23_Template","ListasElectoralesComponent_tr_24_Template","SetupEleccionRoutingModule","oAB","cJS","RouterModule","forChild","SetupEleccionModule","CommonModule","MaterialModule","FormsModule","ReactiveFormsModule"],"sourceRoot":"webpack:///","sources":["./src/app/setup-eleccion/sidebar-setup/sidebar-setup.component.html","./src/app/setup-eleccion/sidebar-setup/sidebar-setup.component.ts","./src/app/setup-eleccion/layout/layout.component.ts","./src/app/setup-eleccion/layout/layout.component.html","./src/app/models/FiscalMesa.ts","./src/app/Shared/components/select-companero-modal/select-companero-modal.component.html","./src/app/Shared/components/select-companero-modal/select-companero-modal.component.ts","./src/app/Shared/services/fiscales-mesas.service.ts","./src/app/setup-eleccion/fiscales-mesas/fiscal-mesa-modal/fiscal-mesa-modal.component.html","./src/app/setup-eleccion/fiscales-mesas/fiscal-mesa-modal/fiscal-mesa-modal.component.ts","./src/app/setup-eleccion/fiscales-mesas/fiscales-mesas.component.html","./src/app/setup-eleccion/fiscales-mesas/fiscales-mesas.component.ts","./src/app/models/FiscalGeneral.ts","./src/app/setup-eleccion/fiscales-generales/fiscal-general-modal/fiscal-general-modal.component.html","./src/app/setup-eleccion/fiscales-generales/fiscal-general-modal/fiscal-general-modal.component.ts","./src/app/setup-eleccion/fiscales-generales/fiscales-generales.component.html","./src/app/setup-eleccion/fiscales-generales/fiscales-generales.component.ts","./src/app/models/ListaElectoral.ts","./src/app/Shared/components/select-candidato/select-candidato.component.html","./src/app/Shared/components/select-candidato/select-candidato.component.ts","./src/app/setup-eleccion/service/listas.service.ts","./src/app/setup-eleccion/listas-electorales/modal-listas/modal-listas.component.html","./src/app/setup-eleccion/listas-electorales/modal-listas/modal-listas.component.ts","./src/app/setup-eleccion/listas-electorales/listas-electorales.component.html","./src/app/setup-eleccion/setup-eleccion-routing.module.ts","./src/app/setup-eleccion/listas-electorales/listas-electorales.component.ts","./src/app/setup-eleccion/setup-eleccion.module.ts"],"sourcesContent":["<mat-sidenav-container class=\"sidenav-container\">\r\n  <mat-sidenav\r\n    #drawer\r\n    class=\"sidenav\"\r\n    fixedInViewport\r\n    [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\r\n    [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\r\n    [opened]=\"(isHandset$ | async) === false\"\r\n  >\r\n    <mat-toolbar>Setup Elecciones</mat-toolbar>\r\n    <mat-accordion>\r\n      <mat-expansion-panel class=\"mat-elevation-z0\">\r\n        <mat-expansion-panel-header>\r\n          <mat-panel-title>Seccion de Configuracion</mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n\r\n        <mat-nav-list>\r\n          <a mat-list-item routerLink=\"/setup-elecccion/mesa-electoral\"\r\n            >Configurar Mesas Electorales</a\r\n          >\r\n          <a mat-list-item routerLink=\"/setup-elecccion/fiscales-mesas\"\r\n            >Configurar Fiscales de Mesas</a\r\n          >\r\n          <a mat-list-item routerLink=\"/setup-elecccion/fiscales-generales\"\r\n            >Configurar Fiscales Generales</a\r\n          >\r\n          <a mat-list-item routerLink=\"/setup-elecccion/listas\"\r\n            >Configurar Listas Electorales</a\r\n          >\r\n        </mat-nav-list>\r\n      </mat-expansion-panel>\r\n    </mat-accordion>\r\n    <mat-accordion class=\"app-nav-accordion\">\r\n      <mat-expansion-panel class=\"mat-elevation-z0\">\r\n        <mat-expansion-panel-header>\r\n          <mat-panel-title>Consultas de Configuracion</mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n        <mat-nav-list>\r\n          <a mat-list-item>Item Three</a>\r\n          <a mat-list-item>Item Four</a>\r\n        </mat-nav-list>\r\n      </mat-expansion-panel>\r\n    </mat-accordion>\r\n  </mat-sidenav>\r\n\r\n  <mat-sidenav-content>\r\n    <mat-toolbar color=\"primary\">\r\n      <button\r\n        type=\"button\"\r\n        aria-label=\"Toggle sidenav\"\r\n        mat-icon-button\r\n        (click)=\"drawer.toggle()\"\r\n      >\r\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\r\n      </button>\r\n      <span class=\"example-spacer\"></span>\r\n      <div *ngIf=\"setupService.eleccionOb$ | async as eleccion\">\r\n        <span> Setup - {{ (setupService.eleccionOb$ | async)?.nombre }}</span>\r\n      </div>\r\n    </mat-toolbar>\r\n    <router-outlet></router-outlet>\r\n\r\n    <!-- Add Content Here -->\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\r\nimport { Component } from '@angular/core';\r\nimport { Observable, map, shareReplay } from 'rxjs';\r\nimport { FunctionCallingService } from 'src/app/Shared/services/functionCalling.service';\r\nimport { SetupService } from 'src/app/Shared/services/setup.service';\r\nimport { FunctionCall } from 'src/app/models/FunctionInterface';\r\n\r\n@Component({\r\n  selector: 'app-sidebar-setup',\r\n  templateUrl: './sidebar-setup.component.html',\r\n  styleUrls: ['./sidebar-setup.component.css']\r\n})\r\nexport class SidebarSetupComponent {\r\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\r\n    .pipe(\r\n      map(result => result.matches),\r\n      shareReplay()\r\n    );\r\n  private funciones : FunctionCall[];\r\n\r\n  constructor(private breakpointObserver: BreakpointObserver, public setupService: SetupService, private functionCallingService: FunctionCallingService) {\r\n    this.funciones = [\r\n      {\r\n        name: 'expandir_contraer_ABM',\r\n        description: 'Expande o contrae el menu de ABM',\r\n        parameters: {\r\n          type: \"object\",\r\n          properties: {\r\n            toogle: {\r\n              type: \"boolean\",\r\n              description: \"El valor con el que se contrae o expande el menu\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    ];\r\n    this.functionCallingService.addFunctions(this.funciones);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { SetupService } from 'src/app/Shared/services/setup.service';\nimport { Eleccion } from 'src/app/models/Elecciones';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.css']\n})\nexport class LayoutComponent implements OnInit {\n  e: Eleccion | null= null;\n  constructor(private setupService : SetupService){\n    this.setupService.eleccionOb$.subscribe(\n      ele => this.e = ele\n      );\n  }\n  ngOnInit(): void {\n\n  }\n}\n","\n<app-sidebar-setup>\n\n</app-sidebar-setup>\n","import { BaseEntity } from \"./BaseEntity\";\r\nimport { Companero } from \"./Companero\";\r\nimport { MesasElectoral } from \"./MesaElectoral\";\r\n\r\nexport class FiscalMesa extends BaseEntity{\r\n\r\n  mesa_id!: number;\r\n  companero_id!: number;\r\n\r\n  MesaElectoral!: MesasElectoral;\r\n  Companero!: Companero;\r\n\r\n\r\n  constructor(){\r\n    super();\r\n\r\n  }\r\n\r\n  override get endPoint(): string {\r\n    return \"fiscalesdemesas\";\r\n  }\r\n\r\n  override getFilterText(): string {\r\n    return `${this.Companero.nombre} ${this.MesaElectoral.numeroMesa.toString()}` ;\r\n  }\r\n\r\n}\r\n","<h2 mat-dialog-title>Seleccionar Compañero</h2>\r\n<mat-dialog-content>\r\n  <mat-form-field class=\"full-width\">\r\n    <input matInput placeholder=\"Filtrar Compañero\" [(ngModel)]=\"filterText\" >\r\n  </mat-form-field>\r\n\r\n  <table mat-table [dataSource]=\"companerosFiltrados\" class=\"mat-elevation-z8\">\r\n    <!-- Columnas de la tabla -->\r\n    <ng-container matColumnDef=\"nombre\">\r\n      <th mat-header-cell *matHeaderCellDef>Nombre</th>\r\n      <td mat-cell *matCellDef=\"let companero\" (click)=\"selectCompanero(companero)\">{{companero.nombre}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"apellido\">\r\n      <th mat-header-cell *matHeaderCellDef>Apellido</th>\r\n      <td mat-cell *matCellDef=\"let companero\" (click)=\"selectCompanero(companero)\">{{companero.apellido}}</td>\r\n    </ng-container>\r\n\r\n    <!-- Otras columnas aquí -->\r\n\r\n    <ng-container matColumnDef=\"dni\">\r\n      <th mat-header-cell *matHeaderCellDef>DNI</th>\r\n      <td mat-cell *matCellDef=\"let companero\" (click)=\"selectCompanero(companero)\">{{companero.dni}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"tel\">\r\n      <th mat-header-cell *matHeaderCellDef>Telefono</th>\r\n      <td mat-cell *matCellDef=\"let companero\" (click)=\"selectCompanero(companero)\">{{companero.tel}}</td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" [class.selected]=\"isSelected(row)\" (dblclick)=\"selectAndClose(row)\"></tr>\r\n  </table>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions class=\"button-container\">\r\n  <button class=\"btn-guardar\" mat-button [mat-dialog-close]=\"selectedCompanero\">Seleccionar</button>\r\n  <button mat-button class=\"btn-cerrar\" (click)=\"cancel()\">Cancelar</button>\r\n</mat-dialog-actions>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { Companero } from 'src/app/models/Companero';\r\nimport { CrudService } from '../../services/crud.service';\r\nimport { BaseEntity } from 'src/app/models/BaseEntity';\r\n\r\n@Component({\r\n  selector: 'app-select-companero-modal',\r\n  templateUrl: './select-companero-modal.component.html',\r\n  styleUrls: ['./select-companero-modal.component.css']\r\n})\r\nexport class SelectCompaneroModalComponent implements OnInit {\r\n  companeros: Companero[] = [];\r\n  companerosFiltrados = this.companeros;\r\n  displayedColumns: string[] = ['nombre', 'apellido', 'dni', 'tel']; // Agrega aquí otras columnas que quieras mostrar\r\n\r\n  _filterText: string = '';\r\n  selectedCompanero: Companero | undefined = undefined;\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<SelectCompaneroModalComponent>,\r\n    private companeroService: CrudService\r\n  ) {\r\n\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadData();\r\n  }\r\n\r\n  loadData(){\r\n    const c = new Companero();\r\n    this.companeroService.getAllEntity<Companero>(c).subscribe(\r\n      (res: any[]) => {\r\n        this.companeros = res.map(x=> Object.assign(new Companero(), x))\r\n        this.companerosFiltrados = this.companeros;\r\n      }\r\n    );\r\n  }\r\n\r\n  applyFilter(filterValue:any) {\r\n    // Aplicar el filtro al valor del campo de filtro\r\n    this.companerosFiltrados = BaseEntity.Filtrar(this.companeros, filterValue);\r\n  }\r\n\r\n  selectCompanero(companero: Companero) {\r\n    this.selectedCompanero = companero;\r\n  }\r\n\r\n  selectAndClose(companero: Companero) {\r\n    this.selectedCompanero = companero;\r\n    this.dialogRef.close(companero);\r\n  }\r\n\r\n  isSelected(companero: Companero): boolean {\r\n    return this.selectedCompanero === companero;\r\n  }\r\n\r\n  get filterText(): string {\r\n    return this._filterText;\r\n  }\r\n\r\n  set filterText(value: string) {\r\n    this._filterText = value;\r\n    // Aquí puedes realizar las acciones que deseas cuando filterText cambia de valor\r\n    console.log('Nuevo valor de filterText:', value);\r\n    // Luego, puedes aplicar el filtro a tu dataSource o realizar otras operaciones necesarias\r\n    this.applyFilter(value);\r\n  }\r\n\r\n\r\n  cancel() {\r\n    this.selectedCompanero = undefined;\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { API_URLS, AppSetings } from 'src/app/app-setting/app-config.token';\r\nimport { FiscalMesa } from 'src/app/models/FiscalMesa';\r\nimport { SetupService } from './setup.service';\r\nimport { lastValueFrom } from 'rxjs';\r\nimport { ListaElectoral } from 'src/app/models/ListaElectoral';\r\nimport { FiscalGeneral } from 'src/app/models/FiscalGeneral';\r\nimport { Eleccion } from 'src/app/models/Elecciones';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FiscalesService {\r\n\r\n  url: string;\r\n  eleccion: Eleccion | null = null;\r\n  constructor(@Inject(API_URLS) private Urls: AppSetings, private http: HttpClient, private setupService: SetupService) {\r\n    this.url = this.Urls.apiUrl;\r\n    this.setupService.eleccionOb$.subscribe(\r\n      (res: Eleccion|null)=>{\r\n        this.eleccion = res;\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  getHttpHeaders(): HttpHeaders {\r\n    return new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Accept': 'application/json'\r\n    });\r\n  }\r\n\r\n  getAllFiscalesMesas() {\r\n    const endPoint = this.url + 'fiscalesdemesas';\r\n\r\n    let httpOptions = {\r\n      headers: this.getHttpHeaders(),\r\n    };\r\n\r\n    return this.http.get<FiscalMesa[]>(endPoint, httpOptions);\r\n  }\r\n\r\n  setFiscalMesa(idCompanero: number, idMesa: number) {\r\n    const endPoint = this.url + 'fiscalesdemesas'\r\n    const body = {\r\n      mesa_id: idMesa,\r\n      companero_id: idCompanero\r\n    }\r\n    let httpOptions = {\r\n      headers: this.getHttpHeaders(),\r\n    };\r\n    return this.http.post(endPoint, body, httpOptions);\r\n  }\r\n\r\n  deleteFiscalMesa(idCompanero: number, idMesa: number) {\r\n    const endPoint = this.url + `fiscalesdemesas/${idMesa}/${idCompanero}`;\r\n    const body = {\r\n      mesa_id: idMesa,\r\n      companero_id: idCompanero\r\n    }\r\n    let httpOptions = {\r\n      headers: this.getHttpHeaders(),\r\n    };\r\n\r\n    return this.http.delete(endPoint, httpOptions);\r\n\r\n  }\r\n\r\n   getAllFiscalGenerales() {\r\n    const endPoint = this.url + 'fiscalesgenerales/obtenerPorEleccion';\r\n    let eleccion_id = 0;\r\n    if(this.eleccion) {\r\n      eleccion_id = this.eleccion.id;\r\n    }\r\n\r\n    const params = new HttpParams()\r\n      .set('eleccion_id', eleccion_id);\r\n\r\n    const httpOptions = {\r\n      headers: this.getHttpHeaders(),\r\n      params: params,\r\n    };\r\n\r\n    return this.http.get<FiscalGeneral[]>(endPoint, httpOptions);\r\n\r\n  }\r\n\r\n  setFiscalGeneral(fg: FiscalGeneral) {\r\n    const endPoint = this.url + 'fiscalesgenerales';\r\n    const { id, ...entityWithoutId } = fg;\r\n\r\n    let httpOptions = {\r\n      headers: this.getHttpHeaders(),\r\n    };\r\n\r\n    return this.http.post<FiscalGeneral>(endPoint, entityWithoutId, httpOptions);\r\n  }\r\n\r\n  deleteFiscalGeneral(fg: FiscalGeneral) {\r\n    const endPoint = this.url + `${fg.endPoint}`;\r\n\r\n    const companero_id = fg.companero_id;\r\n    const escuela_id = fg.escuela_id;\r\n    const eleccion_id = fg.eleccion_id;\r\n\r\n    const params = new HttpParams()\r\n      .set('eleccion_id', eleccion_id)\r\n      .set('escuela_id', escuela_id)\r\n      .set('companero_id', companero_id);\r\n\r\n\r\n    const httpOptions = {\r\n      headers: this.getHttpHeaders(),\r\n      params: params,\r\n    };\r\n\r\n    return this.http.delete(endPoint, httpOptions);\r\n  }\r\n\r\n}\r\n","<mat-dialog-content class=\"form-container\">\r\n  <h2>{{ isUpdate ? 'Actualizar Mesa' : 'Agregar Mesa' }}</h2>\r\n\r\n  <form [formGroup]=\"form\" (ngSubmit)=\"setFiscal()\">\r\n    <div class=\"form-row\">\r\n      <div class=\"form-column\">\r\n        <mat-form-field appearance=\"fill\" class=\"select-field\">\r\n          <mat-label>Seleccionar escuela</mat-label>\r\n          <mat-select [(value)]=\"escuelaElegida\">\r\n            <mat-option *ngFor=\"let escuela of escuelas\" [value]=\"escuela\">\r\n              {{ escuela.nombre }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"form-column\">\r\n        <mat-form-field appearance=\"fill\" class=\"select-field\">\r\n          <mat-label>Mesa Electoral</mat-label>\r\n          <mat-select formControlName=\"mesa_id\" [(ngModel)]=\"form.value.mesa_id\">\r\n            <mat-option *ngFor=\"let mesa of mesasDeEscuela\" [value]=\"mesa.id\">{{ mesa.numeroMesa }}</mat-option>\r\n          </mat-select>\r\n          <mat-error *ngIf=\"form.controls['mesa_id'].hasError('required')\">La escuela es requerida</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n\r\n    <mat-form-field appearance=\"fill\" class=\"input-field\">\r\n      <input matInput placeholder=\"Compañero\" [readonly]=\"true\" [value]=\"companeroSeleccionado?.nombre\">\r\n      <button mat-icon-button matSuffix (click)=\"openSelectCompaneroModal($event)\">\r\n        <mat-icon>search</mat-icon>\r\n      </button>\r\n      <mat-error *ngIf=\"form.controls['companero_id'].hasError('required')\">El compañero es requerido</mat-error>\r\n    </mat-form-field>\r\n\r\n    <div class=\"button-container\">\r\n      <button mat-raised-button class=\"btn-guardar\" type=\"submit\" [disabled]=\"form.invalid\">Guardar</button>\r\n      <button mat-button class=\"btn-cerrar\" (click)=\"closeModal($event)\">Cerrar</button>\r\n    </div>\r\n  </form>\r\n</mat-dialog-content>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\r\nimport { SelectCompaneroModalComponent } from 'src/app/Shared/components/select-companero-modal/select-companero-modal.component';\r\nimport { CrudService } from 'src/app/Shared/services/crud.service';\r\nimport { FiscalesService } from 'src/app/Shared/services/fiscales-mesas.service';\r\nimport { SetupService } from 'src/app/Shared/services/setup.service';\r\nimport { Companero } from 'src/app/models/Companero';\r\nimport { Eleccion } from 'src/app/models/Elecciones';\r\nimport { Escuela } from 'src/app/models/Escuela';\r\nimport { FiscalMesa } from 'src/app/models/FiscalMesa';\r\nimport { MesasElectoral } from 'src/app/models/MesaElectoral';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-fiscal-mesa-modal',\r\n  templateUrl: './fiscal-mesa-modal.component.html',\r\n  styleUrls: ['./fiscal-mesa-modal.component.css']\r\n})\r\nexport class FiscalMesaModalComponent implements OnInit {\r\n  isUpdate: boolean = false;\r\n  fiscal: FiscalMesa | undefined;\r\n  escuelas: Escuela[] = [];\r\n  form!: FormGroup;\r\n  eleccion: Eleccion | null = null;\r\n  private _escuelaElegida: Escuela | undefined;\r\n  mesasDeEscuela: MesasElectoral[] = [];\r\n  companeroSeleccionado: Companero | undefined = undefined;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private setupService: SetupService,\r\n    public dialogRef: MatDialogRef<FiscalMesaModalComponent>,\r\n    private formBuilder: FormBuilder,\r\n    private fiscalService: FiscalesService,\r\n    private abmService: CrudService,\r\n    @Inject(MAT_DIALOG_DATA) public data: { fiscal: FiscalMesa | undefined }\r\n  ) {\r\n    this.fiscal = data.fiscal;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n    this.form = this.formBuilder.group({\r\n      mesa_id: ['', Validators.required],\r\n      companero_id: ['', Validators.required],\r\n      // escuela_id: ['', Validators.required], // Cambio de nombre a escuela_id\r\n      // eleccion_id: ['', Validators.required],\r\n    });\r\n\r\n    if (this.fiscal) {\r\n      //si estoy actualizando tengo un isntancia de mesa\r\n      //le asigno los valores al formulario\r\n      this.isUpdate = true;\r\n      this.form.get('mesa_id')?.setValue(this.fiscal.mesa_id);\r\n      this.form.get('companero_id')?.setValue(this.fiscal.companero_id);\r\n    }\r\n\r\n  }\r\n\r\n  loadData() {\r\n    const e = new Escuela();\r\n    this.abmService.getAllEntity<Escuela>(e)\r\n      .subscribe((res: any[]) => {\r\n        this.escuelas = res.map(x => Object.assign(new Escuela(), x));\r\n      });\r\n\r\n    this.setupService.eleccionOb$.subscribe(\r\n      (res: any) => {\r\n        this.eleccion = res;\r\n      }\r\n    );\r\n  }\r\n  set escuelaElegida(escuela: Escuela | undefined) {\r\n    this._escuelaElegida = escuela;\r\n    // Realiza las operaciones adicionales aquí, como cargar las mesas de la escuela seleccionada\r\n    if (escuela) {\r\n      this.loadMesas(escuela); // Método para cargar las mesas de la escuela\r\n    } else {\r\n      this.mesasDeEscuela = []; // Reinicia las mesas si no hay escuela seleccionada\r\n    }\r\n  }\r\n\r\n  loadMesas(e: Escuela) {\r\n    this.setupService.getMesasByEscuela(e).subscribe(\r\n      (res: MesasElectoral[]) => {\r\n        this.mesasDeEscuela = res;\r\n      }\r\n    );\r\n  }\r\n\r\n  openSelectCompaneroModal(event: Event) {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    const dialogRef = this.dialog.open(SelectCompaneroModalComponent);\r\n\r\n    dialogRef.afterClosed().subscribe((result: any) => {\r\n      if (result) {\r\n        // Aquí obtienes el compañero seleccionado y puedes realizar las acciones necesarias\r\n        console.log(result);\r\n        this.companeroSeleccionado = result;\r\n        this.form.get('companero_id')?.setValue(result.id);\r\n      }\r\n    });\r\n  }\r\n  setFiscal() {\r\n    const idCompanero = this.form.get('companero_id')?.value;\r\n    const idMesa = this.form.get('mesa_id')?.value;\r\n\r\n    this.fiscalService.setFiscalMesa(idCompanero, idMesa).subscribe((result: any) => {\r\n      Swal.fire({\r\n        icon: 'success',\r\n        title: 'Configuracion exitosa',\r\n        text: `Se genero un nuevo Fical de Mesa`\r\n      });\r\n    });\r\n  }\r\n\r\n  closeModal(event: Event) {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    // Lógica para cerrar el modal\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<!-- <button mat-button (click)=\"abrirModalAgregar()\">Agregar</button> -->\r\n<button mat-fab color=\"primary\" class=\"floating-button\" (click)=\"abrirModalAgregar()\">\r\n  <mat-icon>add</mat-icon>\r\n</button>\r\n\r\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n\r\n  <!--- Note that these columns can be defined in any order.\r\n        The actual rendered columns are set as a property on the row definition\" -->\r\n\r\n\r\n\r\n  <!-- Escuela Column -->\r\n  <ng-container matColumnDef=\"escuela\">\r\n    <th mat-header-cell *matHeaderCellDef>  Escuela </th>\r\n    <td mat-cell *matCellDef=\"let element\"> {{element.MesaElectoral.Escuela.nombre}} </td>\r\n  </ng-container>\r\n\r\n  <!-- mesa Column -->\r\n  <ng-container matColumnDef=\"mesa\">\r\n    <th mat-header-cell *matHeaderCellDef> Numero de Mesa  </th>\r\n    <td mat-cell *matCellDef=\"let element\"> {{element.MesaElectoral.numeroMesa}} </td>\r\n  </ng-container>\r\n\r\n    <!-- eleccion Column -->\r\n    <ng-container matColumnDef=\"eleccion\">\r\n      <th mat-header-cell *matHeaderCellDef> Eleccion </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.MesaElectoral.Eleccion.nombre}} </td>\r\n    </ng-container>\r\n\r\n    <!-- apellido nombre Column -->\r\n    <ng-container matColumnDef=\"nombre\">\r\n      <th mat-header-cell *matHeaderCellDef> Apellido y Nombre </th>\r\n      <td mat-cell *matCellDef=\"let element\">{{element.Companero.apellido}}, {{element.Companero.nombre}} </td>\r\n    </ng-container>\r\n\r\n     <!-- Telefono Column -->\r\n     <ng-container matColumnDef=\"telefono\">\r\n      <th mat-header-cell *matHeaderCellDef>Telefono </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.Companero.tel}} </td>\r\n    </ng-container>\r\n\r\n <!-- Acciones Column -->\r\n <ng-container matColumnDef=\"acciones\">\r\n  <th mat-header-cell *matHeaderCellDef> Acciones </th>\r\n  <td mat-cell *matCellDef=\"let element\">\r\n    <button mat-icon-button color=\"warn\" (click)=\"borrarFiscalMesa(element)\">\r\n      <mat-icon>delete</mat-icon>\r\n    </button>\r\n  </td>\r\n</ng-container>\r\n\r\n\r\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n</table>\r\n<mat-paginator class=\"paginator-left\" [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 25]\"></mat-paginator>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FiscalesService } from 'src/app/Shared/services/fiscales-mesas.service';\r\nimport { SetupService } from 'src/app/Shared/services/setup.service';\r\nimport { FiscalMesa } from 'src/app/models/FiscalMesa';\r\nimport { FiscalMesaModalComponent } from './fiscal-mesa-modal/fiscal-mesa-modal.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport Swal from 'sweetalert2';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\n@Component({\r\n  selector: 'app-fiscales-mesas',\r\n  templateUrl: './fiscales-mesas.component.html',\r\n  styleUrls: ['./fiscales-mesas.component.css']\r\n})\r\nexport class FiscalesMesasComponent implements OnInit {\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  fiscalesMesas: FiscalMesa[] = []; //\r\n  dataSource!: MatTableDataSource<FiscalMesa>;\r\n  displayedColumns: string[] = ['escuela', 'mesa', 'eleccion', 'nombre', 'telefono', 'acciones'];\r\n\r\n  constructor(private setupService: SetupService, private fiscalService: FiscalesService, public dialog: MatDialog) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.loadData();\r\n  }\r\n\r\n  loadData() {\r\n    this.fiscalService.getAllFiscalesMesas().subscribe(\r\n      (res: FiscalMesa[]) => {\r\n        this.fiscalesMesas = res.map(x => Object.assign(new FiscalMesa(), x));\r\n        this.dataSource = new MatTableDataSource(this.fiscalesMesas);\r\n        this.dataSource.paginator = this.paginator;\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  abrirModalAgregar() {\r\n    const dialogRef = this.dialog.open(FiscalMesaModalComponent, {\r\n      data: {\r\n        mesa: undefined\r\n      },\r\n      width: '500px', // Especifica el ancho del modal\r\n      panelClass: 'custom-modal-background', // Aplica la clase personalizada al modal\r\n      // Otras opciones del modal...\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log('El modal se cerró');\r\n      // Realizar acciones después de cerrar el modal, como llamar al servicio de ABM\r\n      this.loadData();\r\n    });\r\n  }\r\n\r\n  borrarFiscalMesa(f: FiscalMesa) {\r\n\r\n    Swal.fire({\r\n      title: '¿Estás seguro?',\r\n      text: 'Esta acción no se puede deshacer',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Sí, borrar',\r\n      cancelButtonText: 'Cancelar'\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        // Lógica para borrar la elección\r\n        // ...\r\n        this.fiscalService.deleteFiscalMesa(f.companero_id, f.mesa_id).subscribe(\r\n          res => {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              title: 'Escuela borrada',\r\n              text: 'La mesa  ha sido borrada exitosamente'\r\n            });\r\n            this.loadData();\r\n          },\r\n          err => {\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Error al borrar escuela',\r\n              text: 'Ha ocurrido un error al borrar la mesa'\r\n            });\r\n            console.log(err);\r\n          }\r\n        );\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","import { BaseEntity } from \"./BaseEntity\";\r\nimport { Companero } from \"./Companero\";\r\nimport { Eleccion } from \"./Elecciones\";\r\nimport { Escuela } from \"./Escuela\";\r\n\r\nexport class FiscalGeneral extends BaseEntity{\r\n  override get endPoint(): string {\r\n    return \"fiscalesgenerales\";\r\n  }\r\n  override getFilterText(): string {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n\r\n  companero_id!: number;\r\n  escuela_id!: number;\r\n  eleccion_id!: number;\r\n\r\n  Companero!: Companero;\r\n  Escuela!: Escuela;\r\n  Eleccion!:Eleccion;\r\n\r\n  constructor(){\r\n    super();\r\n  }\r\n}\r\n","<mat-dialog-content class=\"form-container\">\r\n  <h2>{{ isUpdate ? 'Actualizar Fiscal General' : 'Agregar Fiscal General' }}</h2>\r\n\r\n  <form [formGroup]=\"form\" (ngSubmit)=\"setFiscal()\">\r\n    <div class=\"form-row\">\r\n      <div class=\"form-column\">\r\n        <mat-form-field appearance=\"fill\" class=\"select-field\">\r\n          <mat-label>Seleccionar escuela</mat-label>\r\n          <mat-select formControlName=\"escuela_id\" [(ngModel)]=\"form.value.escuela_id\">\r\n            <mat-option *ngFor=\"let escuela of escuelas\" [value]=\"escuela.id\">\r\n              {{ escuela.nombre }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <mat-form-field appearance=\"fill\" class=\"input-field\">\r\n      <input matInput placeholder=\"Compañero\" [readonly]=\"true\" [value]=\"companeroSeleccionado?.nombre\">\r\n      <button mat-icon-button matSuffix (click)=\"openSelectCompaneroModal($event)\">\r\n        <mat-icon>search</mat-icon>\r\n      </button>\r\n      <mat-error *ngIf=\"form.controls['companero_id'].hasError('required')\">El compañero es requerido</mat-error>\r\n    </mat-form-field>\r\n\r\n    <div class=\"button-container\">\r\n      <button mat-raised-button class=\"btn-guardar\" type=\"submit\" [disabled]=\"form.invalid\">Guardar</button>\r\n      <button mat-button class=\"btn-cerrar\" (click)=\"closeModal($event)\">Cerrar</button>\r\n    </div>\r\n  </form>\r\n</mat-dialog-content>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { SelectCompaneroModalComponent } from 'src/app/Shared/components/select-companero-modal/select-companero-modal.component';\r\nimport { CrudService } from 'src/app/Shared/services/crud.service';\r\nimport { FiscalesService } from 'src/app/Shared/services/fiscales-mesas.service';\r\nimport { SetupService } from 'src/app/Shared/services/setup.service';\r\nimport { Companero } from 'src/app/models/Companero';\r\nimport { Eleccion } from 'src/app/models/Elecciones';\r\nimport { Escuela } from 'src/app/models/Escuela';\r\nimport { FiscalGeneral } from 'src/app/models/FiscalGeneral';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n@Component({\r\n  selector: 'app-fiscal-general-modal',\r\n  templateUrl: './fiscal-general-modal.component.html',\r\n  styleUrls: ['./fiscal-general-modal.component.css']\r\n})\r\nexport class FiscalGeneralModalComponent implements OnInit {\r\n  isUpdate: boolean = false;\r\n  fiscal: FiscalGeneral | undefined;\r\n  escuelas: Escuela[] = [];\r\n  form!: FormGroup;\r\n  eleccion: Eleccion | null = null;\r\n  companeroSeleccionado: Companero | undefined = undefined;\r\n  private _escuelaElegida: Escuela | undefined;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private setupService: SetupService,\r\n    public dialogRef: MatDialogRef<FiscalGeneralModalComponent>,\r\n    private formBuilder: FormBuilder,\r\n    private fiscalService: FiscalesService,\r\n    private abmService: CrudService,\r\n\r\n    @Inject(MAT_DIALOG_DATA) public data: { fiscal: FiscalGeneral | undefined }\r\n  ) {\r\n    this.fiscal = data.fiscal;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n    this.form = this.formBuilder.group({\r\n      escuela_id: ['', Validators.required],\r\n      companero_id: ['', Validators.required],\r\n\r\n    });\r\n\r\n    this.setupService.eleccionOb$.subscribe(\r\n      (res: any) => {\r\n        this.eleccion = res;\r\n      });\r\n\r\n    if (this.fiscal) {\r\n      //si estoy actualizando tengo un isntancia de mesa\r\n      //le asigno los valores al formulario\r\n      this.isUpdate = true;\r\n      this.form.get('escuela_id')?.setValue(this.fiscal.escuela_id);\r\n      this.form.get('companero_id')?.setValue(this.fiscal.companero_id);\r\n\r\n    }\r\n\r\n  }\r\n  loadData() {\r\n    const e = new Escuela();\r\n    this.abmService.getAllEntity<Escuela>(e)\r\n      .subscribe((res: any[]) => {\r\n        this.escuelas = res.map(x => Object.assign(new Escuela(), x));\r\n      });\r\n\r\n    this.setupService.eleccionOb$.subscribe(\r\n      (res: any) => {\r\n        this.eleccion = res;\r\n      }\r\n    );\r\n  }\r\n\r\n  openSelectCompaneroModal(event: Event) {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    const dialogRef = this.dialog.open(SelectCompaneroModalComponent);\r\n\r\n    dialogRef.afterClosed().subscribe((result: any) => {\r\n      if (result) {\r\n        // Aquí obtienes el compañero seleccionado y puedes realizar las acciones necesarias\r\n        console.log(result);\r\n        this.companeroSeleccionado = result;\r\n        this.form.get('companero_id')?.setValue(result.id);\r\n      }\r\n    });\r\n  }\r\n\r\n  set escuelaElegida(escuela: Escuela | undefined) {\r\n    this._escuelaElegida = escuela;\r\n    // Realiza las operaciones adicionales aquí, como cargar las mesas de la escuela seleccionada\r\n\r\n  }\r\n\r\n  setFiscal() {\r\n    const idCompanero = this.form.get('companero_id')?.value;\r\n    const idMesa = this.form.get('mesa_id')?.value;\r\n\r\n    let fiscal = new FiscalGeneral();\r\n    fiscal = Object.assign(new FiscalGeneral(), this.form.value);\r\n    fiscal.eleccion_id = this.eleccion?.id ? this.eleccion.id : 0;\r\n    this.fiscalService.setFiscalGeneral(fiscal).subscribe((result: any) => {\r\n\r\n      if(result.errors) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Oops...',\r\n          text: result.errors[0].message,\r\n        });\r\n      }else{\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: 'Configuracion exitosa',\r\n          text: `Se genero un nuevo Fical de Mesa`\r\n        }).then(() => { this.dialogRef.close()});\r\n      }\r\n    });\r\n  }\r\n\r\n  closeModal(event: Event) {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    // Lógica para cerrar el modal\r\n    this.dialogRef.close();\r\n  }\r\n\r\n\r\n}\r\n","<!-- <button mat-button (click)=\"abrirModalAgregar()\">Agregar</button> -->\r\n<button mat-fab color=\"primary\" class=\"floating-button\" (click)=\"abrirModalAgregar()\">\r\n  <mat-icon>add</mat-icon>\r\n</button>\r\n\r\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">x\r\n\r\n  <!-- Escuela Column -->\r\n  <ng-container matColumnDef=\"escuela\">\r\n    <th mat-header-cell *matHeaderCellDef>  Escuela </th>\r\n    <td mat-cell *matCellDef=\"let element\"> {{element.Escuela.nombre}} </td>\r\n  </ng-container>\r\n\r\n    <!-- eleccion Column -->\r\n    <ng-container matColumnDef=\"eleccion\">\r\n      <th mat-header-cell *matHeaderCellDef> Eleccion </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.Eleccion.nombre}} </td>\r\n    </ng-container>\r\n\r\n    <!-- apellido nombre Column -->\r\n    <ng-container matColumnDef=\"nombre\">\r\n      <th mat-header-cell *matHeaderCellDef> Apellido y Nombre </th>\r\n      <td mat-cell *matCellDef=\"let element\">{{element.Companero.apellido}}, {{element.Companero.nombre}} </td>\r\n    </ng-container>\r\n\r\n     <!-- Telefono Column -->\r\n     <ng-container matColumnDef=\"telefono\">\r\n      <th mat-header-cell *matHeaderCellDef>Telefono </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.Companero.tel}} </td>\r\n    </ng-container>\r\n\r\n <!-- Acciones Column -->\r\n <ng-container matColumnDef=\"acciones\">\r\n  <th mat-header-cell *matHeaderCellDef> Acciones </th>\r\n  <td mat-cell *matCellDef=\"let element\">\r\n    <button mat-icon-button color=\"warn\" (click)=\"borrarFiscalGeneral(element)\">\r\n      <mat-icon>delete</mat-icon>\r\n    </button>\r\n  </td>\r\n</ng-container>\r\n\r\n\r\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n</table>\r\n<mat-paginator class=\"paginator-left\" [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 25]\"></mat-paginator>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FiscalesService } from 'src/app/Shared/services/fiscales-mesas.service';\r\nimport { SetupService } from 'src/app/Shared/services/setup.service';\r\nimport { FiscalMesa } from 'src/app/models/FiscalMesa';\r\n\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport Swal from 'sweetalert2';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FiscalGeneral } from 'src/app/models/FiscalGeneral';\r\nimport { FiscalGeneralModalComponent } from './fiscal-general-modal/fiscal-general-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-fiscales-generales',\r\n  templateUrl: './fiscales-generales.component.html',\r\n  styleUrls: ['./fiscales-generales.component.css']\r\n})\r\nexport class FiscalesGeneralesComponent {\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  fiscalGeneral: FiscalGeneral[] = []; //\r\n  dataSource!: MatTableDataSource<FiscalGeneral>;\r\n  displayedColumns: string[] = ['escuela', 'eleccion', 'nombre', 'telefono', 'acciones'];\r\n\r\n\r\n  constructor(private setupService: SetupService, private fiscalService: FiscalesService, public dialog: MatDialog) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.loadData();\r\n  }\r\n\r\n   loadData() {\r\n     this.fiscalService.getAllFiscalGenerales().subscribe(\r\n      (res: FiscalGeneral[]) => {\r\n        this.fiscalGeneral = res.map(x => Object.assign(new FiscalGeneral(), x));\r\n        this.dataSource = new MatTableDataSource(this.fiscalGeneral);\r\n        this.dataSource.paginator = this.paginator;\r\n      });\r\n\r\n  }\r\n  abrirModalAgregar() {\r\n    const dialogRef = this.dialog.open(FiscalGeneralModalComponent, {\r\n      data: {\r\n        mesa: undefined\r\n      },\r\n      width: '500px', // Especifica el ancho del modal\r\n      panelClass: 'custom-modal-background', // Aplica la clase personalizada al modal\r\n      // Otras opciones del modal...\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log('El modal se cerró');\r\n      // Realizar acciones después de cerrar el modal, como llamar al servicio de ABM\r\n      this.loadData();\r\n    });\r\n  }\r\n\r\n  borrarFiscalGeneral(fg: FiscalGeneral) {\r\n    Swal.fire({\r\n      title: '¿Estás seguro?',\r\n      text: 'Esta acción no se puede deshacer',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Sí, borrar',\r\n      cancelButtonText: 'Cancelar'\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        // Lógica para borrar la elección\r\n        // ...\r\n        this.fiscalService.deleteFiscalGeneral(fg).subscribe(\r\n          res => {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              title: 'Fiscal General borrado',\r\n              text: 'El Fiscal General ha sido borrado correctamente'\r\n            });\r\n            this.loadData();\r\n          },\r\n          err => {\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Error al borrar escuela',\r\n              text: 'Ha ocurrido un error al borrar el fiscal general'\r\n            });\r\n            console.log(err);\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { BaseEntity } from \"./BaseEntity\";\r\nimport { Candidato } from \"./Candidato\";\r\nimport { Cargo } from \"./Cargo\";\r\nimport { Eleccion } from \"./Elecciones\";\r\nimport { Escuela } from \"./Escuela\";\r\nimport { Partido } from \"./Partido\";\r\n\r\nexport class ListaElectoral extends BaseEntity{\r\n  numero_lista!: number;\r\n  nombre!: string;\r\n  partido_id!: number;\r\n  candidato_id!: number;\r\n  eleccion_id!: number;\r\n  cargo_id!: number;\r\n\r\n  Partido!: Partido;\r\n  Candidato!: Candidato;\r\n  Eleccion!: Eleccion;\r\n  Cargo!: Cargo;\r\n\r\n\r\n  constructor(){\r\n    super();\r\n\r\n  }\r\n\r\n  override get endPoint(): string {\r\n    return \"mesas\";\r\n  }\r\n\r\n  override getFilterText(): string {\r\n    return `${this.numero_lista.toString()} ${this.nombre}` ;\r\n  }\r\n\r\n}\r\n","<h2 mat-dialog-title>Seleccionar Compañero</h2>\r\n<mat-dialog-content>\r\n  <mat-form-field class=\"full-width\">\r\n    <input matInput placeholder=\"Filtrar Candidatos\" [(ngModel)]=\"filterText\" >\r\n  </mat-form-field>\r\n\r\n  <table mat-table [dataSource]=\"candidatosFiltrados\" class=\"mat-elevation-z8\">\r\n    <!-- Columnas de la tabla -->\r\n    <ng-container matColumnDef=\"nombre\">\r\n      <th mat-header-cell *matHeaderCellDef>Nombre</th>\r\n      <td mat-cell *matCellDef=\"let candidato\" (click)=\"selectCandidato(candidato)\">{{candidato.nombre}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"apellido\">\r\n      <th mat-header-cell *matHeaderCellDef>Apellido</th>\r\n      <td mat-cell *matCellDef=\"let candidato\" (click)=\"selectCandidato(candidato)\">{{candidato.apellido}}</td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" [class.selected]=\"isSelected(row)\" (dblclick)=\"selectAndClose(row)\"></tr>\r\n  </table>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions class=\"button-container\">\r\n  <button class=\"btn-guardar\" mat-button [mat-dialog-close]=\"selectedCandidato\">Seleccionar</button>\r\n  <button mat-button class=\"btn-cerrar\" (click)=\"cancel()\">Cancelar</button>\r\n</mat-dialog-actions>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { Candidato } from 'src/app/models/Candidato';\r\nimport { CrudService } from '../../services/crud.service';\r\nimport { BaseEntity } from 'src/app/models/BaseEntity';\r\n\r\n@Component({\r\n  selector: 'app-select-candidato',\r\n  templateUrl: './select-candidato.component.html',\r\n  styleUrls: ['./select-candidato.component.css']\r\n})\r\nexport class SelectCandidatoComponent implements OnInit {\r\n  candidatos: Candidato[] = [];\r\n  candidatosFiltrados = this.candidatos;\r\n  displayedColumns: string[] = ['nombre', 'apellido']; // Agrega aquí otras columnas que quieras mostrar\r\n\r\n  _filterText: string = '';\r\n  selectedCandidato: Candidato | undefined = undefined;\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<SelectCandidatoComponent>,\r\n    private companeroService: CrudService\r\n  ) {\r\n\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadData();\r\n  }\r\n\r\n  loadData(){\r\n    const c = new Candidato();\r\n    this.companeroService.getAllEntity<Candidato>(c).subscribe(\r\n      (res: any[]) => {\r\n        this.candidatos = res.map(x=> Object.assign(new Candidato(), x))\r\n        this.candidatosFiltrados = this.candidatos;\r\n      }\r\n    );\r\n  }\r\n\r\n  applyFilter(filterValue:any) {\r\n    // Aplicar el filtro al valor del campo de filtro\r\n    this.candidatosFiltrados = BaseEntity.Filtrar(this.candidatos, filterValue);\r\n  }\r\n\r\n  selectCandidato(candidato: Candidato) {\r\n    this.selectedCandidato = candidato;\r\n  }\r\n\r\n  selectAndClose(candidato: Candidato) {\r\n    this.selectedCandidato = candidato;\r\n    this.dialogRef.close(candidato);\r\n  }\r\n\r\n  isSelected(candidato: Candidato): boolean {\r\n    return this.selectedCandidato === candidato;\r\n  }\r\n\r\n  get filterText(): string {\r\n    return this._filterText;\r\n  }\r\n\r\n  set filterText(value: string) {\r\n    this._filterText = value;\r\n    // Aquí puedes realizar las acciones que deseas cuando filterText cambia de valor\r\n    console.log('Nuevo valor de filterText:', value);\r\n    // Luego, puedes aplicar el filtro a tu dataSource o realizar otras operaciones necesarias\r\n    this.applyFilter(value);\r\n  }\r\n\r\n\r\n  cancel() {\r\n    this.selectedCandidato = undefined;\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Injectable,Inject } from '@angular/core';\r\nimport { SetupService } from 'src/app/Shared/services/setup.service';\r\nimport { API_URLS, AppSetings } from 'src/app/app-setting/app-config.token';\r\nimport { Eleccion } from 'src/app/models/Elecciones';\r\nimport { ListaElectoral } from 'src/app/models/ListaElectoral';\r\n\r\n@Injectable({\r\n  providedIn: 'any'\r\n})\r\nexport class ListasService {\r\n\r\n  eleccion: Eleccion | null = null;\r\n  url: string;\r\n  constructor(@Inject(API_URLS) private Urls: AppSetings,\r\n    private http: HttpClient, private setupService: SetupService) {\r\n\r\n    this.url = this.Urls.apiUrl;\r\n    this.setupService.eleccionOb$.subscribe(\r\n      (res: Eleccion|null)=>{\r\n        this.eleccion = res;\r\n      }\r\n    );\r\n  }\r\n\r\n  getHttpHeaders(): HttpHeaders {\r\n    return new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Accept': 'application/json'\r\n    });\r\n  }\r\n\r\n  getAllByEleccion(){\r\n    const endPoint = this.url + 'listas/obtenerPorEleccion';\r\n    let eleccion_id = 0;\r\n    if(this.eleccion) {\r\n      eleccion_id = this.eleccion.id;\r\n    }\r\n    const params = new HttpParams()\r\n      .set('eleccion_id', eleccion_id);\r\n\r\n    const httpOptions = {\r\n      headers: this.getHttpHeaders(),\r\n      params: params,\r\n    };\r\n\r\n    return this.http.get<ListaElectoral[]>(endPoint, httpOptions);\r\n  }\r\n\r\n  setListaElectoral(listaElectoral: ListaElectoral){\r\n    const endPoint = this.url + \"listas\";\r\n    const {id, ...entityWithoutId} = listaElectoral;\r\n\r\n    let httpOptions = {\r\n      headers: this.getHttpHeaders(),\r\n    };\r\n\r\n    return this.http.post<ListaElectoral>(endPoint, entityWithoutId, httpOptions);\r\n  }\r\n\r\n}\r\n","<mat-dialog-content class=\"form-container\">\r\n  <h2>{{ isUpdate ? 'Actualizar Lista Electoral' : 'Agregar Lista Electoral' }}</h2>\r\n\r\n  <form [formGroup]=\"form\" (ngSubmit)=\"setLista()\">\r\n    <div class=\"form-row\">\r\n      <div class=\"form-column\">\r\n        <mat-form-field appearance=\"fill\" class=\"select-field\">\r\n  <mat-label>Seleccionar Partido</mat-label>\r\n  <mat-select formControlName=\"partido_id\" [(ngModel)]=\"form.value.partido_id\" [formControl]=\"partidoFiltrado\">\r\n    <mat-option *ngFor=\"let partido of partidosFiltrados\" [value]=\"partido.id\">\r\n      {{ partido.nombre }}\r\n    </mat-option>\r\n  </mat-select>\r\n</mat-form-field>\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"form-row\">\r\n      <div class=\"form-column\">\r\n        <mat-form-field appearance=\"fill\" class=\"input-field\">\r\n          <input matInput placeholder=\"Nro de lista\" formControlName=\"numero_lista\">\r\n          <mat-error *ngIf=\"form.controls['numero_lista'].hasError('required')\">El nro de lista es requeridos</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"form-column\">\r\n        <mat-form-field appearance=\"fill\" class=\"input-field\">\r\n          <input matInput placeholder=\"Nombre de lista\" formControlName=\"nombre\">\r\n          <mat-error *ngIf=\"form.controls['nombre'].hasError('required')\">El nombre de lista es requeridos</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n\r\n    </div>\r\n\r\n    <div class=\"form-row\">\r\n      <div class=\"form-column\">\r\n        <mat-form-field appearance=\"fill\" class=\"select-field\">\r\n          <mat-label>Seleccionar Cargo</mat-label>\r\n          <mat-select formControlName=\"cargo_id\" [(ngModel)]=\"form.value.cargo_id\">\r\n            <mat-option *ngFor=\"let cargo of cargos\" [value]=\"cargo.id\">\r\n              {{ cargo.nombre }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n\r\n    <mat-form-field appearance=\"fill\" class=\"input-field\">\r\n      <input matInput placeholder=\"Candidato\" [readonly]=\"true\" [value]=\"_candidatoSeleccionado?.nombre\">\r\n      <button mat-icon-button matSuffix (click)=\"openSelectCandidatoModal($event)\">\r\n        <mat-icon>search</mat-icon>\r\n      </button>\r\n      <mat-error *ngIf=\"form.controls['candidato_id'].hasError('required')\">El candidato es requerido</mat-error>\r\n    </mat-form-field>\r\n\r\n    <div class=\"button-container\">\r\n      <button mat-raised-button class=\"btn-guardar\" type=\"submit\" [disabled]=\"form.invalid\">Guardar</button>\r\n      <button mat-button class=\"btn-cerrar\" (click)=\"closeModal($event)\">Cerrar</button>\r\n    </div>\r\n  </form>\r\n</mat-dialog-content>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { SetupService } from 'src/app/Shared/services/setup.service';\r\nimport { Candidato } from 'src/app/models/Candidato';\r\nimport { Cargo } from 'src/app/models/Cargo';\r\nimport { Eleccion } from 'src/app/models/Elecciones';\r\nimport { ListaElectoral } from 'src/app/models/ListaElectoral';\r\nimport { Partido } from 'src/app/models/Partido';\r\nimport { ListasService } from '../../service/listas.service';\r\nimport { CrudService } from 'src/app/Shared/services/crud.service';\r\nimport { SelectCandidatoComponent } from 'src/app/Shared/components/select-candidato/select-candidato.component';\r\nimport Swal from 'sweetalert2';\r\nimport { startWith } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-modal-listas',\r\n  templateUrl: './modal-listas.component.html',\r\n  styleUrls: ['./modal-listas.component.css']\r\n})\r\nexport class ModalListasComponent implements OnInit {\r\n\r\n  isUpdate: boolean = false;\r\n  lista: ListaElectoral | undefined;\r\n  partidos: Partido[] = [];\r\n  cargos: Cargo[] = [];\r\n  form!: FormGroup;\r\n  eleccion: Eleccion | null = null;\r\n\r\n  private _partidoElegido: Partido | undefined;\r\n  public _candidatoSeleccionado: Candidato | undefined = undefined;\r\n  private _cargoSeleccionado: Cargo | undefined = undefined;\r\n  private _listaElegida: ListaElectoral | undefined;\r\n\r\n  partidoFiltrado = new FormControl();\r\n  partidosFiltrados: Partido[] = [];\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private setupService: SetupService,\r\n    public dialogRef: MatDialogRef<ModalListasComponent>,\r\n    private formBuilder: FormBuilder,\r\n    private listaService: ListasService,\r\n    private abmService: CrudService,\r\n    @Inject(MAT_DIALOG_DATA) public data: { lista: ListaElectoral | undefined }\r\n  ) {\r\n    this._listaElegida = data.lista;\r\n\r\n    this.form = this.formBuilder.group({\r\n      numero_lista: ['', Validators.required],\r\n      nombre: ['', Validators.required],\r\n      partido_id: ['', Validators.required],\r\n      candidato_id: ['', Validators.required],\r\n      eleccion_id: ['', Validators.required],\r\n      cargo_id: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setupService.eleccionOb$.subscribe((res: any) => {\r\n      this.eleccion = res;\r\n      this.form.get('eleccion_id')?.setValue(res.id);\r\n    });\r\n\r\n    this.loadData();\r\n\r\n    this.partidoFiltrado.valueChanges.pipe(startWith('')).subscribe(value => {\r\n      this.filterPartidos(value);\r\n    });\r\n  }\r\n\r\n  loadData() {\r\n    const p = new Partido();\r\n    this.abmService.getAllEntity<Partido>(p).subscribe((res: Partido[]) => {\r\n      this.partidos = res.map(p => Object.assign(new Partido(), p));\r\n      this.filterPartidos('');\r\n    });\r\n\r\n    const c = new Cargo();\r\n    this.abmService.getAllEntity<Cargo>(c).subscribe((res: Cargo[]) => {\r\n      this.cargos = res.map(c => Object.assign(new Cargo(), c));\r\n    });\r\n\r\n    if (this._listaElegida && this._listaElegida.id > 0) {\r\n      this.isUpdate = true;\r\n      this.form.get('numero_lista')?.setValue(this._listaElegida.numero_lista);\r\n      this.form.get('nombre')?.setValue(this._listaElegida.nombre);\r\n      this.form.get('partido_id')?.setValue(this._listaElegida.partido_id);\r\n      this.form.get('candidato_id')?.setValue(this._listaElegida.candidato_id);\r\n      this.form.get('eleccion_id')?.setValue(this._listaElegida.eleccion_id);\r\n      this.form.get('cargo_id')?.setValue(this._listaElegida.cargo_id);\r\n    }\r\n  }\r\n\r\n  openSelectCandidatoModal(event: Event) {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    const dialogRef = this.dialog.open(SelectCandidatoComponent, {\r\n      width: '900px',\r\n      panelClass: 'custom-modal-container',\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result: any) => {\r\n      if (result) {\r\n        console.log(result);\r\n        this._candidatoSeleccionado = result;\r\n        this.form.get('candidato_id')?.setValue(result.id);\r\n      }\r\n    });\r\n  }\r\n\r\n  set partidoElegido(partidoElegido: Partido | undefined) {\r\n    this._partidoElegido = partidoElegido;\r\n  }\r\n\r\n  set cargoElegido(cargoElegido: Cargo | undefined) {\r\n    this._cargoSeleccionado = cargoElegido;\r\n  }\r\n\r\n  setLista() {\r\n    let lista = new ListaElectoral();\r\n    lista = Object.assign(new ListaElectoral(), this.form.value);\r\n    this.listaService.setListaElectoral(lista).subscribe({\r\n      next: (res: any) => {\r\n        if (res.errors) {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: res.errors[0].message,\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Configuracion exitosa',\r\n            text: `Se genero un nuevo Fical de Mesa`,\r\n          }).then(() => {\r\n            this.dialogRef.close();\r\n          });\r\n        }\r\n      },\r\n      error: (err) => {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Oops...',\r\n          text: err.errors[0].message,\r\n        });\r\n      },\r\n    });\r\n  }\r\n\r\n  displayPartido(partido: any): string {\r\n    if (partido) {\r\n      return partido.nombre;\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  filterPartidos(value: string): void {\r\n    this.partidosFiltrados = this.partidos.filter(\r\n      partido => partido.nombre.toLowerCase().includes(value.toLowerCase())\r\n    );\r\n  }\r\n\r\n  closeModal(event: Event) {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<!-- <button mat-button (click)=\"abrirModalAgregar()\">Agregar</button> -->\r\n<button mat-fab color=\"primary\" class=\"floating-button\" (click)=\"abrirModal()\">\r\n  <mat-icon>add</mat-icon>\r\n</button>\r\n\r\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">x\r\n  <!-- ['numero', 'nombre', 'partido', 'cargo', 'candidato'] -->\r\n  <!-- Numero lista Column -->\r\n  <ng-container matColumnDef=\"numero\">\r\n    <th mat-header-cell *matHeaderCellDef>Numero </th>\r\n    <td mat-cell *matCellDef=\"let element\"> {{element.numero_lista}} </td>\r\n  </ng-container>\r\n\r\n    <!-- nombre lista Column -->\r\n    <ng-container matColumnDef=\"nombre\">\r\n      <th mat-header-cell *matHeaderCellDef> Nombre </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.nombre}} </td>\r\n    </ng-container>\r\n\r\n    <!-- partido Column -->\r\n    <ng-container matColumnDef=\"partido\">\r\n      <th mat-header-cell *matHeaderCellDef> Partido</th>\r\n      <td mat-cell *matCellDef=\"let element\">{{element.Partido.nombre}} </td>\r\n    </ng-container>\r\n\r\n     <!-- cargo Column -->\r\n     <ng-container matColumnDef=\"cargo\">\r\n      <th mat-header-cell *matHeaderCellDef>Cargo </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.Cargo.nombre}} </td>\r\n    </ng-container>\r\n\r\n    <!-- candidato Column -->\r\n    <ng-container matColumnDef=\"candidato\">\r\n      <th mat-header-cell *matHeaderCellDef>Candidato </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.Candidato.nombre}} </td>\r\n    </ng-container>\r\n\r\n <!-- Acciones Column -->\r\n <ng-container matColumnDef=\"acciones\">\r\n  <th mat-header-cell *matHeaderCellDef> Acciones </th>\r\n  <td mat-cell *matCellDef=\"let element\">\r\n    <button mat-icon-button color=\"warn\" (click)=\"borrarListaElectoral(element)\">\r\n      <mat-icon>delete</mat-icon>\r\n    </button>\r\n  </td>\r\n</ng-container>\r\n\r\n\r\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n</table>\r\n<mat-paginator class=\"paginator-left\" [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 25]\"></mat-paginator>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LayoutComponent } from 'src/app/setup-eleccion/layout/layout.component';\r\nimport { MesasComponent } from '../dash-board/abm/mesas/mesas.component';\r\nimport { FiscalesMesasComponent } from './fiscales-mesas/fiscales-mesas.component';\r\nimport { FiscalGeneral } from '../models/FiscalGeneral';\r\nimport { FiscalesGeneralesComponent } from './fiscales-generales/fiscales-generales.component';\r\nimport { ListasElectoralesComponent } from './listas-electorales/listas-electorales.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LayoutComponent,\r\n    children: [\r\n      {path: 'mesa-electoral', component: MesasComponent},\r\n      {path: 'fiscales-mesas', component: FiscalesMesasComponent},\r\n      {path: 'fiscales-generales', component: FiscalesGeneralesComponent},\r\n      {path: 'listas', component: ListasElectoralesComponent}\r\n    ],\r\n  }\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SetupEleccionRoutingModule { }\r\n","import { Component, NgZone, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { CrudService } from 'src/app/Shared/services/crud.service';\r\nimport { SetupService } from 'src/app/Shared/services/setup.service';\r\nimport { ListaElectoral } from 'src/app/models/ListaElectoral';\r\nimport Swal from 'sweetalert2';\r\nimport { ModalListasComponent } from './modal-listas/modal-listas.component';\r\nimport { ListasService } from '../service/listas.service';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\n\r\n@Component({\r\n  selector: 'app-listas-electorales',\r\n  templateUrl: './listas-electorales.component.html',\r\n  styleUrls: ['./listas-electorales.component.css']\r\n})\r\nexport class ListasElectoralesComponent implements OnInit {\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  listasElectorales!: ListaElectoral[];\r\n  dataSource!: MatTableDataSource<ListaElectoral>;\r\n  displayedColumns: string[] = ['numero', 'nombre', 'partido', 'cargo', 'candidato','acciones'];\r\n\r\n  constructor(private abmService: CrudService, private listaService: ListasService, private setupService: SetupService,\r\n    public dialog: MatDialog, private zone: NgZone) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.loadData();\r\n  }\r\n\r\n  loadData() {\r\n    const l = new ListaElectoral();\r\n    this.listaService.getAllByEleccion()\r\n      .subscribe(res => {\r\n        this.listasElectorales = res.map(e => Object.assign(new ListaElectoral(), e));\r\n        this.dataSource = new MatTableDataSource(this.listasElectorales);\r\n        this.dataSource.paginator = this.paginator;\r\n      });\r\n\r\n\r\n  }\r\n\r\n  abrirModal(lista?: ListaElectoral): void {\r\n    const dialogRef = this.dialog.open(ModalListasComponent, {\r\n      data: {\r\n        eleccion: { lista },\r\n      },\r\n      width: '600px',\r\n      panelClass: 'custom-modal-container', // Agrega la clase CSS personalizada al panelClass,\r\n\r\n    });\r\n\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.zone.run(() => {\r\n        console.log('El modal se cerró');\r\n        this.loadData();\r\n      });\r\n    });\r\n\r\n\r\n  }\r\n\r\n  borrarListaElectoral(l: ListaElectoral) {\r\n\r\n    Swal.fire({\r\n      title: '¿Estás seguro?',\r\n      text: 'Esta acción no se puede deshacer',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Sí, borrar',\r\n      cancelButtonText: 'Cancelar'\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        // Lógica para borrar la elección\r\n        // ...\r\n        this.abmService.delete(l).subscribe(\r\n          res => {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              title: 'Lista Borrada borrada',\r\n              text: 'La lista elecotral ha sido borrada exitosamente'\r\n            });\r\n            this.loadData();\r\n          },\r\n          err => {\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Error al borrar escuela',\r\n              text: 'Ha ocurrido un error al borrar la mesa'\r\n            });\r\n            console.log(err);\r\n          }\r\n        );\r\n      }\r\n    });\r\n\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SetupEleccionRoutingModule } from './setup-eleccion-routing.module';\r\nimport { LayoutComponent } from 'src/app/setup-eleccion/layout/layout.component';\r\nimport { MaterialModule } from 'src/app/Shared/modules/material.module';\r\nimport { SidebarSetupComponent } from './sidebar-setup/sidebar-setup.component';\r\nimport { FiscalesMesasComponent } from './fiscales-mesas/fiscales-mesas.component';\r\nimport { FiscalesGeneralesComponent } from './fiscales-generales/fiscales-generales.component';\r\nimport { FiscalMesaModalComponent } from './fiscales-mesas/fiscal-mesa-modal/fiscal-mesa-modal.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FiscalGeneralModalComponent } from './fiscales-generales/fiscal-general-modal/fiscal-general-modal.component';\r\nimport { ListasElectoralesComponent } from './listas-electorales/listas-electorales.component';\r\nimport { ModalListasComponent } from './listas-electorales/modal-listas/modal-listas.component';\r\nimport { FilterPartidosPipe } from '../Shared/pipes/filter-partidos.pipe';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LayoutComponent,\r\n    SidebarSetupComponent,\r\n    FiscalesMesasComponent,\r\n    FiscalesGeneralesComponent,\r\n    FiscalMesaModalComponent,\r\n    FiscalGeneralModalComponent,\r\n    ListasElectoralesComponent,\r\n    ModalListasComponent,\r\n    FilterPartidosPipe // Agrega el pipe aquí\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SetupEleccionRoutingModule,\r\n    MaterialModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n\r\n})\r\nexport class SetupEleccionModule { }\r\n"],"x_google_ignoreList":[]}